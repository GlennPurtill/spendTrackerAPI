{"version":3,"file":"esm.browser.js","sources":["../../lib/errors/CustomError.ts","../../lib/errors/AuthApiError.ts","../../lib/errors/AuthPollStopError.ts","../../lib/errors/AuthSdkError.ts","../../lib/errors/OAuthError.ts","../../lib/errors/index.ts","../../lib/crypto/browser.ts","../../lib/crypto/base64.ts","../../lib/crypto/oidcHash.ts","../../lib/util/console.ts","../../lib/util/misc.ts","../../lib/util/object.ts","../../lib/util/types.ts","../../lib/util/url.ts","../../lib/crypto/verifyToken.ts","../../lib/constants.ts","../../lib/http/headers.ts","../../lib/http/request.ts","../../lib/tx/util.ts","../../lib/tx/api.ts","../../lib/tx/poll.ts","../../lib/tx/AuthTransaction.ts","../../lib/oidc/util/pkce.ts","../../lib/session.ts","../../lib/oidc/endpoints/authorize.ts","../../lib/oidc/endpoints/token.ts","../../lib/oidc/endpoints/well-known.ts","../../lib/oidc/util/browser.ts","../../lib/oidc/util/oauth.ts","../../lib/features.ts","../../lib/oidc/util/defaultTokenParams.ts","../../lib/oidc/util/errors.ts","../../lib/oidc/util/loginRedirect.ts","../../lib/oidc/util/oauthMeta.ts","../../lib/oidc/util/prepareTokenParams.ts","../../lib/oidc/util/refreshToken.ts","../../lib/oidc/util/urlParams.ts","../../lib/oidc/util/validateClaims.ts","../../lib/types/Transaction.ts","../../lib/idx/types/api.ts","../../lib/types/Token.ts","../../lib/oidc/util/validateToken.ts","../../lib/oidc/decodeToken.ts","../../lib/oidc/revokeToken.ts","../../lib/oidc/verifyToken.ts","../../lib/oidc/handleOAuthResponse.ts","../../lib/oidc/getToken.ts","../../lib/oidc/getWithoutPrompt.ts","../../lib/oidc/renewTokensWithRefresh.ts","../../lib/oidc/renewToken.ts","../../lib/oidc/renewTokens.ts","../../lib/oidc/getUserInfo.ts","../../lib/oidc/exchangeCodeForTokens.ts","../../lib/oidc/getWithPopup.ts","../../lib/oidc/getWithRedirect.ts","../../lib/oidc/parseFromUrl.ts","../../lib/crypto/webauthn.ts","../../lib/browser/browserStorage.ts","../../lib/clock.ts","../../lib/TokenManager.ts","../../lib/services/AutoRenewService.ts","../../lib/services/SyncStorageService.ts","../../lib/ServiceManager.ts","../../lib/PromiseQueue.ts","../../lib/browser/fingerprint.ts","../../lib/AuthStateManager.ts","../../lib/SavedObject.ts","../../lib/StorageManager.ts","../../lib/idx/types/idx-js.ts","../../lib/util/sharedStorage.ts","../../lib/TransactionManager.ts","../../lib/builderUtil.ts","../../lib/fetch/fetchRequest.ts","../../lib/options/browser.ts","../../lib/options/index.ts","../../lib/idx/transactionMeta.ts","../../lib/idx/interact.ts","../../lib/idx/idxState/v1/actionParser.ts","../../lib/idx/idxState/v1/generateIdxAction.ts","../../lib/idx/idxState/v1/remediationParser.ts","../../lib/idx/idxState/v1/idxResponseParser.ts","../../lib/idx/idxState/v1/makeIdxState.ts","../../lib/idx/idxState/v1/parsers.ts","../../lib/idx/idxState/index.ts","../../lib/idx/introspect.ts","../../lib/idx/remediators/util.ts","../../lib/idx/authenticator/util.ts","../../lib/idx/remediators/Base/Remediator.ts","../../lib/idx/authenticator/Authenticator.ts","../../lib/idx/authenticator/VerificationCodeAuthenticator.ts","../../lib/idx/authenticator/OktaVerifyTotp.ts","../../lib/idx/authenticator/OktaPassword.ts","../../lib/idx/authenticator/SecurityQuestionEnrollment.ts","../../lib/idx/authenticator/SecurityQuestionVerification.ts","../../lib/idx/authenticator/WebauthnEnrollment.ts","../../lib/idx/authenticator/WebauthnVerification.ts","../../lib/idx/authenticator/getAuthenticator.ts","../../lib/idx/remediators/Base/VerifyAuthenticator.ts","../../lib/idx/remediators/EnrollAuthenticator.ts","../../lib/idx/remediators/EnrollPoll.ts","../../lib/idx/remediators/SelectEnrollmentChannel.ts","../../lib/idx/remediators/EnrollmentChannelData.ts","../../lib/idx/remediators/ChallengeAuthenticator.ts","../../lib/idx/remediators/ChallengePoll.ts","../../lib/idx/remediators/ResetAuthenticator.ts","../../lib/idx/remediators/EnrollProfile.ts","../../lib/idx/remediators/Identify.ts","../../lib/idx/remediators/ReEnrollAuthenticator.ts","../../lib/idx/remediators/RedirectIdp.ts","../../lib/idx/remediators/Base/SelectAuthenticator.ts","../../lib/idx/remediators/SelectAuthenticatorAuthenticate.ts","../../lib/idx/remediators/SelectAuthenticatorEnroll.ts","../../lib/idx/remediators/SelectAuthenticatorUnlockAccount.ts","../../lib/idx/remediators/SelectEnrollProfile.ts","../../lib/idx/remediators/Base/AuthenticatorData.ts","../../lib/idx/remediators/AuthenticatorVerificationData.ts","../../lib/idx/remediators/AuthenticatorEnrollmentData.ts","../../lib/idx/remediators/Skip.ts","../../lib/idx/remediators/GenericRemediator/util.ts","../../lib/idx/remediators/GenericRemediator/GenericRemediator.ts","../../lib/idx/util.ts","../../lib/idx/remediate.ts","../../lib/idx/flow/AuthenticationFlow.ts","../../lib/idx/flow/PasswordRecoveryFlow.ts","../../lib/idx/flow/RegistrationFlow.ts","../../lib/idx/flow/AccountUnlockFlow.ts","../../lib/idx/flow/FlowSpecification.ts","../../lib/idx/run.ts","../../lib/idx/authenticate.ts","../../lib/idx/cancel.ts","../../lib/idx/emailVerify.ts","../../lib/idx/proceed.ts","../../lib/idx/poll.ts","../../lib/idx/startTransaction.ts","../../lib/idx/register.ts","../../lib/idx/recoverPassword.ts","../../lib/idx/handleInteractionCodeRedirect.ts","../../lib/idx/unlockAccount.ts","../../lib/OktaUserAgent.ts","../../lib/OktaAuth.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport default class CustomError extends Error {\n  constructor(message: string) {\n    // https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n    super(message); // 'Error' breaks prototype chain here\n    Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\nimport { APIError, FieldError, HttpResponse } from '../types';\n\nexport default class AuthApiError extends CustomError implements APIError {\n  errorSummary: string;\n  errorCode?: string;\n  errorLink?: string;\n  errorId?: string;\n  errorCauses?: Array<FieldError>;\n  xhr?: HttpResponse;\n\n  constructor(err: APIError, xhr?: HttpResponse) {\n    const message = err.errorSummary;\n    super(message);\n\n    this.name = 'AuthApiError';\n    this.errorSummary = err.errorSummary;\n    this.errorCode = err.errorCode;\n    this.errorLink = err.errorLink;\n    this.errorId = err.errorId;\n    this.errorCauses = err.errorCauses;\n\n    if (xhr) {\n      this.xhr = xhr;\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\n\nexport default class AuthPollStopError extends CustomError {\n  constructor() {\n    const message = 'The poll was stopped by the sdk';\n    super(message);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\nimport { APIError, FieldError } from '../types';\n\nexport default class AuthSdkError extends CustomError implements APIError {\n  errorSummary: string;\n  errorCode: string;\n  errorLink: string;\n  errorId: string;\n  errorCauses: Array<FieldError>;\n  xhr?: XMLHttpRequest;\n\n  constructor(msg: string, xhr?: XMLHttpRequest) {\n    super(msg);\n    this.name = 'AuthSdkError';\n    this.errorCode = 'INTERNAL';\n    this.errorSummary = msg;\n    this.errorLink = 'INTERNAL';\n    this.errorId = 'INTERNAL';\n    this.errorCauses = [];\n    if (xhr) {\n      this.xhr = xhr;\n    }\n  }\n}\n","/* eslint-disable camelcase */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\n\nexport default class OAuthError extends CustomError {\n  errorCode: string;\n  errorSummary: string;\n\n  // for widget / idx-js backward compatibility\n  error: string;\n  error_description: string;\n\n  constructor(errorCode: string, summary: string) {\n    super(summary);\n\n    this.name = 'OAuthError';\n    this.errorCode = errorCode;\n    this.errorSummary = summary;\n\n    // for widget / idx-js backward compatibility\n    this.error = errorCode;\n    this.error_description = summary;\n  }\n}\n\n","\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthApiError from './AuthApiError';\nimport AuthPollStopError from './AuthPollStopError';\nimport AuthSdkError from './AuthSdkError';\nimport OAuthError from './OAuthError';\n\nfunction isAuthApiError(obj: any): obj is AuthApiError {\n  return (obj instanceof AuthApiError);\n}\n\nfunction isOAuthError(obj: any): obj is OAuthError {\n  return (obj instanceof OAuthError);\n}\n\nexport {\n  isAuthApiError,\n  isOAuthError,\n  AuthApiError,\n  AuthPollStopError,\n  AuthSdkError,\n  OAuthError\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* global atob, btoa, crypto */\nconst a = function(str) { return atob(str); };\nconst b = function (str) { return btoa(str); };\nconst c = typeof crypto === 'undefined' ? null : crypto;\n\nexport { a as atob, b as btoa, c as webcrypto };\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { AuthSdkError } from '../errors';\nimport { atob, btoa } from './webcrypto';\n\n// converts a string to base64 (url/filename safe variant)\nexport function stringToBase64Url(str) {\n  var b64 = btoa(str);\n  return base64ToBase64Url(b64);\n}\n\n// converts a standard base64-encoded string to a \"url/filename safe\" variant\nexport function base64ToBase64Url(b64) {\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\n\n// converts a \"url/filename safe\" base64 string to a \"standard\" base64 string\nexport function base64UrlToBase64(b64u) {\n  return b64u.replace(/-/g, '+').replace(/_/g, '/');\n}\n\nexport function base64UrlToString(b64u) {\n  var b64 = base64UrlToBase64(b64u);\n  switch (b64.length % 4) {\n    case 0:\n      break;\n    case 2:\n      b64 += '==';\n      break;\n    case 3:\n      b64 += '=';\n      break;\n    default:\n      throw new AuthSdkError('Not a valid Base64Url');\n  }\n  var utf8 = atob(b64);\n  try {\n    return decodeURIComponent(escape(utf8));\n  } catch (e) {\n    return utf8;\n  }\n}\n\nexport function stringToBuffer(str) {\n  var buffer = new Uint8Array(str.length);\n  for (var i = 0; i < str.length; i++) {\n    buffer[i] = str.charCodeAt(i);\n  }\n  return buffer;\n}\n\nexport function base64UrlDecode(str) {\n  return atob(base64UrlToBase64(str));\n}\n\n// Converts base64 string to binary data view\nexport function base64UrlToBuffer(b64u) {\n  return Uint8Array.from(base64UrlDecode(b64u), (c: string) => c.charCodeAt(0));\n}\n\n// Converts an ArrayBuffer object that contains binary data to base64 encoded string\nexport function bufferToBase64Url(bin) {\n  return btoa(new Uint8Array(bin).reduce((s, byte) => s + String.fromCharCode(byte), ''));\n}\n\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* global TextEncoder */\nimport { stringToBase64Url } from './base64';\nimport { webcrypto } from './webcrypto';\n\nexport function getOidcHash(str) {  \n  var buffer = new TextEncoder().encode(str);\n  return webcrypto.subtle.digest('SHA-256', buffer).then(function(arrayBuffer) {\n    var intBuffer = new Uint8Array(arrayBuffer);\n    var firstHalf = intBuffer.slice(0, 16);\n    var hash = String.fromCharCode.apply(null, firstHalf as unknown as number[]);\n    var b64u = stringToBase64Url(hash); // url-safe base64 variant\n    return b64u;\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* global window */\n\nexport function getNativeConsole() {\n  if (typeof window !== 'undefined') {\n    return window.console;\n  } else if (typeof console !== 'undefined') {\n    return console;\n  } else {\n    return undefined;\n  }\n}\n\nexport function getConsole() {\n  var nativeConsole = getNativeConsole();\n  if (nativeConsole && nativeConsole.log) {\n    return nativeConsole;\n  }\n  return {\n    log: function() {},\n    warn: function() {},\n    group: function() {},\n    groupEnd: function() {}\n  };\n}\n\nexport function warn(text) {\n  /* eslint-disable no-console */\n  getConsole().warn('[okta-auth-sdk] WARN: ' + text);\n  /* eslint-enable */\n}\n\nexport function deprecate(text) {\n  /* eslint-disable no-console */\n  getConsole().warn('[okta-auth-sdk] DEPRECATION: ' + text);\n  /* eslint-enable */\n}\n\nexport function deprecateWrap(text, fn) {\n  return function() {\n    deprecate(text);\n    return fn.apply(null, arguments);\n  };\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isoToUTCString(str) {\n  var parts = str.match(/\\d+/g),\n      isoTime = Date.UTC(parts[0], parts[1] - 1, parts[2], parts[3], parts[4], parts[5]),\n      isoDate = new Date(isoTime);\n\n  return isoDate.toUTCString();\n}\n\nexport function genRandomString(length) {\n  var randomCharset = 'abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var random = '';\n  for (var c = 0, cl = randomCharset.length; c < length; ++c) {\n    random += randomCharset[Math.floor(Math.random() * cl)];\n  }\n  return random;\n}\n\nexport function delay(ms) {\n  return new Promise(function(resolve) {\n    setTimeout(resolve, ms);\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function bind(fn, ctx) {\n  var additionalArgs = Array.prototype.slice.call(arguments, 2);\n  return function() {\n    var args = Array.prototype.slice.call(arguments);\n    args = additionalArgs.concat(args);\n    return fn.apply(ctx, args);\n  };\n}\n\n// TODO: replace all references with `Object.assign` then remove this function\nexport function extend() {\n  // First object will be modified!\n  var obj1 = arguments[0];\n  // Properties from other objects will be copied over\n  var objArray = [].slice.call(arguments, 1);\n  objArray.forEach(function(obj) {\n    for (var prop in obj) {\n      // copy over all properties with defined values\n      if (Object.prototype.hasOwnProperty.call(obj, prop) && obj[prop] !== undefined) {\n        obj1[prop] = obj[prop];\n      }\n    }\n  });\n  return obj1; // return the modified object\n}\n\nexport function removeNils(obj) {\n  var cleaned = {};\n  for (var prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      var value = obj[prop];\n      if (value !== null && value !== undefined) {\n        cleaned[prop] = value;\n      }\n    }\n  }\n  return cleaned;\n}\n\nexport function clone(obj) {\n  if (obj) {\n    var str = JSON.stringify(obj);\n    if (str) {\n      return JSON.parse(str);\n    }\n  }\n  return obj;\n}\n\n// Analogous to _.omit\nexport function omit(obj, ...props: any[]) {\n  // var props = Array.prototype.slice.call(arguments, 1);\n  var newobj = {};\n  for (var p in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, p) && props.indexOf(p) == -1) {\n      newobj[p] = obj[p];\n    }\n  }\n  return clone(newobj);\n}\n\nexport function find(collection, searchParams) {\n  var c = collection.length;\n  while (c--) {\n    var item = collection[c];\n    var found = true;\n    for (var prop in searchParams) {\n      if (!Object.prototype.hasOwnProperty.call(searchParams, prop)) {\n        continue;\n      }\n      if (item[prop] !== searchParams[prop]) {\n        found = false;\n        break;\n      }\n    }\n    if (found) {\n      return item;\n    }\n  }\n}\n\nexport function getLink(obj, linkName, altName?) {\n  if (!obj || !obj._links) {\n    return;\n  }\n\n  var link = clone(obj._links[linkName]);\n\n  // If a link has a name and we have an altName, return if they match\n  if (link && link.name && altName) {\n    if (link.name === altName) {\n      return link;\n    }\n  } else {\n    return link;\n  }\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isString(obj: any): obj is string {\n  return Object.prototype.toString.call(obj) === '[object String]';\n}\n\nexport function isObject(obj: any): obj is object {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isNumber(obj: any): obj is number {\n  return Object.prototype.toString.call(obj) === '[object Number]';\n}\n\nexport function isFunction(fn: any): fn is (...any: any[]) => any {\n  return !!fn && {}.toString.call(fn) === '[object Function]';\n}\n\nexport function isPromise(obj) {\n  return obj && obj.finally && (typeof obj.finally === 'function');\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isAbsoluteUrl(url) {\n  return /^(?:[a-z]+:)?\\/\\//i.test(url);\n}\n\nexport function toAbsoluteUrl(url = '', baseUrl) {\n  if (isAbsoluteUrl(url)) {\n    return url;\n  }\n  baseUrl = removeTrailingSlash(baseUrl);\n  return url[0] === '/' ? `${baseUrl}${url}` : `${baseUrl}/${url}`;\n}\n\nexport function toRelativeUrl(url = '', baseUrl) {\n  if (isAbsoluteUrl(url)) {\n    url = url.substring(baseUrl.length);\n  }\n\n  return url[0] === '/' ? url : `/${url}`;\n}\n\nexport function toQueryString(obj) {\n  var str = [];\n  if (obj !== null) {\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key) &&\n          obj[key] !== undefined &&\n          obj[key] !== null) {\n        str.push(key + '=' + encodeURIComponent(obj[key]) as never);\n      }\n    }\n  }\n  if (str.length) {\n    return '?' + str.join('&');\n  } else {\n    return '';\n  }\n}\n\nexport function removeTrailingSlash(path) {\n  if (!path) {\n    return;\n  }\n  // Remove any whitespace before or after string\n  var trimmed = path.replace(/^\\s+|\\s+$/gm,'');\n  // Remove trailing slash(es)\n  trimmed = trimmed.replace(/\\/+$/, '');\n\n  return trimmed;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { clone } from '../util';\nimport { stringToBuffer, base64UrlDecode } from './base64';\nimport { webcrypto } from './webcrypto';\n\nexport function verifyToken(idToken, key) {\n  key = clone(key);\n\n  var format = 'jwk';\n  var algo = {\n    name: 'RSASSA-PKCS1-v1_5',\n    hash: { name: 'SHA-256' }\n  };\n  var extractable = true;\n  var usages = ['verify'];\n\n  // https://connect.microsoft.com/IE/feedback/details/2242108/webcryptoapi-importing-jwk-with-use-field-fails\n  // This is a metadata tag that specifies the intent of how the key should be used.\n  // It's not necessary to properly verify the jwt's signature.\n  delete key.use;\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return webcrypto.subtle.importKey(\n    format,\n    key,\n    algo,\n    extractable,\n    usages\n  )\n  .then(function(cryptoKey) {\n    var jwt = idToken.split('.');\n    var payload = stringToBuffer(jwt[0] + '.' + jwt[1]);\n    var b64Signature = base64UrlDecode(jwt[2]);\n    var signature = stringToBuffer(b64Signature);\n\n    return webcrypto.subtle.verify(\n      algo,\n      cryptoKey,\n      signature,\n      payload\n    );\n  });\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport const STATE_TOKEN_KEY_NAME = 'oktaStateToken';\nexport const DEFAULT_POLLING_DELAY = 500;\nexport const DEFAULT_MAX_CLOCK_SKEW = 300;\nexport const DEFAULT_CACHE_DURATION = 86400;\nexport const REDIRECT_OAUTH_PARAMS_NAME = 'okta-oauth-redirect-params';\nexport const REDIRECT_STATE_COOKIE_NAME = 'okta-oauth-state';\nexport const REDIRECT_NONCE_COOKIE_NAME = 'okta-oauth-nonce';\nexport const TOKEN_STORAGE_NAME = 'okta-token-storage';\nexport const CACHE_STORAGE_NAME = 'okta-cache-storage';\nexport const PKCE_STORAGE_NAME = 'okta-pkce-storage';\nexport const TRANSACTION_STORAGE_NAME = 'okta-transaction-storage';\nexport const SHARED_TRANSACTION_STORAGE_NAME = 'okta-shared-transaction-storage';\nexport const ORIGINAL_URI_STORAGE_NAME = 'okta-original-uri-storage';\nexport const IDX_RESPONSE_STORAGE_NAME = 'okta-idx-response-storage';\nexport const ACCESS_TOKEN_STORAGE_KEY = 'accessToken';\nexport const ID_TOKEN_STORAGE_KEY =  'idToken';\nexport const REFRESH_TOKEN_STORAGE_KEY =  'refreshToken';\nexport const REFERRER_PATH_STORAGE_KEY = 'referrerPath';\n\n// Code verifier: Random URL-safe string with a minimum length of 43 characters.\n// Code challenge: Base64 URL-encoded SHA-256 hash of the code verifier.\nexport const MIN_VERIFIER_LENGTH = 43;\nexport const MAX_VERIFIER_LENGTH = 128;\nexport const DEFAULT_CODE_CHALLENGE_METHOD = 'S256';\n\nexport const IDX_API_VERSION = '1.0.0';","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { OktaAuthInterface } from '../types';\n\nexport function setRequestHeader(authClient: OktaAuthInterface, headerName, headerValue) {\n  authClient.options.headers = authClient.options.headers || {};\n  authClient.options.headers[headerName] = headerValue;\n}","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint-disable complexity */\nimport { isString, clone, isAbsoluteUrl, removeNils } from '../util';\nimport { STATE_TOKEN_KEY_NAME, DEFAULT_CACHE_DURATION } from '../constants';\nimport {\n  OktaAuthHttpInterface,\n  RequestOptions,\n  FetchOptions,\n  RequestData\n} from '../types';\nimport { AuthApiError, OAuthError } from '../errors';\n\nexport function httpRequest(sdk: OktaAuthHttpInterface, options: RequestOptions): Promise<any> {\n  options = options || {};\n  var url = options.url,\n      method = options.method,\n      args = options.args,\n      saveAuthnState = options.saveAuthnState,\n      accessToken = options.accessToken,\n      withCredentials = options.withCredentials === true, // default value is false\n      storageUtil = sdk.options.storageUtil,\n      storage = storageUtil!.storage,\n      httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies);\n\n  if (options.cacheResponse) {\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[url as string];\n    if (cachedResponse && Date.now()/1000 < cachedResponse.expiresAt) {\n      return Promise.resolve(cachedResponse.response);\n    }\n  }\n\n  var oktaUserAgentHeader = sdk._oktaUserAgent.getHttpHeader();\n  var headers: HeadersInit = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n    ...oktaUserAgentHeader\n  };\n  Object.assign(headers, sdk.options.headers, options.headers);\n  headers = removeNils(headers) as HeadersInit;\n\n  if (accessToken && isString(accessToken)) {\n    headers['Authorization'] = 'Bearer ' + accessToken;\n  }\n\n  var ajaxOptions: FetchOptions = {\n    headers,\n    data: args || undefined,\n    withCredentials\n  };\n\n  var err, res;\n  return sdk.options.httpRequestClient!(method!, url!, ajaxOptions)\n    .then(function(resp) {\n      res = resp.responseText;\n      if (res && isString(res)) {\n        res = JSON.parse(res);\n        if (res && typeof res === 'object' && !res.headers) {\n          res.headers = resp.headers;\n        }\n      }\n\n      if (saveAuthnState) {\n        if (!res.stateToken) {\n          storage.delete(STATE_TOKEN_KEY_NAME);\n        }\n      }\n\n      if (res && res.stateToken && res.expiresAt) {\n        storage.set(STATE_TOKEN_KEY_NAME, res.stateToken, res.expiresAt, sdk.options.cookies!);\n      }\n\n      if (res && options.cacheResponse) {\n        httpCache.updateStorage(url!, {\n          expiresAt: Math.floor(Date.now()/1000) + DEFAULT_CACHE_DURATION,\n          response: res\n        });\n      }\n\n      return res;\n    })\n    .catch(function(resp) {\n      var serverErr = resp.responseText || {};\n      if (isString(serverErr)) {\n        try {\n          serverErr = JSON.parse(serverErr);\n        } catch (e) {\n          serverErr = {\n            errorSummary: 'Unknown error'\n          };\n        }\n      }\n\n      if (resp.status >= 500) {\n        serverErr.errorSummary = 'Unknown error';\n      }\n\n      if (sdk.options.transformErrorXHR) {\n        resp = sdk.options.transformErrorXHR(clone(resp));\n      }\n\n      if (serverErr.error && serverErr.error_description) {\n        err = new OAuthError(serverErr.error, serverErr.error_description);\n      } else {\n        err = new AuthApiError(serverErr, resp);\n      }\n\n      if (err.errorCode === 'E0000011') {\n        storage.delete(STATE_TOKEN_KEY_NAME);\n      }\n\n      throw err;\n    });\n}\n\nexport function get(sdk: OktaAuthHttpInterface, url: string, options?: RequestOptions) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var getOptions = {\n    url: url,\n    method: 'GET'\n  };\n  Object.assign(getOptions, options);\n  return httpRequest(sdk, getOptions);\n}\n\nexport function post(sdk: OktaAuthHttpInterface, url: string, args?: RequestData, options?: RequestOptions) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var postOptions = {\n    url: url,\n    method: 'POST',\n    args: args,\n    saveAuthnState: true\n  };\n  Object.assign(postOptions, options);\n  return httpRequest(sdk, postOptions);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n\nimport { TransactionState } from './TransactionState';\n\nexport function addStateToken(res, options?) {\n  var builtArgs = {} as TransactionState;\n  Object.assign(builtArgs, options);\n\n  // Add the stateToken if one isn't passed and we have one\n  if (!builtArgs.stateToken && res.stateToken) {\n    builtArgs.stateToken = res.stateToken;\n  }\n\n  return builtArgs;\n}\n\nexport function getStateToken(res) {\n  return addStateToken(res);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint-disable complexity, max-statements */\nimport { post } from '../http';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport { STATE_TOKEN_KEY_NAME } from '../constants';\nimport { addStateToken } from './util';\n\nexport function transactionStatus(sdk, args) {\n  args = addStateToken(sdk, args);\n  return post(sdk, sdk.getIssuerOrigin() + '/api/v1/authn', args, { withCredentials: true });\n}\n\nexport function resumeTransaction(sdk, args) {\n  if (!args || !args.stateToken) {\n    var stateToken = sdk.tx.exists._get(STATE_TOKEN_KEY_NAME);\n    if (stateToken) {\n      args = {\n        stateToken: stateToken\n      };\n    } else {\n      return Promise.reject(new AuthSdkError('No transaction to resume'));\n    }\n  }\n  return sdk.tx.status(args)\n    .then(function(res) {\n      return sdk.tx.createTransaction(res);\n    });\n}\n\nexport function introspectAuthn (sdk, args) {\n  if (!args || !args.stateToken) {\n    var stateToken = sdk.tx.exists._get(STATE_TOKEN_KEY_NAME);\n    if (stateToken) {\n      args = {\n        stateToken: stateToken\n      };\n    } else {\n      return Promise.reject(new AuthSdkError('No transaction to evaluate'));\n    }\n  }\n  return transactionStep(sdk, args)\n    .then(function (res) {\n      return sdk.tx.createTransaction(res);\n    });\n}\n\nexport function transactionStep(sdk, args) {\n  args = addStateToken(sdk, args);\n  // v1 pipeline introspect API\n  return post(sdk, sdk.getIssuerOrigin() + '/api/v1/authn/introspect', args, { withCredentials: true });\n}\n\nexport function transactionExists(sdk) {\n  // We have a cookie state token\n  return !!sdk.tx.exists._get(STATE_TOKEN_KEY_NAME);\n}\n\nexport function postToTransaction(sdk, url, args, options?) {\n  options = Object.assign({ withCredentials: true }, options);\n  return post(sdk, url, args, options)\n    .then(function(res) {\n      return sdk.tx.createTransaction(res);\n    });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { post } from '../http';\nimport { isNumber, isObject, getLink, toQueryString, delay as delayFn } from '../util';\nimport { DEFAULT_POLLING_DELAY } from '../constants';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport AuthPollStopError from '../errors/AuthPollStopError';\nimport { TransactionState } from './TransactionState';\nimport { getStateToken } from './util';\n\nexport interface PollOptions {\n  delay?: number;\n  rememberDevice?: boolean;\n  autoPush?: boolean;\n  transactionCallBack?: (TransactionState) => void;\n}\n\nexport function getPollFn(sdk, res: TransactionState, ref) {\n  return function (options: PollOptions | number) {\n    var delay;\n    var rememberDevice;\n    var autoPush;\n    var transactionCallBack;\n\n    if (isNumber(options)) {\n      delay = options;\n    } else if (isObject(options)) {\n      options = options as PollOptions;\n      delay = options.delay;\n      rememberDevice = options.rememberDevice;\n      autoPush = options.autoPush;\n      transactionCallBack = options.transactionCallBack;\n    }\n\n    if (!delay && delay !== 0) {\n      delay = DEFAULT_POLLING_DELAY;\n    }\n\n    // Get the poll function\n    var pollLink = getLink(res, 'next', 'poll');\n    // eslint-disable-next-line complexity\n    function pollFn() {\n      var opts = {} as PollOptions;\n      if (typeof autoPush === 'function') {\n        try {\n          opts.autoPush = !!autoPush();\n        }\n        catch (e) {\n          return Promise.reject(new AuthSdkError('AutoPush resulted in an error.'));\n        }\n      }\n      else if (autoPush !== undefined && autoPush !== null) {\n        opts.autoPush = !!autoPush;\n      }\n      if (typeof rememberDevice === 'function') {\n        try {\n          opts.rememberDevice = !!rememberDevice();\n        }\n        catch (e) {\n          return Promise.reject(new AuthSdkError('RememberDevice resulted in an error.'));\n        }\n      }\n      else if (rememberDevice !== undefined && rememberDevice !== null) {\n        opts.rememberDevice = !!rememberDevice;\n      }\n\n      var href = pollLink.href + toQueryString(opts);\n      return post(sdk, href, getStateToken(res), {\n        saveAuthnState: false,\n        withCredentials: true\n      });\n    }\n\n    ref.isPolling = true;\n\n    var retryCount = 0;\n    var recursivePoll = function () {\n      // If the poll was manually stopped during the delay\n      if (!ref.isPolling) {\n        return Promise.reject(new AuthPollStopError());\n      }\n      return pollFn()\n        .then(function (pollRes) {\n          // Reset our retry counter on success\n          retryCount = 0;\n\n          // If we're still waiting\n          if (pollRes.factorResult && pollRes.factorResult === 'WAITING') {\n\n            // If the poll was manually stopped while the pollFn was called\n            if (!ref.isPolling) {\n              throw new AuthPollStopError();\n            }\n\n            if (typeof transactionCallBack === 'function') {\n              transactionCallBack(pollRes);\n            }\n\n            // Continue poll\n            return delayFn(delay).then(recursivePoll);\n\n          } else {\n            // Any non-waiting result, even if polling was stopped\n            // during a request, will return\n            ref.isPolling = false;\n            return sdk.tx.createTransaction(pollRes);\n          }\n        })\n        .catch(function(err) {\n          // Exponential backoff, up to 16 seconds\n          if (err.xhr &&\n              (err.xhr.status === 0 || err.xhr.status === 429) &&\n              retryCount <= 4) {\n            var delayLength = Math.pow(2, retryCount) * 1000;\n            retryCount++;\n            return delayFn(delayLength)\n              .then(recursivePoll);\n          }\n          throw err;\n        });\n    };\n    return recursivePoll()\n      .catch(function(err) {\n        ref.isPolling = false;\n        throw err;\n      });\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { get } from '../http';\nimport { find, omit, toQueryString, clone, isObject } from '../util';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport { TransactionState } from './TransactionState';\nimport { addStateToken } from './util';\nimport { getPollFn } from './poll';\nimport { postToTransaction } from './api';\nimport { IdxStatus } from '../idx/types';\n\ninterface PostToTransactionParams {\n  autoPush?: boolean;\n  rememberDevice?: boolean;\n  updatePhone?: boolean;\n}\n\n// eslint-disable-next-line no-use-before-define\ntype AuthTransactionFunction = (obj?: any) => Promise<AuthTransaction>;\n\ninterface AuthTransactionFunctions {\n  // common\n  next?: AuthTransactionFunction;\n  cancel?: AuthTransactionFunction;\n  skip?: AuthTransactionFunction;\n  // locked_out\n  unlock?: AuthTransactionFunction;\n  // password\n  changePassword?: AuthTransactionFunction;\n  resetPassword?: AuthTransactionFunction;\n  // recovery\n  answer?: AuthTransactionFunction;\n  recovery?: AuthTransactionFunction;\n  // recovery_challenge\n  verify?: AuthTransactionFunction;\n  resend?: AuthTransactionFunction;\n  // mfa_enroll_activate\n  activate?: AuthTransactionFunction;\n  poll?: AuthTransactionFunction;\n  prev?: AuthTransactionFunction;\n}\n\nexport class AuthTransaction implements TransactionState, AuthTransactionFunctions {\n  next?: AuthTransactionFunction;\n  cancel?: AuthTransactionFunction;\n  skip?: AuthTransactionFunction;\n  unlock?: AuthTransactionFunction;\n  changePassword?: AuthTransactionFunction;\n  resetPassword?: AuthTransactionFunction;\n  answer?: AuthTransactionFunction;\n  recovery?: AuthTransactionFunction;\n  verify?: AuthTransactionFunction;\n  resend?: AuthTransactionFunction;\n  activate?: AuthTransactionFunction;\n  poll?: AuthTransactionFunction;\n  prev?: AuthTransactionFunction;\n\n  data?: TransactionState;\n  stateToken?: string;\n  sessionToken?: string;\n  status: string | IdxStatus;\n  user?: Record<string, any>;\n  factor?: Record<string, any>;\n  factors?: Array<Record<string, any> >;\n  policy?: Record<string, any>;\n  scopes?: Array<Record<string, any> >;\n  target?: Record<string, any>;\n  authentication?: Record<string, any>;\n  constructor(sdk, res: TransactionState | null = null) {\n    this.data = undefined;\n    this.status = undefined as unknown as string;\n    if (res) {\n      this.data = res;\n\n      if (this.data.interactionHandle) {\n        this.status = res.status;\n        return;\n      }\n\n      // Parse response from Authn V1\n      Object.assign(this, flattenEmbedded(sdk, res, res, {}));\n      delete this.stateToken;\n\n      // RECOVERY_CHALLENGE has some responses without _links.\n      // Without _links, we emulate cancel to make it intuitive\n      // to return to the starting state. We may remove this\n      // when OKTA-75434 is resolved\n      if (res.status === 'RECOVERY_CHALLENGE' && !res._links) {\n        this.cancel = function() {\n          return Promise.resolve(sdk.tx.createTransaction());\n        };\n      }\n    }\n  }\n}\n\nfunction link2fn(sdk, res, obj, link, ref) {\n  if (Array.isArray(link)) {\n    return function(name, opts?) {\n      if (!name) {\n        throw new AuthSdkError('Must provide a link name');\n      }\n\n      var lk = find(link, {name: name});\n      if (!lk) {\n        throw new AuthSdkError('No link found for that name');\n      }\n\n      return link2fn(sdk, res, obj, lk, ref)(opts);\n    };\n\n  } else if (link.hints &&\n      link.hints.allow &&\n      link.hints.allow.length === 1) {\n    var method = link.hints.allow[0];\n    switch (method) {\n\n      case 'GET':\n        return function() {\n          return get(sdk, link.href, { withCredentials: true });\n        };\n\n      case 'POST':\n        // eslint-disable-next-line max-statements,complexity\n        return function(opts: TransactionState) {\n          if (ref && ref.isPolling) {\n            ref.isPolling = false;\n          }\n\n          var data = addStateToken(res, opts);\n\n          if (res.status === 'MFA_ENROLL' || res.status === 'FACTOR_ENROLL') {\n            // Add factorType and provider\n            Object.assign(data, {\n              factorType: obj.factorType,\n              provider: obj.provider\n            });\n          }\n\n          var params = {} as PostToTransactionParams;\n          var autoPush = data.autoPush;\n          if (autoPush !== undefined) {\n            if (typeof autoPush === 'function') {\n              try {\n                params.autoPush = !!autoPush();\n              }\n              catch (e) {\n                return Promise.reject(new AuthSdkError('AutoPush resulted in an error.'));\n              }\n            }\n            else if (autoPush !== null) {\n              params.autoPush = !!autoPush;\n            }\n            data = omit(data, 'autoPush');\n          }\n\n          var rememberDevice = data.rememberDevice;\n          if (rememberDevice !== undefined) {\n            if (typeof rememberDevice === 'function') {\n              try {\n                params.rememberDevice = !!rememberDevice();\n              }\n              catch (e) {\n                return Promise.reject(new AuthSdkError('RememberDevice resulted in an error.'));\n              }\n            }\n            else if (rememberDevice !== null) {\n              params.rememberDevice = !!rememberDevice;\n            }\n            data = omit(data, 'rememberDevice');\n\n          } else if (data.profile &&\n                    data.profile.updatePhone !== undefined) {\n            if (data.profile.updatePhone) {\n              params.updatePhone = true;\n            }\n            data.profile = omit(data.profile, 'updatePhone');\n          }\n          var href = link.href + toQueryString(params);\n          return postToTransaction(sdk, href, data);\n        };\n    }\n  }\n}\n\nfunction links2fns(sdk, res, obj, ref) {\n  var fns = {} as AuthTransactionFunctions;\n  for (var linkName in obj._links) {\n    if (!Object.prototype.hasOwnProperty.call(obj._links, linkName)) {\n      continue;\n    }\n\n    var link = obj._links[linkName];\n    \n    if (linkName === 'next') {\n      linkName = link.name;\n    }\n\n    if (link.type) {\n      fns[linkName] = link;\n      continue;\n    }\n\n    switch (linkName) {\n      // poll is only found at the transaction\n      // level, so we don't need to pass the link\n      case 'poll':\n        fns.poll = getPollFn(sdk, res, ref);\n        break;\n\n      default:\n        var fn = link2fn(sdk, res, obj, link, ref);\n        if (fn) {\n          fns[linkName] = fn;\n        }\n    }\n  }\n  return fns;\n}\n\n// eslint-disable-next-line complexity\nfunction flattenEmbedded(sdk, res, obj, ref) {\n  obj = obj || res;\n  obj = clone(obj);\n\n  if (Array.isArray(obj)) {\n    var objArr = [];\n    for (var o = 0, ol = obj.length; o < ol; o++) {\n      objArr.push(flattenEmbedded(sdk, res, obj[o], ref) as never);\n    }\n    return objArr;\n  }\n\n  var embedded = obj._embedded || {};\n\n  for (var key in embedded) {\n    if (!Object.prototype.hasOwnProperty.call(embedded, key)) {\n      continue;\n    }\n\n    // Flatten any nested _embedded objects\n    if (isObject(embedded[key]) || Array.isArray(embedded[key])) {\n      embedded[key] = flattenEmbedded(sdk, res, embedded[key], ref);\n    }\n  }\n\n  // Convert any links on the embedded object\n  var fns = links2fns(sdk, res, obj, ref);\n  Object.assign(embedded, fns);\n\n  obj = omit(obj, '_embedded', '_links');\n  Object.assign(obj, embedded);\n  return obj;\n}\n","/*!\n * Copyright (c) 2019-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n /* eslint-disable complexity, max-statements */\nimport { stringToBase64Url, webcrypto } from '../../crypto';\nimport { MIN_VERIFIER_LENGTH, MAX_VERIFIER_LENGTH, DEFAULT_CODE_CHALLENGE_METHOD } from '../../constants';\n\nfunction dec2hex (dec) {\n  return ('0' + dec.toString(16)).substr(-2);\n}\n\nfunction getRandomString(length) {\n  var a = new Uint8Array(Math.ceil(length / 2));\n  webcrypto.getRandomValues(a);\n  var str = Array.from(a, dec2hex).join('');\n  return str.slice(0, length);\n}\n\nfunction generateVerifier(prefix?: string): string {\n  var verifier = prefix || '';\n  if (verifier.length < MIN_VERIFIER_LENGTH) {\n    verifier = verifier + getRandomString(MIN_VERIFIER_LENGTH - verifier.length);\n  }\n  return encodeURIComponent(verifier).slice(0, MAX_VERIFIER_LENGTH);\n}\n\nfunction computeChallenge(str: string): PromiseLike<any> {  \n  var buffer = new TextEncoder().encode(str);\n  return webcrypto.subtle.digest('SHA-256', buffer).then(function(arrayBuffer) {\n    var hash = String.fromCharCode.apply(null, new Uint8Array(arrayBuffer) as unknown as number[]);\n    var b64u = stringToBase64Url(hash); // url-safe base64 variant\n    return b64u;\n  });\n}\n\nexport default {\n  DEFAULT_CODE_CHALLENGE_METHOD,\n  generateVerifier,\n  computeChallenge\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window */\nimport { omit, getLink, toQueryString } from './util';\nimport { get, post, httpRequest } from './http';\n\nfunction sessionExists(sdk) {\n  return sdk.session.get()\n    .then(function(res) {\n      if (res.status === 'ACTIVE') {\n        return true;\n      }\n      return false;\n    })\n    .catch(function() {\n      return false;\n    });\n}\n\nfunction getSession(sdk) { \n  return get(sdk, '/api/v1/sessions/me', { withCredentials: true })\n  .then(function(session) {\n    var res = omit(session, '_links');\n\n    res.refresh = function() {\n      return post(sdk, getLink(session, 'refresh').href, {}, { withCredentials: true });\n    };\n\n    res.user = function() {\n      return get(sdk, getLink(session, 'user').href, { withCredentials: true });\n    };\n\n    return res;\n  })\n  .catch(function() {\n    // Return INACTIVE status on failure\n    return {status: 'INACTIVE'};\n  });\n}\n\nfunction closeSession(sdk) {\n  return httpRequest(sdk, {\n    url: sdk.getIssuerOrigin() + '/api/v1/sessions/me',\n    method: 'DELETE',\n    withCredentials: true\n  });\n}\n\nfunction refreshSession(sdk) {\n  return post(sdk, '/api/v1/sessions/me/lifecycle/refresh', {}, { withCredentials: true });\n}\n\nfunction setCookieAndRedirect(sdk, sessionToken, redirectUrl) {\n  redirectUrl = redirectUrl || window.location.href;\n  window.location.assign(sdk.getIssuerOrigin() + '/login/sessionCookieRedirect' +\n    toQueryString({\n      checkAccountSetupComplete: true,\n      token: sessionToken,\n      redirectUrl: redirectUrl\n    }));\n}\n\nexport {\n  sessionExists,\n  getSession,\n  closeSession,\n  refreshSession,\n  setCookieAndRedirect\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { isString, removeNils, toQueryString } from '../../util';\nimport { AuthSdkError } from '../../errors';\nimport { OAuthParams, TokenParams } from '../../types';\n\nexport function convertTokenParamsToOAuthParams(tokenParams: TokenParams) {\n  // Quick validation\n  if (!tokenParams.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n\n  if (isString(tokenParams.responseType) && tokenParams.responseType.indexOf(' ') !== -1) {\n    throw new AuthSdkError('Multiple OAuth responseTypes must be defined as an array');\n  }\n\n  // Convert our params to their actual OAuth equivalents\n  var oauthParams: OAuthParams = {\n    'client_id': tokenParams.clientId,\n    'code_challenge': tokenParams.codeChallenge,\n    'code_challenge_method': tokenParams.codeChallengeMethod,\n    'display': tokenParams.display,\n    'idp': tokenParams.idp,\n    'idp_scope': tokenParams.idpScope,\n    'login_hint': tokenParams.loginHint,\n    'max_age': tokenParams.maxAge,\n    'nonce': tokenParams.nonce,\n    'prompt': tokenParams.prompt,\n    'redirect_uri': tokenParams.redirectUri,\n    'response_mode': tokenParams.responseMode,\n    'response_type': tokenParams.responseType,\n    'sessionToken': tokenParams.sessionToken,\n    'state': tokenParams.state,\n  };\n  oauthParams = removeNils(oauthParams) as OAuthParams;\n\n  ['idp_scope', 'response_type'].forEach(function (mayBeArray) {\n    if (Array.isArray(oauthParams[mayBeArray])) {\n      oauthParams[mayBeArray] = oauthParams[mayBeArray].join(' ');\n    }\n  });\n\n  if (tokenParams.responseType!.indexOf('id_token') !== -1 &&\n    tokenParams.scopes!.indexOf('openid') === -1) {\n    throw new AuthSdkError('openid scope must be specified in the scopes argument when requesting an id_token');\n  } else {\n    oauthParams.scope = tokenParams.scopes!.join(' ');\n  }\n\n  return oauthParams;\n}\n\nexport function buildAuthorizeParams(tokenParams: TokenParams) {\n  var oauthQueryParams = convertTokenParamsToOAuthParams(tokenParams);\n  return toQueryString({ \n    ...oauthQueryParams, \n    ...(tokenParams.extraParams && { ...tokenParams.extraParams })\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from '../../errors';\nimport { CustomUrls, OAuthParams, OAuthResponse, OktaAuthHttpInterface, RefreshToken, TokenParams } from '../../types';\nimport { removeNils, toQueryString } from '../../util';\nimport { httpRequest } from '../../http';\n\nfunction validateOptions(options: TokenParams) {\n  // Quick validation\n  if (!options.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n\n  if (!options.redirectUri) {\n    throw new AuthSdkError('The redirectUri passed to /authorize must also be passed to /token');\n  }\n\n  if (!options.authorizationCode && !options.interactionCode) {\n    throw new AuthSdkError('An authorization code (returned from /authorize) must be passed to /token');\n  }\n\n  if (!options.codeVerifier) {\n    throw new AuthSdkError('The \"codeVerifier\" (generated and saved by your app) must be passed to /token');\n  }\n}\n\nfunction getPostData(sdk, options: TokenParams): string {\n  // Convert Token params to OAuth params, sent to the /token endpoint\n  var params: OAuthParams = removeNils({\n    'client_id': options.clientId,\n    'redirect_uri': options.redirectUri,\n    'grant_type': options.interactionCode ? 'interaction_code' : 'authorization_code',\n    'code_verifier': options.codeVerifier\n  });\n\n  if (options.interactionCode) {\n    params['interaction_code'] = options.interactionCode;\n  } else if (options.authorizationCode) {\n    params.code = options.authorizationCode;\n  }\n\n  const { clientSecret } = sdk.options;\n  if (clientSecret) {\n    params['client_secret'] = clientSecret;\n  }\n\n  // Encode as URL string\n  return toQueryString(params).slice(1);\n}\n\n// exchange authorization code for an access token\nexport function postToTokenEndpoint(sdk, options: TokenParams, urls: CustomUrls): Promise<OAuthResponse> {\n  validateOptions(options);\n  var data = getPostData(sdk, options);\n\n  const headers = {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  };\n\n  return httpRequest(sdk, {\n    url: urls.tokenUrl,\n    method: 'POST',\n    args: data,\n    headers\n  });\n}\n\nexport function postRefreshToken(\n  sdk: OktaAuthHttpInterface,\n  options: TokenParams,\n  refreshToken: RefreshToken\n): Promise<OAuthResponse> {\n  return httpRequest(sdk, {\n    url: refreshToken.tokenUrl,\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n\n    args: Object.entries({\n      client_id: options.clientId, // eslint-disable-line camelcase\n      grant_type: 'refresh_token', // eslint-disable-line camelcase\n      scope: refreshToken.scopes.join(' '),\n      refresh_token: refreshToken.refreshToken, // eslint-disable-line camelcase\n    }).map(function ([name, value]) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return name + '=' + encodeURIComponent(value!);\n    }).join('&'),\n  });\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { get } from '../../http';\nimport { find } from '../../util';\nimport { OktaAuthOIDCInterface, WellKnownResponse } from '../../types';\nimport AuthSdkError from '../../errors/AuthSdkError';\n\nexport function getWellKnown(sdk: OktaAuthOIDCInterface, issuer?: string): Promise<WellKnownResponse> {\n  var authServerUri = (issuer || sdk.options.issuer);\n  return get(sdk, authServerUri + '/.well-known/openid-configuration', {\n    cacheResponse: true\n  });\n}\n\nexport function getKey(sdk: OktaAuthOIDCInterface, issuer: string, kid: string): Promise<string> {\n  var httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies);\n\n  return getWellKnown(sdk, issuer)\n  .then(function(wellKnown) {\n    var jwksUri = wellKnown['jwks_uri'];\n\n    // Check our kid against the cached version (if it exists and isn't expired)\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[jwksUri];\n    if (cachedResponse && Date.now()/1000 < cachedResponse.expiresAt) {\n      var cachedKey = find(cachedResponse.response.keys, {\n        kid: kid\n      });\n\n      if (cachedKey) {\n        return cachedKey;\n      }\n    }\n\n    // Remove cache for the key\n    httpCache.clearStorage(jwksUri);\n\n    // Pull the latest keys if the key wasn't in the cache\n    return get(sdk, jwksUri, {\n      cacheResponse: true\n    })\n    .then(function(res) {\n      var key = find(res.keys, {\n        kid: kid\n      });\n\n      if (key) {\n        return key;\n      }\n\n      throw new AuthSdkError('The key id, ' + kid + ', was not found in the server\\'s keys');\n    });\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window, document */\n/* eslint-disable complexity, max-statements */\nimport { AuthSdkError } from '../../errors';\nimport { OktaAuthOptionsInterface } from '../../types';\n\nexport function addListener(eventTarget, name, fn) {\n  if (eventTarget.addEventListener) {\n    eventTarget.addEventListener(name, fn);\n  } else {\n    eventTarget.attachEvent('on' + name, fn);\n  }\n}\n\nexport function removeListener(eventTarget, name, fn) {\n  if (eventTarget.removeEventListener) {\n    eventTarget.removeEventListener(name, fn);\n  } else {\n    eventTarget.detachEvent('on' + name, fn);\n  }\n}\n\nexport function loadFrame(src) {\n  var iframe = document.createElement('iframe');\n  iframe.style.display = 'none';\n  iframe.src = src;\n\n  return document.body.appendChild(iframe);\n}\n\nexport function loadPopup(src, options) {\n  var title = options.popupTitle || 'External Identity Provider User Authentication';\n  var appearance = 'toolbar=no, scrollbars=yes, resizable=yes, ' +\n    'top=100, left=500, width=600, height=600';\n  return window.open(src, title, appearance);\n}\n\nexport function addPostMessageListener(sdk: OktaAuthOptionsInterface, timeout, state) {\n  var responseHandler;\n  var timeoutId;\n  var msgReceivedOrTimeout = new Promise(function (resolve, reject) {\n\n    responseHandler = function responseHandler(e) {\n      if (!e.data || e.data.state !== state) {\n        // A message not meant for us\n        return;\n      }\n\n      // Configuration mismatch between saved token and current app instance\n      // This may happen if apps with different issuers are running on the same host url\n      // If they share the same storage key, they may read and write tokens in the same location.\n      // Common when developing against http://localhost\n      if (e.origin !== sdk.getIssuerOrigin()) {\n        return reject(new AuthSdkError('The request does not match client configuration'));\n      }\n      resolve(e.data);\n    };\n\n    addListener(window, 'message', responseHandler);\n\n    timeoutId = setTimeout(function () {\n      reject(new AuthSdkError('OAuth flow timed out'));\n    }, timeout || 120000);\n  });\n\n  return msgReceivedOrTimeout\n    .finally(function () {\n      clearTimeout(timeoutId);\n      removeListener(window, 'message', responseHandler);\n    });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\nimport { genRandomString, removeTrailingSlash } from '../../util';\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport { OktaAuthOptionsInterface, CustomUrls } from '../../types';\n\nexport function generateState() {\n  return genRandomString(64);\n}\n\nexport function generateNonce() {\n  return genRandomString(64);\n}\n\nfunction getIssuer(sdk: OktaAuthOptionsInterface, options: CustomUrls = {}) {\n  const issuer = removeTrailingSlash(options.issuer) || sdk.options.issuer;\n  return issuer;\n}\n\nexport function getOAuthBaseUrl(sdk: OktaAuthOptionsInterface, options: CustomUrls = {}) {\n  const issuer = getIssuer(sdk, options);\n  const baseUrl = issuer.indexOf('/oauth2') > 0 ? issuer : issuer + '/oauth2';\n  return baseUrl;\n}\n\nexport function getOAuthDomain(sdk: OktaAuthOptionsInterface, options: CustomUrls = {}) {\n  const issuer = getIssuer(sdk, options);\n  const domain = issuer.split('/oauth2')[0];\n  return domain;\n}\n\nexport function getOAuthUrls(sdk: OktaAuthOptionsInterface, options?: CustomUrls): CustomUrls {\n  if (arguments.length > 2) {\n    throw new AuthSdkError('As of version 3.0, \"getOAuthUrls\" takes only a single set of options');\n  }\n  options = options || {};\n\n  // Get user-supplied arguments\n  var authorizeUrl = removeTrailingSlash(options.authorizeUrl) || sdk.options.authorizeUrl;\n  var issuer = getIssuer(sdk, options);\n  var userinfoUrl = removeTrailingSlash(options.userinfoUrl) || sdk.options.userinfoUrl;\n  var tokenUrl = removeTrailingSlash(options.tokenUrl) || sdk.options.tokenUrl;\n  var logoutUrl = removeTrailingSlash(options.logoutUrl) || sdk.options.logoutUrl;\n  var revokeUrl = removeTrailingSlash(options.revokeUrl) || sdk.options.revokeUrl;\n\n  var baseUrl = getOAuthBaseUrl(sdk, options);\n\n  authorizeUrl = authorizeUrl || baseUrl + '/v1/authorize';\n  userinfoUrl = userinfoUrl || baseUrl + '/v1/userinfo';\n  tokenUrl = tokenUrl || baseUrl + '/v1/token';\n  revokeUrl = revokeUrl || baseUrl + '/v1/revoke';\n  logoutUrl = logoutUrl || baseUrl + '/v1/logout';\n\n  return {\n    issuer: issuer,\n    authorizeUrl: authorizeUrl,\n    userinfoUrl: userinfoUrl,\n    tokenUrl: tokenUrl,\n    revokeUrl: revokeUrl,\n    logoutUrl: logoutUrl\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable node/no-unsupported-features/node-builtins */\n/* global document, window, TextEncoder, navigator */\n\nimport { webcrypto } from './crypto';\n\nconst isWindowsPhone = /windows phone|iemobile|wpdesktop/i;\t\n\nexport function isBrowser() {\n  return typeof document !== 'undefined' && typeof window !== 'undefined';\n}\n\nexport function isIE11OrLess() {\n  if (!isBrowser()) {\n    return false;\n  }\n  const documentMode = (document as any).documentMode;\n  return !!documentMode && documentMode <= 11;\n}\n\nexport function getUserAgent() {\n  return navigator.userAgent;\n}\n\nexport function isFingerprintSupported() {\n  const agent = getUserAgent();\n  return agent && !isWindowsPhone.test(agent);\t\n}\n\nexport function isPopupPostMessageSupported() {\n  if (!isBrowser()) {\n    return false;\n  }\n  const documentMode = (document as any).documentMode;\n  var isIE8or9 = documentMode && documentMode < 10;\n  if (typeof window.postMessage !== 'undefined' && !isIE8or9) {\n    return true;\n  }\n  return false;\n}\n\nexport function isTokenVerifySupported() {\n  return typeof webcrypto !== 'undefined'\n    && webcrypto !== null\n    && typeof webcrypto.subtle !== 'undefined'\n    && typeof Uint8Array !== 'undefined';\n}\n\nexport function hasTextEncoder() {\n  return typeof TextEncoder !== 'undefined';\n}\n\nexport function isPKCESupported() {\n  return isTokenVerifySupported() && hasTextEncoder();\n}\n\nexport function isHTTPS() {\n  if (!isBrowser()) {\n    return false;\n  }\n  return window.location.protocol === 'https:';\n}\n\nexport function isLocalhost() {\n  // eslint-disable-next-line compat/compat\n  return isBrowser() && window.location.hostname === 'localhost';\n}\n\n","\n/* global window */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { generateNonce, generateState } from './oauth';\nimport { OktaAuthOptionsInterface, TokenParams } from '../../types';\nimport { isBrowser } from '../../features';\nimport { removeNils } from '../../util';\n\nexport function getDefaultTokenParams(sdk: OktaAuthOptionsInterface): TokenParams {\n  const {\n    pkce,\n    clientId,\n    redirectUri,\n    responseType,\n    responseMode,\n    scopes,\n    state,\n    ignoreSignature\n  } = sdk.options;\n  const defaultRedirectUri = isBrowser() ? window.location.href : undefined;\n  return removeNils({\n    pkce,\n    clientId,\n    redirectUri: redirectUri || defaultRedirectUri,\n    responseType: responseType || ['token', 'id_token'],\n    responseMode,\n    state: state || generateState(),\n    nonce: generateNonce(),\n    scopes: scopes || ['openid', 'email'],\n    ignoreSignature\n  });\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { OktaAuthOptionsInterface } from '../../types';\nimport { OAuthError, AuthApiError, isOAuthError } from '../../errors';\n\nexport function isInteractionRequiredError(error: Error) {\n  if (error.name !== 'OAuthError') {\n    return false;\n  }\n  const oauthError = error as OAuthError;\n  return (oauthError.errorCode === 'interaction_required');\n}\n\nexport function isAuthorizationCodeError(sdk: OktaAuthOptionsInterface, error: Error) {\n  if (error.name !== 'AuthApiError') {\n    return false;\n  }\n  const authApiError = error as AuthApiError;\n  // xhr property doesn't seem to match XMLHttpRequest type\n  const errorResponse = authApiError.xhr as unknown as Record<string, unknown>;\n  const responseJSON = errorResponse?.responseJSON as Record<string, unknown>;\n  return sdk.options.pkce && (responseJSON?.error as string === 'invalid_grant');\n}\n\nexport function isRefreshTokenInvalidError(error: unknown): boolean {\n  // error: {\"error\":\"invalid_grant\",\"error_description\":\"The refresh token is invalid or expired.\"}\n  return isOAuthError(error) &&\n    error.errorCode === 'invalid_grant' &&\n    error.errorSummary === 'The refresh token is invalid or expired.';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window */\n/* eslint-disable complexity, max-statements */\nimport { OktaAuthOptionsInterface, OktaAuthOptions } from '../../types';\n\nexport function hasTokensInHash(hash: string): boolean {\n  return /((id|access)_token=)/i.test(hash);\n}\n\n// authorization_code\nexport function hasAuthorizationCode(hashOrSearch: string): boolean {\n  return /(code=)/i.test(hashOrSearch);\n}\n\n// interaction_code\nexport function hasInteractionCode(hashOrSearch: string): boolean {\n  return /(interaction_code=)/i.test(hashOrSearch);\n}\n\nexport function hasErrorInUrl(hashOrSearch: string): boolean {\n  return /(error=)/i.test(hashOrSearch) || /(error_description)/i.test(hashOrSearch);\n}\n\nexport function isRedirectUri(uri: string, sdk: OktaAuthOptionsInterface): boolean {\n  var authParams = sdk.options;\n  if (!uri || !authParams.redirectUri) {\n    return false;\n  }\n  return uri.indexOf(authParams.redirectUri) === 0;\n}\n\nexport function isCodeFlow(options: OktaAuthOptions) {\n  return options.pkce || options.responseType === 'code' || options.responseMode === 'query';\n}\n\nexport function getHashOrSearch(options: OktaAuthOptions) {\n  var codeFlow = isCodeFlow(options);\n  var useQuery = codeFlow && options.responseMode !== 'fragment';\n  return useQuery ? window.location.search : window.location.hash;\n}\n\n/**\n * Check if tokens or a code have been passed back into the url, which happens in\n * the OIDC (including social auth IDP) redirect flow.\n */\nexport function isLoginRedirect (sdk: OktaAuthOptionsInterface) {\n  // First check, is this a redirect URI?\n  if (!isRedirectUri(window.location.href, sdk)){\n    return false;\n  }\n\n  // The location contains either a code, token, or an error + error_description\n  var codeFlow = isCodeFlow(sdk.options);\n  var hashOrSearch = getHashOrSearch(sdk.options);\n\n  if (hasErrorInUrl(hashOrSearch)) {\n    return true;\n  }\n\n  if (codeFlow) {\n    var hasCode =  hasAuthorizationCode(hashOrSearch) || hasInteractionCode(hashOrSearch);\n    return hasCode;\n  }\n\n  // implicit flow, will always be hash fragment\n  return hasTokensInHash(window.location.hash);\n}\n\n/**\n * Check if error=interaction_required has been passed back in the url, which happens in\n * the social auth IDP redirect flow.\n */\nexport function isInteractionRequired (sdk: OktaAuthOptionsInterface, hashOrSearch?: string) {\n  if (!hashOrSearch) { // web only\n    // First check, is this a redirect URI?\n    if (!isLoginRedirect(sdk)){\n      return false;\n    }\n  \n    hashOrSearch = getHashOrSearch(sdk.options);\n  }\n  return /(error=interaction_required)/i.test(hashOrSearch);\n}","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { OAuthTransactionMeta, OktaAuthOptionsInterface, PKCETransactionMeta, TokenParams } from '../../types';\nimport { getOAuthUrls } from './oauth';\n\nexport function createOAuthMeta(\n  sdk: OktaAuthOptionsInterface, \n  tokenParams: TokenParams\n): OAuthTransactionMeta | PKCETransactionMeta {\n  const issuer = sdk.options.issuer!;\n  const urls = getOAuthUrls(sdk, tokenParams);\n  const oauthMeta: OAuthTransactionMeta = {\n    issuer,\n    urls,\n    clientId: tokenParams.clientId!,\n    redirectUri: tokenParams.redirectUri!,\n    responseType: tokenParams.responseType!,\n    responseMode: tokenParams.responseMode!,\n    scopes: tokenParams.scopes!,\n    state: tokenParams.state!,\n    nonce: tokenParams.nonce!,\n    ignoreSignature: tokenParams.ignoreSignature!,\n  };\n\n  if (tokenParams.pkce === false) {\n    // Implicit flow or authorization_code without PKCE\n    return oauthMeta;\n  }\n\n  const pkceMeta: PKCETransactionMeta = {\n    ...oauthMeta,\n    codeVerifier: tokenParams.codeVerifier!,\n    codeChallengeMethod: tokenParams.codeChallengeMethod!,\n    codeChallenge: tokenParams.codeChallenge!,\n  };\n\n  return pkceMeta;\n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { getWellKnown } from '../endpoints/well-known';\nimport { AuthSdkError } from '../../errors';\nimport { OktaAuthFeaturesInterface, OktaAuthOIDCInterface, TokenParams } from '../../types';\nimport { getDefaultTokenParams } from './defaultTokenParams';\nimport { DEFAULT_CODE_CHALLENGE_METHOD } from '../../constants';\nimport PKCE from './pkce';\n\nexport function assertPKCESupport(sdk: OktaAuthFeaturesInterface) {\n  if (!sdk.features.isPKCESupported()) {\n    var errorMessage = 'PKCE requires a modern browser with encryption support running in a secure context.';\n    if (!sdk.features.isHTTPS()) {\n      // eslint-disable-next-line max-len\n      errorMessage += '\\nThe current page is not being served with HTTPS protocol. PKCE requires secure HTTPS protocol.';\n    }\n    if (!sdk.features.hasTextEncoder()) {\n      // eslint-disable-next-line max-len\n      errorMessage += '\\n\"TextEncoder\" is not defined. To use PKCE, you may need to include a polyfill/shim for this browser.';\n    }\n    throw new AuthSdkError(errorMessage);\n  }\n}\n\nexport async function validateCodeChallengeMethod(sdk: OktaAuthOIDCInterface, codeChallengeMethod?: string) {\n  // set default code challenge method, if none provided\n  codeChallengeMethod = codeChallengeMethod || sdk.options.codeChallengeMethod || DEFAULT_CODE_CHALLENGE_METHOD;\n\n  // validate against .well-known/openid-configuration\n  const wellKnownResponse = await getWellKnown(sdk);\n  var methods = wellKnownResponse['code_challenge_methods_supported'] || [];\n  if (methods.indexOf(codeChallengeMethod) === -1) {\n    throw new AuthSdkError('Invalid code_challenge_method');\n  }\n  return codeChallengeMethod;\n}\n\nexport async function preparePKCE(\n  sdk: OktaAuthOIDCInterface, \n  tokenParams: TokenParams\n): Promise<TokenParams> {\n  let {\n    codeVerifier,\n    codeChallenge,\n    codeChallengeMethod\n  } = tokenParams;\n\n  // PKCE calculations can be avoided by passing a codeChallenge\n  codeChallenge = codeChallenge || sdk.options.codeChallenge;\n  if (!codeChallenge) {\n    assertPKCESupport(sdk);\n    codeVerifier = codeVerifier || PKCE.generateVerifier();\n    codeChallenge = await PKCE.computeChallenge(codeVerifier);\n  }\n  codeChallengeMethod = await validateCodeChallengeMethod(sdk, codeChallengeMethod);\n\n  // Clone/copy the params. Set PKCE values\n  tokenParams = {\n    ...tokenParams,\n    responseType: 'code', // responseType is forced\n    codeVerifier,\n    codeChallenge,\n    codeChallengeMethod\n  };\n\n  return tokenParams;\n}\n\n// Prepares params for a call to /authorize or /token\nexport async function prepareTokenParams(\n  sdk: OktaAuthOIDCInterface,\n  tokenParams: TokenParams = {}\n): Promise<TokenParams> {\n  // build params using defaults + options\n  const defaults = getDefaultTokenParams(sdk);\n  tokenParams = { ...defaults, ...tokenParams };\n\n  if (tokenParams.pkce === false) {\n    // Implicit flow or authorization_code without PKCE\n    return tokenParams;\n  }\n\n  return preparePKCE(sdk, tokenParams);\n}","import { RefreshToken } from '../../types';\nimport { isAuthApiError } from '../../errors';\n\nexport function isSameRefreshToken(a: RefreshToken, b: RefreshToken) {\n  return (a.refreshToken === b.refreshToken);\n}\n\nexport function isRefreshTokenError(err: Error) {\n  if (!isAuthApiError(err)) {\n    return false;\n  }\n\n  if (!err.xhr || !err.xhr.responseJSON) {\n    return false;\n  }\n\n  const { responseJSON } = err.xhr;\n  if (responseJSON.error === 'invalid_grant') {\n    return true;\n  }\n\n  return false;\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\n\nexport function urlParamsToObject(hashOrSearch: string) {\n  // Predefine regexs for parsing hash\n  var plus2space = /\\+/g;\n  var paramSplit = /([^&=]+)=?([^&]*)/g;\n  var fragment = hashOrSearch || '';\n\n  // Some hash based routers will automatically add a / character after the hash\n  if (fragment.charAt(0) === '#' && fragment.charAt(1) === '/') {\n    fragment = fragment.substring(2);\n  }\n\n  // Remove the leading # or ?\n  if (fragment.charAt(0) === '#' || fragment.charAt(0) === '?') {\n    fragment = fragment.substring(1);\n  }\n\n\n  var obj = {};\n\n  // Loop until we have no more params\n  var param;\n  while (true) { // eslint-disable-line no-constant-condition\n    param = paramSplit.exec(fragment);\n    if (!param) { break; }\n\n    var key = param[1];\n    var value = param[2];\n\n    // id_token should remain base64url encoded\n    if (key === 'id_token' || key === 'access_token' || key === 'code') {\n      obj[key] = value;\n    } else {\n      obj[key] = decodeURIComponent(value.replace(plus2space, ' '));\n    }\n  }\n  return obj;\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\n\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport { OktaAuthOptionsInterface, TokenVerifyParams, UserClaims } from '../../types';\n\nexport function validateClaims(sdk: OktaAuthOptionsInterface, claims: UserClaims, validationParams: TokenVerifyParams) {\n  var aud = validationParams.clientId;\n  var iss = validationParams.issuer;\n  var nonce = validationParams.nonce;\n\n  if (!claims || !iss || !aud) {\n    throw new AuthSdkError('The jwt, iss, and aud arguments are all required');\n  }\n\n  if (nonce && claims.nonce !== nonce) {\n    throw new AuthSdkError('OAuth flow response nonce doesn\\'t match request nonce');\n  }\n\n  var now = Math.floor(Date.now()/1000);\n\n  if (claims.iss !== iss) {\n    throw new AuthSdkError('The issuer [' + claims.iss + '] ' +\n      'does not match [' + iss + ']');\n  }\n\n  if (claims.aud !== aud) {\n    throw new AuthSdkError('The audience [' + claims.aud + '] ' +\n      'does not match [' + aud + ']');\n  }\n\n  if (claims.iat! > claims.exp!) {\n    throw new AuthSdkError('The JWT expired before it was issued');\n  }\n\n  if (!sdk.options.ignoreLifetime) {\n    if ((now - sdk.options.maxClockSkew!) > claims.exp!) {\n      throw new AuthSdkError('The JWT expired and is no longer valid');\n    }\n\n    if (claims.iat! > (now + sdk.options.maxClockSkew!)) {\n      throw new AuthSdkError('The JWT was issued in the future');\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { StorageManager } from '../StorageManager';\nimport { CustomUrls, TokenParams } from './OktaAuthOptions';\nimport { IdxTransactionMeta } from '../idx/types';\n\nexport interface TransactionManagerOptions {\n  storageManager?: StorageManager;\n  enableSharedStorage?: boolean; // default true\n  legacyWidgetSupport?: boolean; // default true\n  saveNonceCookie?: boolean; // default true\n  saveStateCookie?: boolean; // default true\n  saveParamsCookie?: boolean; // default true\n  saveLastResponse?: boolean; // default true\n}\n\n// formerly known as \"Redirect OAuth Params\"\nexport interface OAuthTransactionMeta extends\n  Pick<TokenParams,\n    'issuer' |\n    'clientId' |\n    'redirectUri' |\n    'responseType' |\n    'responseMode' |\n    'scopes' |\n    'state' |\n    'pkce' |\n    'ignoreSignature' |\n    'nonce'\n  >\n{\n  urls: CustomUrls;\n  originalUri?: string;\n}\n\nexport interface PKCETransactionMeta extends\n  OAuthTransactionMeta,\n  Pick<TokenParams,\n    'codeChallenge' |\n    'codeChallengeMethod' |\n    'codeVerifier'\n  >\n{}\n\nexport type CustomAuthTransactionMeta = Record<string, string | undefined>;\n\nexport type TransactionMeta =\n  IdxTransactionMeta |\n  PKCETransactionMeta |\n  OAuthTransactionMeta |\n  CustomAuthTransactionMeta;\n\nexport interface TransactionMetaOptions extends\n  Pick<IdxTransactionMeta,\n    'pkce' |\n    'state' |\n    'codeChallenge' |\n    'codeChallengeMethod' |\n    'codeVerifier' |\n    'flow' |\n    'activationToken' |\n    'recoveryToken'\n  >\n{\n  oauth?: boolean;\n  muteWarning?: boolean;\n}\n\nfunction isObjectWithProperties(obj) {\n  if (!obj || typeof obj !== 'object' || Object.values(obj).length === 0) {\n    return false;\n  }\n  return true;\n}\n\nexport function isOAuthTransactionMeta(obj: any): obj is OAuthTransactionMeta {\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n  return !!obj.redirectUri || !!obj.responseType;\n}\n\nexport function isPKCETransactionMeta(obj: any): obj is PKCETransactionMeta {\n  if (!isOAuthTransactionMeta(obj)) {\n    return false;\n  }\n  return !!(obj as any).codeVerifier;\n}\n\nexport function isIdxTransactionMeta(obj: any): obj is IdxTransactionMeta {\n  if (!isPKCETransactionMeta(obj)) {\n    return false;\n  }\n  return !!(obj as any).interactionHandle;\n}\n\nexport function isCustomAuthTransactionMeta(obj: any): obj is CustomAuthTransactionMeta {\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n  const isAllStringValues = Object.values(obj).find((value) => (typeof value !== 'string')) === undefined;\n  return isAllStringValues;\n}\n\nexport function isTransactionMeta(obj: any): obj is TransactionMeta {\n  if (isOAuthTransactionMeta(obj) || isCustomAuthTransactionMeta(obj)) {\n    return true;\n  }\n  return false;\n}\n","import { APIError } from '../../types/api';\nimport { Tokens } from '../../types/Token';\nimport { PKCETransactionMeta } from '../../types/Transaction';\nimport { FlowIdentifier } from './FlowIdentifier';\nimport {\n  IdxActions,\n  IdxAuthenticator,\n  IdxContext,\n  IdxForm,\n  IdxMessage,\n  IdxOption,\n  IdxRemediation,\n  IdxResponse,\n  RawIdxResponse,\n  IdxActionParams,\n  IdpConfig,\n} from './idx-js';\n\nexport enum IdxStatus {\n  SUCCESS = 'SUCCESS',\n  PENDING = 'PENDING',\n  FAILURE = 'FAILURE',\n  TERMINAL = 'TERMINAL',\n  CANCELED = 'CANCELED',\n}\n\nexport enum AuthenticatorKey {\n  OKTA_PASSWORD = 'okta_password',\n  OKTA_EMAIL = 'okta_email',\n  PHONE_NUMBER = 'phone_number',\n  GOOGLE_AUTHENTICATOR = 'google_otp',\n  SECURITY_QUESTION = 'security_question',\n  OKTA_VERIFY = 'okta_verify',\n  WEBAUTHN = 'webauthn',\n}\n\nexport type Input = {\n  name: string;\n  key?: string;\n  type?: string;\n  label?: string;\n  value?: string | {form: IdxForm} | Input[];\n  minLength?: number;\n  maxLength?: number;\n  secret?: boolean;\n  required?: boolean;\n  options?: IdxOption[];\n  mutable?: boolean;\n  visible?: boolean;\n}\n\n\nexport interface IdxPollOptions {\n  required?: boolean;\n  refresh?: number;\n}\n\nexport type NextStep = {\n  name: string;\n  authenticator?: IdxAuthenticator;\n  canSkip?: boolean;\n  canResend?: boolean;\n  inputs?: Input[];\n  options?: IdxOption[];\n  poll?: IdxPollOptions;\n  authenticatorEnrollments?: IdxAuthenticator[];\n  // eslint-disable-next-line no-use-before-define\n  action?: (params?: IdxActionParams) => Promise<IdxTransaction>;\n  idp?: IdpConfig;\n  href?: string;\n  relatesTo?: {\n    type?: string;\n    value: IdxAuthenticator;\n  };\n  refresh?: number;\n}\n\nexport enum IdxFeature {\n  PASSWORD_RECOVERY = 'recover-password',\n  REGISTRATION = 'enroll-profile',\n  SOCIAL_IDP = 'redirect-idp',\n  ACCOUNT_UNLOCK = 'unlock-account',\n}\n\nexport interface IdxTransactionMeta extends PKCETransactionMeta {\n  interactionHandle?: string;\n  remediations?: string[];\n  flow?: FlowIdentifier;\n  withCredentials?: boolean;\n  activationToken?: string;\n  recoveryToken?: string;\n  maxAge?: string | number;\n}\n\nexport interface IdxTransaction {\n  status: IdxStatus;\n  tokens?: Tokens;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  error?: APIError | IdxResponse;\n  meta?: IdxTransactionMeta;\n  enabledFeatures?: IdxFeature[];\n  availableSteps?: NextStep[];\n  requestDidSucceed?: boolean;\n  stepUp?: boolean;\n  \n  // from idx-js, used by signin widget\n  proceed: (remediationName: string, params: unknown) => Promise<IdxResponse>;\n  neededToProceed: IdxRemediation[];\n  rawIdxState: RawIdxResponse;\n  interactionCode?: string;\n  actions: IdxActions;\n  context: IdxContext;\n}\n\n\nexport type Authenticator = {\n  id?: string;\n  key?: string;\n  methodType?: string;\n  phoneNumber?: string;\n};\n\nexport function isAuthenticator(obj: any): obj is Authenticator {\n  return obj && (obj.key || obj.id);\n}\n\nexport interface RemediationResponse {\n  idxResponse: IdxResponse;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  terminal?: boolean;\n  canceled?: boolean;\n}\n\nexport interface InteractResponse {\n  state?: string;\n  interactionHandle: string;\n  meta: IdxTransactionMeta;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { UserClaims } from './UserClaims';\n\nexport interface AbstractToken {\n  expiresAt: number;\n  authorizeUrl: string;\n  scopes: string[];\n  pendingRemove?: boolean;\n}\n\nexport interface AccessToken extends AbstractToken {\n  accessToken: string;\n  claims: UserClaims;\n  tokenType: string;\n  userinfoUrl: string;\n}\n\nexport interface RefreshToken extends AbstractToken {\n  refreshToken: string;\n  tokenUrl: string;\n  issuer: string;\n}\n\nexport interface IDToken extends AbstractToken {\n  idToken: string;\n  claims: UserClaims;\n  issuer: string;\n  clientId: string;\n}\n\nexport type Token = AccessToken | IDToken | RefreshToken;\nexport type RevocableToken = AccessToken | RefreshToken;\n\nexport type TokenType = 'accessToken' | 'idToken' | 'refreshToken';\n\nexport function isToken(obj: any): obj is Token {\n  if (obj &&\n      (obj.accessToken || obj.idToken || obj.refreshToken) &&\n      Array.isArray(obj.scopes)) {\n    return true;\n  }\n  return false;\n}\n\nexport function isAccessToken(obj: any): obj is AccessToken {\n  return obj && obj.accessToken;\n}\n\nexport function isIDToken(obj: any): obj is IDToken {\n  return obj && obj.idToken;\n}\n\nexport function isRefreshToken(obj: any): obj is RefreshToken {\n  return obj && obj.refreshToken;\n}\n\nexport interface Tokens {\n  accessToken?: AccessToken;\n  idToken?: IDToken;\n  refreshToken?: RefreshToken;\n}\n","/* eslint-disable complexity */\n\nimport { AuthSdkError } from '../../errors';\nimport { isAccessToken, isIDToken, isRefreshToken, Token, TokenType } from '../../types';\n\nexport function validateToken(token: Token, type?: TokenType) {\n  if (!isIDToken(token) && !isAccessToken(token) && !isRefreshToken(token)) {\n    throw new AuthSdkError(\n      'Token must be an Object with scopes, expiresAt, and one of: an idToken, accessToken, or refreshToken property'\n    );\n  }\n  \n  if (type === 'accessToken' && !isAccessToken(token)) {\n    throw new AuthSdkError('invalid accessToken');\n  } \n  if (type === 'idToken' && !isIDToken(token)) {\n    throw new AuthSdkError('invalid idToken');\n  }\n\n  if (type === 'refreshToken' && !isRefreshToken(token)) {\n    throw new AuthSdkError('invalid refreshToken');\n  }\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { JWTObject } from '../types';\nimport { base64UrlToString } from '../crypto';\n\nexport function decodeToken(token: string): JWTObject {\n  var jwt = token.split('.');\n  var decodedToken: JWTObject;\n\n  try {\n    decodedToken = {\n      header: JSON.parse(base64UrlToString(jwt[0])),\n      payload: JSON.parse(base64UrlToString(jwt[1])),\n      signature: jwt[2]\n    };\n  } catch (e) {\n    throw new AuthSdkError('Malformed token');\n  }\n\n  return decodedToken;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint complexity:[0,8] */\nimport { post } from '../http';\nimport { toQueryString } from '../util';\nimport {\n  getOAuthUrls,\n} from './util/oauth';\nimport { btoa } from '../crypto';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport {\n  OktaAuthOIDCInterface,\n  RevocableToken,\n  AccessToken,\n  RefreshToken\n} from '../types';\n\n// refresh tokens have precedence to be revoked if no token is specified\nexport async function revokeToken(sdk: OktaAuthOIDCInterface, token: RevocableToken): Promise<any> {\n  let accessToken = '';\n  let refreshToken = '';\n  if (token) { \n      accessToken = (token as AccessToken).accessToken;\n      refreshToken = (token as RefreshToken).refreshToken;  \n  }\n  if(!accessToken && !refreshToken) { \n    throw new AuthSdkError('A valid access or refresh token object is required');\n  }\n  var clientId = sdk.options.clientId;\n  var clientSecret = sdk.options.clientSecret;\n  if (!clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to revoke a token');\n  }\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  var revokeUrl = getOAuthUrls(sdk).revokeUrl!;\n  var args = toQueryString({\n    // eslint-disable-next-line camelcase\n    token_type_hint: refreshToken ? 'refresh_token' : 'access_token', \n    token: refreshToken || accessToken,\n  }).slice(1);\n  var creds = clientSecret ? btoa(`${clientId}:${clientSecret}`) : btoa(clientId);\n  return post(sdk, revokeUrl, args, {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': 'Basic ' + creds\n    }\n  });\n}\n","/* eslint-disable max-len */\n/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { getWellKnown, getKey } from './endpoints/well-known';\nimport { validateClaims } from './util';\nimport { AuthSdkError } from '../errors';\nimport { IDToken, OktaAuthOIDCInterface, TokenVerifyParams } from '../types';\nimport { decodeToken } from './decodeToken';\nimport * as sdkCrypto from '../crypto';\n\n// Verify the id token\nexport async function verifyToken(sdk: OktaAuthOIDCInterface, token: IDToken, validationParams: TokenVerifyParams): Promise<IDToken> {\n  if (!token || !token.idToken) {\n    throw new AuthSdkError('Only idTokens may be verified');\n  }\n\n  // Decode the Jwt object (may throw)\n  var jwt = decodeToken(token.idToken);\n\n  // The configured issuer may point to a frontend proxy.\n  // Get the \"real\" issuer from .well-known/openid-configuration\n  const configuredIssuer = validationParams?.issuer || sdk.options.issuer;\n  const { issuer } = await getWellKnown(sdk, configuredIssuer);\n\n  var validationOptions: TokenVerifyParams = Object.assign({\n    // base options, can be overridden by params\n    clientId: sdk.options.clientId,\n    ignoreSignature: sdk.options.ignoreSignature\n  }, validationParams, {\n    // final options, cannot be overridden\n    issuer\n  });\n\n  // Standard claim validation (may throw)\n  validateClaims(sdk, jwt.payload, validationOptions);\n\n  // If the browser doesn't support native crypto or we choose not\n  // to verify the signature, bail early\n  if (validationOptions.ignoreSignature == true || !sdk.features.isTokenVerifySupported()) {\n    return token;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const key = await getKey(sdk, token.issuer, jwt.header.kid!);\n  const valid = await sdkCrypto.verifyToken(token.idToken, key);\n  if (!valid) {\n    throw new AuthSdkError('The token signature is not valid');\n  }\n  if (validationParams && validationParams.accessToken && token.claims.at_hash) {\n    const hash = await sdkCrypto.getOidcHash(validationParams.accessToken);\n    if (hash !== token.claims.at_hash) {\n      throw new AuthSdkError('Token hash verification failed');\n    }\n  }\n  return token;\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\n/* eslint-disable complexity, max-statements */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { clone } from '../util';\nimport {\n  getOAuthUrls,\n} from './util/oauth';\nimport { AuthSdkError, OAuthError } from '../errors';\nimport {\n  OktaAuthOIDCInterface,\n  TokenVerifyParams,\n  IDToken,\n  OAuthResponse,\n  TokenParams,\n  TokenResponse,\n  CustomUrls,\n  Tokens,\n} from '../types';\nimport { verifyToken } from './verifyToken';\nimport { getDefaultTokenParams } from './util';\n\nfunction validateResponse(res: OAuthResponse, oauthParams: TokenParams) {\n  if (res['error'] && res['error_description']) {\n    throw new OAuthError(res['error'], res['error_description']);\n  }\n\n  if (res.state !== oauthParams.state) {\n    throw new AuthSdkError('OAuth flow response state doesn\\'t match request state');\n  }\n}\n\nexport async function handleOAuthResponse(\n  sdk: OktaAuthOIDCInterface,\n  tokenParams: TokenParams,\n  res: OAuthResponse,\n  urls?: CustomUrls\n): Promise<TokenResponse> {\n  var pkce = sdk.options.pkce !== false;\n\n  // The result contains an authorization_code and PKCE is enabled \n  // `exchangeCodeForTokens` will call /token then call `handleOauthResponse` recursively with the result\n  if (pkce && (res.code || res.interaction_code)) {\n    return sdk.token.exchangeCodeForTokens(Object.assign({}, tokenParams, {\n      authorizationCode: res.code,\n      interactionCode: res.interaction_code\n    }), urls);\n  }\n\n  tokenParams = tokenParams || getDefaultTokenParams(sdk);\n  urls = urls || getOAuthUrls(sdk, tokenParams);\n\n  var responseType = tokenParams.responseType || [];\n  if (!Array.isArray(responseType)) {\n    responseType = [responseType];\n  }\n\n  var scopes;\n  if (res.scope) {\n    scopes = res.scope.split(' ');\n  } else {\n    scopes = clone(tokenParams.scopes);\n  }\n  var clientId = tokenParams.clientId || sdk.options.clientId;\n\n  // Handling the result from implicit flow or PKCE token exchange\n  validateResponse(res, tokenParams);\n\n  var tokenDict = {} as Tokens;\n  var expiresIn = res.expires_in;\n  var tokenType = res.token_type;\n  var accessToken = res.access_token;\n  var idToken = res.id_token;\n  var refreshToken = res.refresh_token;\n  var now = Math.floor(Date.now()/1000);\n\n  if (accessToken) {\n    var accessJwt = sdk.token.decode(accessToken);\n    tokenDict.accessToken = {\n      accessToken: accessToken,\n      claims: accessJwt.payload,\n      expiresAt: Number(expiresIn) + now,\n      tokenType: tokenType!,\n      scopes: scopes,\n      authorizeUrl: urls.authorizeUrl!,\n      userinfoUrl: urls.userinfoUrl!\n    };\n  }\n\n  if (refreshToken) {\n    tokenDict.refreshToken = {\n      refreshToken: refreshToken,\n      // should not be used, this is the accessToken expire time\n      // TODO: remove \"expiresAt\" in the next major version OKTA-407224\n      expiresAt: Number(expiresIn) + now, \n      scopes: scopes,\n      tokenUrl: urls.tokenUrl!,\n      authorizeUrl: urls.authorizeUrl!,\n      issuer: urls.issuer!,\n    };\n  }\n\n  if (idToken) {\n    var idJwt = sdk.token.decode(idToken);\n    var idTokenObj: IDToken = {\n      idToken: idToken,\n      claims: idJwt.payload,\n      expiresAt: idJwt.payload.exp! - idJwt.payload.iat! + now, // adjusting expiresAt to be in local time\n      scopes: scopes,\n      authorizeUrl: urls.authorizeUrl!,\n      issuer: urls.issuer!,\n      clientId: clientId!\n    };\n\n    var validationParams: TokenVerifyParams = {\n      clientId: clientId!,\n      issuer: urls.issuer!,\n      nonce: tokenParams.nonce,\n      accessToken: accessToken\n    };\n\n    if (tokenParams.ignoreSignature !== undefined) {\n      validationParams.ignoreSignature = tokenParams.ignoreSignature;\n    }\n\n    await verifyToken(sdk, idTokenObj, validationParams);\n    tokenDict.idToken = idTokenObj;\n  }\n\n  // Validate received tokens against requested response types \n  if (responseType.indexOf('token') !== -1 && !tokenDict.accessToken) {\n    // eslint-disable-next-line max-len\n    throw new AuthSdkError('Unable to parse OAuth flow response: response type \"token\" was requested but \"access_token\" was not returned.');\n  }\n  if (responseType.indexOf('id_token') !== -1 && !tokenDict.idToken) {\n    // eslint-disable-next-line max-len\n    throw new AuthSdkError('Unable to parse OAuth flow response: response type \"id_token\" was requested but \"id_token\" was not returned.');\n  }\n\n  return {\n    tokens: tokenDict,\n    state: res.state!,\n    code: res.code\n  };\n  \n}","\n/* global document */\n/* eslint-disable complexity, max-statements */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport {\n  getOAuthUrls,\n  loadFrame,\n  addPostMessageListener\n} from './util';\n\nimport AuthSdkError from '../errors/AuthSdkError';\n\nimport {\n  OktaAuthOIDCInterface,\n  TokenParams,\n  PopupParams,\n  OAuthResponse,\n} from '../types';\n\nimport { prepareTokenParams } from './util/prepareTokenParams';\nimport { buildAuthorizeParams } from './endpoints/authorize';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n/*\n * Retrieve an idToken from an Okta or a third party idp\n *\n * Two main flows:\n *\n *  1) Exchange a sessionToken for a token\n *\n *    Required:\n *      clientId: passed via the OktaAuth constructor or into getToken\n *      sessionToken: 'yourtoken'\n *\n *    Optional:\n *      redirectUri: defaults to window.location.href\n *      scopes: defaults to ['openid', 'email']\n *\n *    Forced:\n *      prompt: 'none'\n *      responseMode: 'okta_post_message'\n *      display: undefined\n *\n *  2) Get a token from an idp\n *\n *    Required:\n *      clientId: passed via the OktaAuth constructor or into getToken\n *\n *    Optional:\n *      redirectUri: defaults to window.location.href\n *      scopes: defaults to ['openid', 'email']\n *      idp: defaults to Okta as an idp\n *      prompt: no default. Pass 'none' to throw an error if user is not signed in\n *\n *    Forced:\n *      display: 'popup'\n *\n *  Only common optional params shown. Any OAuth parameters not explicitly forced are available to override\n *\n * @param {Object} oauthOptions\n * @param {String} [oauthOptions.clientId] ID of this client\n * @param {String} [oauthOptions.redirectUri] URI that the iframe or popup will go to once authenticated\n * @param {String[]} [oauthOptions.scopes] OAuth 2.0 scopes to request (openid must be specified)\n * @param {String} [oauthOptions.idp] ID of an external IdP to use for user authentication\n * @param {String} [oauthOptions.sessionToken] Bootstrap Session Token returned by the Okta Authentication API\n * @param {String} [oauthOptions.prompt] Determines whether the Okta login will be displayed on failure.\n *                                       Use 'none' to prevent this behavior\n *\n * @param {Object} options\n * @param {Integer} [options.timeout] Time in ms before the flow is automatically terminated. Defaults to 120000\n * @param {String} [options.popupTitle] Title dispayed in the popup.\n *                                      Defaults to 'External Identity Provider User Authentication'\n */\nexport function getToken(sdk: OktaAuthOIDCInterface, options: TokenParams & PopupParams) {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getToken\" takes only a single set of options'));\n  }\n\n  options = options || {};\n\n  // window object cannot be serialized, save for later use\n  // TODO: move popup related params into a separate options object\n  const popupWindow = options.popupWindow;\n  options.popupWindow = undefined;\n\n  return prepareTokenParams(sdk, options)\n    .then(function (tokenParams: TokenParams) {\n\n      // Start overriding any options that don't make sense\n      var sessionTokenOverrides = {\n        prompt: 'none',\n        responseMode: 'okta_post_message',\n        display: null\n      };\n\n      var idpOverrides = {\n        display: 'popup'\n      };\n\n      if (options.sessionToken) {\n        Object.assign(tokenParams, sessionTokenOverrides);\n      } else if (options.idp) {\n        Object.assign(tokenParams, idpOverrides);\n      }\n\n      // Use the query params to build the authorize url\n      var requestUrl,\n        endpoint,\n        urls;\n\n      // Get authorizeUrl and issuer\n      urls = getOAuthUrls(sdk, tokenParams);\n      endpoint = options.codeVerifier ? urls.tokenUrl : urls.authorizeUrl;\n      requestUrl = endpoint + buildAuthorizeParams(tokenParams);\n\n      // Determine the flow type\n      var flowType;\n      if (tokenParams.sessionToken || tokenParams.display === null) {\n        flowType = 'IFRAME';\n      } else if (tokenParams.display === 'popup') {\n        flowType = 'POPUP';\n      } else {\n        flowType = 'IMPLICIT';\n      }\n\n      // Execute the flow type\n      switch (flowType) {\n        case 'IFRAME':\n          var iframePromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n          var iframeEl = loadFrame(requestUrl);\n          return iframePromise\n            .then(function (res) {\n              return handleOAuthResponse(sdk, tokenParams, res as OAuthResponse, urls);\n            })\n            .finally(function () {\n              if (document.body.contains(iframeEl)) {\n                iframeEl.parentElement?.removeChild(iframeEl);\n              }\n            });\n\n        case 'POPUP':\n          var oauthPromise; // resolves with OAuth response\n\n          // Add listener on postMessage before window creation, so\n          // postMessage isn't triggered before we're listening\n          if (tokenParams.responseMode === 'okta_post_message') {\n            if (!sdk.features.isPopupPostMessageSupported()) {\n              throw new AuthSdkError('This browser doesn\\'t have full postMessage support');\n            }\n            oauthPromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n          }\n\n          // Redirect for authorization\n          // popupWindown can be null when popup is blocked\n          if (popupWindow) { \n            popupWindow.location.assign(requestUrl);\n          }\n\n          // The popup may be closed without receiving an OAuth response. Setup a poller to monitor the window.\n          var popupPromise = new Promise(function (resolve, reject) {\n            var closePoller = setInterval(function () {\n              if (!popupWindow || popupWindow.closed) {\n                clearInterval(closePoller);\n                reject(new AuthSdkError('Unable to parse OAuth flow response'));\n              }\n            }, 100);\n\n            // Proxy the OAuth promise results\n            oauthPromise\n              .then(function (res) {\n                clearInterval(closePoller);\n                resolve(res);\n              })\n              .catch(function (err) {\n                clearInterval(closePoller);\n                reject(err);\n              });\n          });\n\n          return popupPromise\n            .then(function (res) {\n              return handleOAuthResponse(sdk, tokenParams, res as OAuthResponse, urls);\n            })\n            .finally(function () {\n              if (popupWindow && !popupWindow.closed) {\n                popupWindow.close();\n              }\n            });\n\n        default:\n          throw new AuthSdkError('The full page redirect flow is not supported');\n      }\n    });\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthOIDCInterface, TokenParams, TokenResponse } from '../types';\nimport { clone } from '../util';\nimport { getToken } from './getToken';\n\nexport function getWithoutPrompt(sdk: OktaAuthOIDCInterface, options: TokenParams): Promise<TokenResponse> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithoutPrompt\" takes only a single set of options'));\n  }\n  \n  options = clone(options) || {};\n  Object.assign(options, {\n    prompt: 'none',\n    responseMode: 'okta_post_message',\n    display: null\n  });\n  return getToken(sdk, options);\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { getOAuthUrls } from './util/oauth';\nimport { isSameRefreshToken } from './util/refreshToken';\nimport { OktaAuthOIDCInterface, TokenParams, RefreshToken, Tokens } from '../types';\nimport { handleOAuthResponse } from './handleOAuthResponse';\nimport { postRefreshToken } from './endpoints/token';\nimport { isRefreshTokenInvalidError } from './util/errors';\n\nexport async function renewTokensWithRefresh(\n  sdk: OktaAuthOIDCInterface,\n  tokenParams: TokenParams,\n  refreshTokenObject: RefreshToken\n): Promise<Tokens> {\n  const { clientId } = sdk.options;\n  if (!clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to renew tokens');\n  }\n\n  try {\n    const renewTokenParams: TokenParams = Object.assign({}, tokenParams, {\n      clientId,\n    });\n    const tokenResponse = await postRefreshToken(sdk, renewTokenParams, refreshTokenObject);\n    const urls = getOAuthUrls(sdk, tokenParams);\n    const { tokens } = await handleOAuthResponse(sdk, renewTokenParams, tokenResponse, urls);\n\n    // Support rotating refresh tokens\n    const { refreshToken } = tokens;\n    if (refreshToken && !isSameRefreshToken(refreshToken, refreshTokenObject)) {\n      sdk.tokenManager.updateRefreshToken(refreshToken);\n    }\n\n    return tokens;\n  }\n  catch (err) {\n    if (isRefreshTokenInvalidError(err)) {\n      // if the refresh token is invalid, remove it from storage\n      sdk.tokenManager.removeRefreshToken();\n    }\n    throw err;\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthOIDCInterface, Token, Tokens, isAccessToken, AccessToken, IDToken, isIDToken } from '../types';\nimport { getWithoutPrompt } from './getWithoutPrompt';\nimport { renewTokensWithRefresh } from './renewTokensWithRefresh';\n\nfunction throwInvalidTokenError() {\n  throw new AuthSdkError(\n    'Renew must be passed a token with an array of scopes and an accessToken or idToken'\n  );\n}\n\n// Multiple tokens may have come back. Return only the token which was requested.\nfunction getSingleToken(originalToken: Token, tokens: Tokens) {\n  if (isIDToken(originalToken)) {\n    return tokens.idToken;\n  }\n  if (isAccessToken(originalToken)) {\n    return tokens.accessToken;\n  }\n  throwInvalidTokenError();\n}\n\n// If we have a refresh token, renew using that, otherwise getWithoutPrompt\nexport async function renewToken(sdk: OktaAuthOIDCInterface, token: Token): Promise<Token | undefined> {\n  if (!isIDToken(token) && !isAccessToken(token)) {\n    throwInvalidTokenError();\n  }\n\n  let tokens = sdk.tokenManager.getTokensSync();\n  if (tokens.refreshToken) {\n    tokens = await renewTokensWithRefresh(sdk, {\n      scopes: token.scopes,\n    }, tokens.refreshToken);\n    return getSingleToken(token, tokens);\n  }\n\n  var responseType;\n  if (sdk.options.pkce) {\n    responseType = 'code';\n  } else if (isAccessToken(token)) {\n    responseType = 'token';\n  } else {\n    responseType = 'id_token';\n  }\n\n  const { scopes, authorizeUrl, userinfoUrl, issuer } = token as (AccessToken & IDToken);\n  return getWithoutPrompt(sdk, {\n    responseType,\n    scopes,\n    authorizeUrl,\n    userinfoUrl,\n    issuer\n  })\n    .then(function (res) {\n      return getSingleToken(token, res.tokens);\n    });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { TokenParams, Tokens } from '../types';\nimport { getWithoutPrompt } from './getWithoutPrompt';\nimport { renewTokensWithRefresh } from './renewTokensWithRefresh';\nimport { getDefaultTokenParams } from './util';\n\n// If we have a refresh token, renew using that, otherwise getWithoutPrompt\n// eslint-disable-next-line complexity\nexport async function renewTokens(sdk, options?: TokenParams): Promise<Tokens> {\n  const tokens = sdk.tokenManager.getTokensSync();\n  if (tokens.refreshToken) {\n    return renewTokensWithRefresh(sdk, options || {}, tokens.refreshToken);\n  }\n\n  if (!tokens.accessToken && !tokens.idToken) {\n    throw new AuthSdkError('renewTokens() was called but there is no existing token');\n  }\n\n  const accessToken = tokens.accessToken || {};\n  const idToken = tokens.idToken || {};\n  const scopes = accessToken.scopes || idToken.scopes;\n  if (!scopes) {\n    throw new AuthSdkError('renewTokens: invalid tokens: could not read scopes');\n  }\n  const authorizeUrl = accessToken.authorizeUrl || idToken.authorizeUrl;\n  if (!authorizeUrl) {\n    throw new AuthSdkError('renewTokens: invalid tokens: could not read authorizeUrl');\n  }\n  const userinfoUrl = accessToken.userinfoUrl || sdk.options.userinfoUrl;\n  const issuer = idToken.issuer || sdk.options.issuer;\n\n  // Get tokens using the SSO cookie\n  options = Object.assign({\n    scopes,\n    authorizeUrl,\n    userinfoUrl,\n    issuer\n  }, options);\n\n  if (sdk.options.pkce) {\n    options.responseType = 'code';\n  } else {\n    const { responseType } = getDefaultTokenParams(sdk);\n    options.responseType = responseType;\n  }\n\n  return getWithoutPrompt(sdk, options)\n    .then(res => res.tokens);\n    \n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { isFunction } from '../util';\nimport { AuthSdkError, OAuthError } from '../errors';\nimport { httpRequest } from '../http';\nimport { AccessToken, IDToken, UserClaims, isAccessToken, isIDToken, CustomUserClaims } from '../types';\n\nexport async function getUserInfo<T extends CustomUserClaims = CustomUserClaims>(\n  sdk, accessTokenObject: AccessToken,\n  idTokenObject: IDToken\n): Promise<UserClaims<T>> {\n  // If token objects were not passed, attempt to read from the TokenManager\n  if (!accessTokenObject) {\n    accessTokenObject = (await sdk.tokenManager.getTokens()).accessToken as AccessToken;\n  }\n  if (!idTokenObject) {\n    idTokenObject = (await sdk.tokenManager.getTokens()).idToken as IDToken;\n  }\n\n  if (!accessTokenObject || !isAccessToken(accessTokenObject)) {\n    return Promise.reject(new AuthSdkError('getUserInfo requires an access token object'));\n  }\n\n  if (!idTokenObject || !isIDToken(idTokenObject)) {\n    return Promise.reject(new AuthSdkError('getUserInfo requires an ID token object'));\n  }\n\n  return httpRequest(sdk, {\n    url: accessTokenObject.userinfoUrl,\n    method: 'GET',\n    accessToken: accessTokenObject.accessToken\n  })\n    .then(userInfo => {\n      // Only return the userinfo response if subjects match to mitigate token substitution attacks\n      if (userInfo.sub === idTokenObject.claims.sub) {\n        return userInfo;\n      }\n      return Promise.reject(new AuthSdkError('getUserInfo request was rejected due to token mismatch'));\n    })\n    .catch(function (err) {\n      if (err.xhr && (err.xhr.status === 401 || err.xhr.status === 403)) {\n        var authenticateHeader;\n        if (err.xhr.headers && isFunction(err.xhr.headers.get) && err.xhr.headers.get('WWW-Authenticate')) {\n          authenticateHeader = err.xhr.headers.get('WWW-Authenticate');\n        } else if (isFunction(err.xhr.getResponseHeader)) {\n          authenticateHeader = err.xhr.getResponseHeader('WWW-Authenticate');\n        }\n        if (authenticateHeader) {\n          var errorMatches = authenticateHeader.match(/error=\"(.*?)\"/) || [];\n          var errorDescriptionMatches = authenticateHeader.match(/error_description=\"(.*?)\"/) || [];\n          var error = errorMatches[1];\n          var errorDescription = errorDescriptionMatches[1];\n          if (error && errorDescription) {\n            err = new OAuthError(error, errorDescription);\n          }\n        }\n      }\n      throw err;\n    });\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/* eslint-disable max-len */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { CustomUrls, OAuthResponse, OAuthResponseType, OktaAuthOIDCInterface, TokenParams, TokenResponse } from '../types';\nimport { getOAuthUrls, getDefaultTokenParams } from './util';\nimport { clone } from '../util';\nimport { postToTokenEndpoint } from './endpoints/token';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n\n// codeVerifier is required. May pass either an authorizationCode or interactionCode\nexport function exchangeCodeForTokens(sdk: OktaAuthOIDCInterface, tokenParams: TokenParams, urls?: CustomUrls): Promise<TokenResponse> {\n  urls = urls || getOAuthUrls(sdk, tokenParams);\n  // build params using defaults + options\n  tokenParams = Object.assign({}, getDefaultTokenParams(sdk), clone(tokenParams));\n\n  const {\n    authorizationCode,\n    interactionCode,\n    codeVerifier,\n    clientId,\n    redirectUri,\n    scopes,\n    ignoreSignature,\n    state\n  } = tokenParams;\n\n  var getTokenOptions = {\n    clientId,\n    redirectUri,\n    authorizationCode,\n    interactionCode,\n    codeVerifier,\n  };\n\n  return postToTokenEndpoint(sdk, getTokenOptions, urls)\n    .then((response: OAuthResponse) => {\n\n      // `handleOAuthResponse` hanadles responses from both `/authorize` and `/token` endpoints\n      // Here we modify the response from `/token` so that it more closely matches a response from `/authorize`\n      // `responseType` is used to validate that the expected tokens were returned\n      const responseType: OAuthResponseType[] = ['token']; // an accessToken will always be returned\n      if (scopes!.indexOf('openid') !== -1) {\n        responseType.push('id_token'); // an idToken will be returned if \"openid\" is in the scopes\n      }\n      const handleResponseOptions: TokenParams = {\n        clientId,\n        redirectUri,\n        scopes,\n        responseType,\n        ignoreSignature,\n      };\n      return handleOAuthResponse(sdk, handleResponseOptions, response, urls!)\n        .then((response: TokenResponse) => {\n          // For compatibility, \"code\" is returned in the TokenResponse. OKTA-326091\n          response.code = authorizationCode;\n          response.state = state!;\n          return response;\n        });\n    })\n    .finally(() => {\n      sdk.transactionManager.clear();\n    });\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthOIDCInterface, TokenParams, TokenResponse } from '../types';\nimport { clone } from '../util';\nimport { getToken } from './getToken';\nimport { loadPopup } from './util';\n\nexport function getWithPopup(sdk: OktaAuthOIDCInterface, options: TokenParams): Promise<TokenResponse> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithPopup\" takes only a single set of options'));\n  }\n\n  // some browsers (safari, firefox) block popup if it's initialed from an async process\n  // here we create the popup window immediately after user interaction\n  // then redirect to the /authorize endpoint when the requestUrl is available\n  const popupWindow = loadPopup('/', options);\n  options = clone(options) || {};\n  Object.assign(options, {\n    display: 'popup',\n    responseMode: 'okta_post_message',\n    popupWindow\n  });\n  return getToken(sdk, options);\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthOIDCInterface, TokenParams } from '../types';\nimport { clone } from '../util';\nimport { prepareTokenParams, createOAuthMeta } from './util';\nimport { buildAuthorizeParams } from './endpoints/authorize';\n\nexport async function getWithRedirect(sdk: OktaAuthOIDCInterface, options?: TokenParams): Promise<void> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithRedirect\" takes only a single set of options'));\n  }\n\n  options = clone(options) || {};\n\n  const tokenParams = await prepareTokenParams(sdk, options);\n  const meta = createOAuthMeta(sdk, tokenParams);\n  const requestUrl = meta.urls.authorizeUrl + buildAuthorizeParams(tokenParams);\n  sdk.transactionManager.save(meta, { oauth: true });\n  sdk.token.getWithRedirect._setLocation(requestUrl);\n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { isInteractionRequiredError, urlParamsToObject } from './util';\nimport {\n  ParseFromUrlOptions,\n  TokenResponse,\n  CustomUrls,\n  TransactionMeta,\n  OAuthResponse\n} from '../types';\nimport { isString } from '../util';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n\nfunction removeHash(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.search);\n  } else {\n    nativeLoc.hash = '';\n  }\n}\n\nfunction removeSearch(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.hash);\n  } else {\n    nativeLoc.search = '';\n  }\n}\n\nexport function getResponseMode(sdk): 'query' | 'fragment' {\n  // https://openid.net/specs/openid-connect-core-1_0.html#Authentication\n  var defaultResponseMode = sdk.options.pkce ? 'query' : 'fragment';\n  var responseMode = sdk.options.responseMode || defaultResponseMode;\n  return responseMode;\n}\n\nexport function parseOAuthResponseFromUrl(sdk, options: string | ParseFromUrlOptions): OAuthResponse {\n  options = options || {};\n  if (isString(options)) {\n    options = { url: options } as ParseFromUrlOptions;\n  } else {\n    options = options as ParseFromUrlOptions;\n  }\n\n  var url = options.url;\n  var responseMode = options.responseMode || getResponseMode(sdk);\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  var paramStr;\n\n  if (responseMode === 'query') {\n    paramStr = url ? url.substring(url.indexOf('?')) : nativeLoc.search;\n  } else {\n    paramStr = url ? url.substring(url.indexOf('#')) : nativeLoc.hash;\n  }\n\n  if (!paramStr) {\n    throw new AuthSdkError('Unable to parse a token from the url');\n  }\n\n  return urlParamsToObject(paramStr);\n}\n\nexport function cleanOAuthResponseFromUrl(sdk, options: ParseFromUrlOptions) {\n  // Clean hash or search from the url\n  const responseMode = options.responseMode || getResponseMode(sdk);\n  responseMode === 'query' ? removeSearch(sdk) : removeHash(sdk);\n}\n\nexport async function parseFromUrl(sdk, options?: string | ParseFromUrlOptions): Promise<TokenResponse> {\n  options = options || {};\n  if (isString(options)) {\n    options = { url: options } as ParseFromUrlOptions;\n  } else {\n    options = options as ParseFromUrlOptions;\n  }\n\n  const res: OAuthResponse = parseOAuthResponseFromUrl(sdk, options);\n  const state = res.state;\n  const oauthParams: TransactionMeta = sdk.transactionManager.load({\n    oauth: true,\n    pkce: sdk.options.pkce,\n    state\n  });\n  if (!oauthParams) {\n    return Promise.reject(new AuthSdkError('Unable to retrieve OAuth redirect params from storage'));\n  }\n  const urls: CustomUrls = oauthParams.urls as CustomUrls;\n  delete oauthParams.urls;\n\n  if (!options.url) {\n    // Clean hash or search from the url\n    cleanOAuthResponseFromUrl(sdk, options);\n  }\n\n  return handleOAuthResponse(sdk, oauthParams, res, urls)\n    .catch(err => {\n      if (!isInteractionRequiredError(err)) {\n        sdk.transactionManager.clear({\n          state\n        });\n      }\n      throw err;\n    })\n    .then(res => {\n      sdk.transactionManager.clear({\n        state\n      });\n      return res;\n    });\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { base64UrlToBuffer, bufferToBase64Url } from './base64';\nimport { ActivationData, ChallengeData, IdxAuthenticator } from '../idx/types';\n\n// Get known credentials from list of enrolled authenticators\nconst getEnrolledCredentials = (authenticatorEnrollments: IdxAuthenticator[] = []) => {\n  const credentials: PublicKeyCredentialDescriptor[] = [];\n  authenticatorEnrollments.forEach((enrollement) => {\n    if (enrollement.key === 'webauthn') {\n      credentials.push({\n        type: 'public-key',\n        id: base64UrlToBuffer(enrollement.credentialId),\n      });\n    }\n  });\n  return credentials;\n};\n\n// Build options for navigator.credentials.create\n// https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/create\nexport const buildCredentialCreationOptions = (\n  activationData: ActivationData, authenticatorEnrollments: IdxAuthenticator[]\n) => {\n  return {\n    publicKey: {\n      rp: activationData.rp,\n      user: {\n        id: base64UrlToBuffer(activationData.user.id),\n        name: activationData.user.name,\n        displayName: activationData.user.displayName\n      },\n      challenge: base64UrlToBuffer(activationData.challenge),\n      pubKeyCredParams: activationData.pubKeyCredParams,\n      attestation: activationData.attestation,\n      authenticatorSelection: activationData.authenticatorSelection,\n      excludeCredentials: getEnrolledCredentials(authenticatorEnrollments),\n    }\n  } as CredentialCreationOptions;\n};\n\n\n// Build options for navigator.credentials.get\n// https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get\nexport const buildCredentialRequestOptions = (\n  challengeData: ChallengeData, authenticatorEnrollments: IdxAuthenticator[]\n) => {\n  return {\n    publicKey: {\n      challenge: base64UrlToBuffer(challengeData.challenge),\n      userVerification: challengeData.userVerification,\n      allowCredentials: getEnrolledCredentials(authenticatorEnrollments),\n    }\n  } as CredentialRequestOptions;\n};\n\n// Build attestation for webauthn enroll\n// https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAttestationResponse\nexport const getAttestation = (credential: PublicKeyCredential) => {\n  const response = credential.response as AuthenticatorAttestationResponse;\n  const id = credential.id;\n  const clientData = bufferToBase64Url(response.clientDataJSON);\n  const attestation = bufferToBase64Url(response.attestationObject);\n  return {\n    id,\n    clientData,\n    attestation\n  };\n};\n\n// Build assertion for webauthn verification\n// https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAssertionResponse\nexport const getAssertion = (credential: PublicKeyCredential) => {\n  const response = credential.response as AuthenticatorAssertionResponse;\n  const id = credential.id;\n  const clientData = bufferToBase64Url(response.clientDataJSON);\n  const authenticatorData = bufferToBase64Url(response.authenticatorData);\n  const signatureData = bufferToBase64Url(response.signature);\n  return {\n    id,\n    clientData,\n    authenticatorData,\n    signatureData\n  };\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport Cookies from 'js-cookie';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport {\n  StorageProvider,\n  StorageOptions,\n  PKCEStorage,\n  CookieOptions,\n  SimpleStorage,\n  StorageType,\n  BrowserStorageUtil,\n  CookieStorage\n} from '../types';\nimport { warn } from '../util';\n\n// Building this as an object allows us to mock the functions in our tests\nvar storageUtil: BrowserStorageUtil = {\n\n  // These are shimmed in `OktaAuthBase.ts`\n  getHttpCache(): StorageProvider {\n    return null as never as StorageProvider;\n  },\n\n  getPKCEStorage(): PKCEStorage {\n    return null as never as PKCEStorage;\n  },\n\n  // IE11 bug that Microsoft doesn't plan to fix\n  // https://connect.microsoft.com/IE/Feedback/Details/1496040\n  browserHasLocalStorage: function() {\n    try {\n      var storage = this.getLocalStorage();\n      return this.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n\n  browserHasSessionStorage: function() {\n    try {\n      var storage = this.getSessionStorage();\n      return this.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n\n  testStorageType: function(storageType: StorageType): boolean {\n    var supported = false;\n    switch (storageType) {\n      case 'sessionStorage':\n        supported = this.browserHasSessionStorage();\n        break;\n      case 'localStorage':\n        supported = this.browserHasLocalStorage();\n        break;\n      case 'cookie':\n      case 'memory':\n        supported = true;\n        break;\n      default:\n        supported = false;\n        break;\n    }\n    return supported;\n  },\n\n  getStorageByType: function(storageType: StorageType, options?: StorageOptions): SimpleStorage {\n    let storageProvider;\n    switch (storageType) {\n      case 'sessionStorage':\n        storageProvider = this.getSessionStorage();\n        break;\n      case 'localStorage':\n        storageProvider = this.getLocalStorage();\n        break;\n      case 'cookie':\n        storageProvider = this.getCookieStorage(options);\n        break;\n      case 'memory':\n        storageProvider = this.getInMemoryStorage();\n        break;\n      default:\n        throw new AuthSdkError(`Unrecognized storage option: ${storageType}`);\n        break;\n    }\n    return storageProvider;\n  },\n\n  findStorageType: function(types: StorageType[]) {\n    let curType;\n    let nextType;\n    \n    types = types.slice(); // copy array\n    curType = types.shift();\n    nextType = types.length ? types[0] : null;\n    if (!nextType) {\n      return curType;\n    }\n\n    if (this.testStorageType(curType)) {\n      return curType;\n    }\n\n    // preferred type was unsupported.\n    warn(`This browser doesn't support ${curType}. Switching to ${nextType}.`);\n\n    // fallback to the next type. this is a recursive call\n    return this.findStorageType(types);\n  },\n\n  getLocalStorage: function() {\n    return localStorage;\n  },\n\n  getSessionStorage: function() {\n    return sessionStorage;\n  },\n\n  // Provides webStorage-like interface for cookies\n  getCookieStorage: function(options): CookieStorage {\n    const secure = options!.secure;\n    const sameSite = options!.sameSite;\n    const sessionCookie = options!.sessionCookie;\n    if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n      throw new AuthSdkError('getCookieStorage: \"secure\" and \"sameSite\" options must be provided');\n    }\n    const storage: CookieStorage = {\n      getItem: this.storage.get,\n      setItem: (key, value, expiresAt = '2200-01-01T00:00:00.000Z') => {\n        // By defauilt, cookie shouldn't expire\n        expiresAt = (sessionCookie ? null : expiresAt) as string;\n        this.storage.set(key, value, expiresAt, {\n          secure: secure, \n          sameSite: sameSite,\n        });\n      },\n      removeItem: (key) => {\n        this.storage.delete(key);\n      }\n    };\n\n    if (!options!.useSeparateCookies) {\n      return storage;\n    }\n\n    // Tokens are stored separately because cookies have size limits.\n    // Can only be used when storing an object value. Object properties will be saved to separate cookies.\n    // Each property of the object must also be an object.\n    return {\n      getItem: function(key) {\n        var data = storage.getItem(); // read all cookies\n        var value = {};\n        Object.keys(data).forEach(k => {\n          if (k.indexOf(key!) === 0) { // filter out unrelated cookies\n            value[k.replace(`${key}_`, '')] = JSON.parse(data[k]); // populate with cookie data\n          }\n        });\n        return JSON.stringify(value);\n      },\n      setItem: function(key, value) {\n        var existingValues = JSON.parse(this.getItem(key));\n        value = JSON.parse(value);\n        // Set key-value pairs from input to cookies\n        Object.keys(value).forEach(k => {\n          var storageKey = key + '_' + k;\n          var valueToStore = JSON.stringify(value[k]);\n          storage.setItem(storageKey, valueToStore);\n          delete existingValues[k];\n        });\n        // Delete unmatched keys from existing cookies\n        Object.keys(existingValues).forEach(k => {\n          storage.removeItem(key + '_' + k);\n        });\n      },\n      removeItem: function(key) {\n        var existingValues = JSON.parse(this.getItem(key));\n        Object.keys(existingValues).forEach(k => {\n          storage.removeItem(key + '_' + k);\n        });\n      }\n    };\n  },\n\n  // Provides an in-memory solution\n  inMemoryStore: {}, // override this for a unique memory store per instance\n  getInMemoryStorage: function() {\n    return {\n      getItem: (key) => {\n        return this.inMemoryStore[key];\n      },\n      setItem: (key, value) => {\n        this.inMemoryStore[key] = value;\n      }\n    };\n  },\n\n  testStorage: function(storage) {\n    var key = 'okta-test-storage';\n    try {\n      storage.setItem(key, key);\n      storage.removeItem(key);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  },\n\n  storage: {\n    set: function(name: string, value: string, expiresAt: string, options: CookieOptions): string {\n      const { sameSite, secure } = options;\n      if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n        throw new AuthSdkError('storage.set: \"secure\" and \"sameSite\" options must be provided');\n      }\n      var cookieOptions: CookieOptions = {\n        path: options.path || '/',\n        secure,\n        sameSite\n      };\n\n      // eslint-disable-next-line no-extra-boolean-cast\n      if (!!(Date.parse(expiresAt))) {\n        // Expires value can be converted to a Date object.\n        //\n        // If the 'expiresAt' value is not provided, or the value cannot be\n        // parsed as a Date object, the cookie will set as a session cookie.\n        cookieOptions.expires = new Date(expiresAt);\n      }\n\n      Cookies.set(name, value, cookieOptions);\n      return this.get(name);\n    },\n\n    get: function(name?: string): string {\n      // return all cookies when no args is provided\n      if (!arguments.length) {\n        return Cookies.get();\n      }\n      return Cookies.get(name);\n    },\n\n    delete: function(name: string): string {\n      return Cookies.remove(name, { path: '/' });\n    }\n  }\n};\n\nexport default storageUtil;\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport default class SdkClock {\n  localOffset: number;\n\n  constructor(localOffset) {\n    // Calculated local clock offset from server time (in milliseconds). Can be positive or negative.\n    this.localOffset = parseInt(localOffset || 0);\n  }\n\n  // factory method. Create an instance of a clock from current context.\n  static create(/* sdk, options */): SdkClock {\n    // TODO: calculate localOffset\n    var localOffset = 0;\n    return new SdkClock(localOffset);\n  }\n\n  // Return the current time (in seconds)\n  now() {\n    var now = (Date.now() + this.localOffset) / 1000;\n    return now;\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { removeNils, clone } from './util';\nimport { AuthSdkError } from './errors';\nimport { validateToken  } from './oidc/util';\nimport { isLocalhost, isIE11OrLess } from './features';\nimport SdkClock from './clock';\nimport {\n  EventEmitter,\n  Token, \n  Tokens, \n  TokenType, \n  TokenManagerOptions, \n  isIDToken, \n  isAccessToken,\n  isRefreshToken,\n  StorageOptions,\n  StorageType,\n  OktaAuthInterface,\n  StorageProvider,\n  TokenManagerErrorEventHandler,\n  TokenManagerEventHandler,\n  TokenManagerInterface,\n  RefreshToken,\n  AccessTokenCallback,\n  IDTokenCallback,\n  RefreshTokenCallback\n} from './types';\nimport { REFRESH_TOKEN_STORAGE_KEY, TOKEN_STORAGE_NAME } from './constants';\n\nconst DEFAULT_OPTIONS = {\n  // TODO: remove in next major version - OKTA-473815\n  autoRenew: true,\n  autoRemove: true,\n  syncStorage: true,\n  // --- //\n  clearPendingRemoveTokens: true,\n  storage: undefined, // will use value from storageManager config\n  expireEarlySeconds: 30,\n  storageKey: TOKEN_STORAGE_NAME,\n  _storageEventDelay: 0\n};\nexport const EVENT_EXPIRED = 'expired';\nexport const EVENT_RENEWED = 'renewed';\nexport const EVENT_ADDED = 'added';\nexport const EVENT_REMOVED = 'removed';\nexport const EVENT_ERROR = 'error';\n\ninterface TokenManagerState {\n  expireTimeouts: Record<string, unknown>;\n  renewPromise: Promise<Token | undefined> | null;\n}\nfunction defaultState(): TokenManagerState {\n  return {\n    expireTimeouts: {},\n    renewPromise: null\n  };\n}\nexport class TokenManager implements TokenManagerInterface {\n  private sdk: OktaAuthInterface;\n  private clock: SdkClock;\n  private emitter: EventEmitter;\n  private storage: StorageProvider;\n  private state: TokenManagerState;\n  private options: TokenManagerOptions;\n\n  on: (event: string, handler: TokenManagerErrorEventHandler | TokenManagerEventHandler, context?: object) => void;\n  off: (event: string, handler?: TokenManagerErrorEventHandler | TokenManagerEventHandler) => void;\n\n  // eslint-disable-next-line complexity\n  constructor(sdk: OktaAuthInterface, options: TokenManagerOptions = {}) {\n    this.sdk = sdk;\n    this.emitter = (sdk as any).emitter;\n    if (!this.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before TokenManager');\n    }\n    \n    options = Object.assign({}, DEFAULT_OPTIONS, removeNils(options));\n    if (isIE11OrLess()) {\n      options._storageEventDelay = options._storageEventDelay || 1000;\n    }\n    if (!isLocalhost()) {\n      options.expireEarlySeconds = DEFAULT_OPTIONS.expireEarlySeconds;\n    }\n\n    this.options = options;\n\n    const storageOptions: StorageOptions = removeNils({\n      storageKey: options.storageKey,\n      secure: options.secure,\n    });\n    if (typeof options.storage === 'object') {\n      // A custom storage provider must implement getItem(key) and setItem(key, val)\n      storageOptions.storageProvider = options.storage;\n    } else if (options.storage) {\n      storageOptions.storageType = options.storage as StorageType;\n    }\n\n    this.storage = sdk.storageManager.getTokenStorage({...storageOptions, useSeparateCookies: true});\n    this.clock = SdkClock.create(/* sdk, options */);\n    this.state = defaultState();\n\n    this.on = this.emitter.on.bind(this.emitter);\n    this.off = this.emitter.off.bind(this.emitter);\n  }\n\n  start() {\n    if (this.options.clearPendingRemoveTokens) {\n      this.clearPendingRemoveTokens();\n    }\n    this.setExpireEventTimeoutAll();\n  }\n  \n  stop() {\n    this.clearExpireEventTimeoutAll();\n  }\n\n  getOptions(): TokenManagerOptions {\n    return clone(this.options);\n  }\n  \n  getExpireTime(token) {\n    const expireEarlySeconds = this.options.expireEarlySeconds || 0;\n    var expireTime = token.expiresAt - expireEarlySeconds;\n    return expireTime;\n  }\n  \n  hasExpired(token) {\n    var expireTime = this.getExpireTime(token);\n    return expireTime <= this.clock.now();\n  }\n  \n  emitExpired(key, token) {\n    this.emitter.emit(EVENT_EXPIRED, key, token);\n  }\n  \n  emitRenewed(key, freshToken, oldToken) {\n    this.emitter.emit(EVENT_RENEWED, key, freshToken, oldToken);\n  }\n  \n  emitAdded(key, token) {\n    this.emitter.emit(EVENT_ADDED, key, token);\n  }\n  \n  emitRemoved(key, token?) {\n    this.emitter.emit(EVENT_REMOVED, key, token);\n  }\n  \n  emitError(error) {\n    this.emitter.emit(EVENT_ERROR, error);\n  }\n  \n  emitEventsForCrossTabsStorageUpdate(newValue, oldValue) {\n    const oldTokens = this.getTokensFromStorageValue(oldValue);\n    const newTokens = this.getTokensFromStorageValue(newValue);\n    Object.keys(newTokens).forEach(key => {\n      const oldToken = oldTokens[key];\n      const newToken = newTokens[key];\n      if (JSON.stringify(oldToken) !== JSON.stringify(newToken)) {\n        this.emitAdded(key, newToken);\n      }\n    });\n    Object.keys(oldTokens).forEach(key => {\n      const oldToken = oldTokens[key];\n      const newToken = newTokens[key];\n      if (!newToken) {\n        this.emitRemoved(key, oldToken);\n      }\n    });\n  }\n  \n  clearExpireEventTimeout(key) {\n    clearTimeout(this.state.expireTimeouts[key] as any);\n    delete this.state.expireTimeouts[key];\n  \n    // Remove the renew promise (if it exists)\n    this.state.renewPromise = null;\n  }\n  \n  clearExpireEventTimeoutAll() {\n    var expireTimeouts = this.state.expireTimeouts;\n    for (var key in expireTimeouts) {\n      if (!Object.prototype.hasOwnProperty.call(expireTimeouts, key)) {\n        continue;\n      }\n      this.clearExpireEventTimeout(key);\n    }\n  }\n  \n  setExpireEventTimeout(key, token) {\n    if (isRefreshToken(token)) {\n      return;\n    }\n\n    var expireTime = this.getExpireTime(token);\n    var expireEventWait = Math.max(expireTime - this.clock.now(), 0) * 1000;\n  \n    // Clear any existing timeout\n    this.clearExpireEventTimeout(key);\n  \n    var expireEventTimeout = setTimeout(() => {\n      this.emitExpired(key, token);\n    }, expireEventWait);\n  \n    // Add a new timeout\n    this.state.expireTimeouts[key] = expireEventTimeout;\n  }\n  \n  setExpireEventTimeoutAll() {\n    var tokenStorage = this.storage.getStorage();\n    for(var key in tokenStorage) {\n      if (!Object.prototype.hasOwnProperty.call(tokenStorage, key)) {\n        continue;\n      }\n      var token = tokenStorage[key];\n      this.setExpireEventTimeout(key, token);\n    }\n  }\n  \n  // reset timeouts to setup autoRenew for tokens from other document context (tabs)\n  resetExpireEventTimeoutAll() {\n    this.clearExpireEventTimeoutAll();\n    this.setExpireEventTimeoutAll();\n  }\n  \n  add(key, token: Token) {\n    var tokenStorage = this.storage.getStorage();\n    validateToken(token);\n    tokenStorage[key] = token;\n    this.storage.setStorage(tokenStorage);\n    this.emitAdded(key, token);\n    this.setExpireEventTimeout(key, token);\n  }\n  \n  getSync(key) {\n    var tokenStorage = this.storage.getStorage();\n    return tokenStorage[key];\n  }\n  \n  async get(key) {\n    return this.getSync(key);\n  }\n  \n  getTokensSync(): Tokens {\n    const tokens = {} as Tokens;\n    const tokenStorage = this.storage.getStorage();\n    Object.keys(tokenStorage).forEach(key => {\n      const token = tokenStorage[key];\n      if (isAccessToken(token)) {\n        tokens.accessToken = token;\n      } else if (isIDToken(token)) {\n        tokens.idToken = token;\n      } else if (isRefreshToken(token)) { \n        tokens.refreshToken = token;\n      }\n    });\n    return tokens;\n  }\n  \n  async getTokens(): Promise<Tokens> {\n    return this.getTokensSync();\n  }\n\n  getStorageKeyByType(type: TokenType): string {\n    const tokenStorage = this.storage.getStorage();\n    const key = Object.keys(tokenStorage).filter(key => {\n      const token = tokenStorage[key];\n      return (isAccessToken(token) && type === 'accessToken') \n        || (isIDToken(token) && type === 'idToken')\n        || (isRefreshToken(token) && type === 'refreshToken');\n    })[0];\n    return key;\n  }\n\n  private getTokenType(token: Token): TokenType {\n    if (isAccessToken(token)) {\n      return 'accessToken';\n    }\n    if (isIDToken(token)) {\n      return 'idToken';\n    }\n    if(isRefreshToken(token)) {\n      return 'refreshToken';\n    }\n    throw new AuthSdkError('Unknown token type');\n  }\n\n  setTokens(\n    tokens: Tokens,\n    // TODO: callbacks can be removed in the next major version OKTA-407224\n    accessTokenCb?: AccessTokenCallback, \n    idTokenCb?: IDTokenCallback,\n    refreshTokenCb?: RefreshTokenCallback\n  ): void {\n    const handleTokenCallback = (key, token) => {\n      const type = this.getTokenType(token);\n      if (type === 'accessToken') {\n        accessTokenCb && accessTokenCb(key, token);\n      } else if (type === 'idToken') {\n        idTokenCb && idTokenCb(key, token);\n      } else if (type === 'refreshToken') {\n        refreshTokenCb && refreshTokenCb(key, token);\n      }\n    };\n    const handleAdded = (key, token) => {\n      this.emitAdded(key, token);\n      this.setExpireEventTimeout(key, token);\n      handleTokenCallback(key, token);\n    };\n    const handleRenewed = (key, token, oldToken) => {\n      this.emitRenewed(key, token, oldToken);\n      this.clearExpireEventTimeout(key);\n      this.setExpireEventTimeout(key, token);\n      handleTokenCallback(key, token);\n    };\n    const handleRemoved = (key, token) => {\n      this.clearExpireEventTimeout(key);\n      this.emitRemoved(key, token);\n      handleTokenCallback(key, token);\n    };\n    \n    const types: TokenType[] = ['idToken', 'accessToken', 'refreshToken'];\n    const existingTokens = this.getTokensSync();\n\n    // valid tokens\n    types.forEach((type) => {\n      const token = tokens[type];\n      if (token) {\n        validateToken(token, type);\n      }\n    });\n  \n    // add token to storage\n    const storage = types.reduce((storage, type) => {\n      const token = tokens[type];\n      if (token) {\n        const storageKey = this.getStorageKeyByType(type) || type;\n        storage[storageKey] = token;\n      }\n      return storage;\n    }, {});\n    this.storage.setStorage(storage);\n  \n    // emit event and start expiration timer\n    types.forEach(type => {\n      const newToken = tokens[type];\n      const existingToken = existingTokens[type];\n      const storageKey = this.getStorageKeyByType(type) || type;\n      if (newToken && existingToken) { // renew\n        // call handleRemoved first, since it clears timers\n        handleRemoved(storageKey, existingToken);\n        handleAdded(storageKey, newToken);\n        handleRenewed(storageKey, newToken, existingToken);\n      } else if (newToken) { // add\n        handleAdded(storageKey, newToken);\n      } else if (existingToken) { //remove\n        handleRemoved(storageKey, existingToken);\n      }\n    });\n  }\n  \n  remove(key) {\n    // Clear any listener for this token\n    this.clearExpireEventTimeout(key);\n  \n    var tokenStorage = this.storage.getStorage();\n    var removedToken = tokenStorage[key];\n    delete tokenStorage[key];\n    this.storage.setStorage(tokenStorage);\n  \n    this.emitRemoved(key, removedToken);\n  }\n  \n  // TODO: this methods is redundant and can be removed in the next major version OKTA-407224\n  async renewToken(token) {\n    return this.sdk.token?.renew(token);\n  }\n  // TODO: this methods is redundant and can be removed in the next major version OKTA-407224\n  validateToken(token: Token) {\n    return validateToken(token);\n  }\n\n  // TODO: renew method should take no param, change in the next major version OKTA-407224\n  renew(key): Promise<Token | undefined> {\n    // Multiple callers may receive the same promise. They will all resolve or reject from the same request.\n    if (this.state.renewPromise) {\n      return this.state.renewPromise;\n    }\n  \n    try {\n      var token = this.getSync(key);\n      if (!token) {\n        throw new AuthSdkError('The tokenManager has no token for the key: ' + key);\n      }\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  \n    // Remove existing autoRenew timeout\n    this.clearExpireEventTimeout(key);\n  \n    // A refresh token means a replace instead of renewal\n    // Store the renew promise state, to avoid renewing again\n    this.state.renewPromise = this.sdk.token.renewTokens()\n      .then(tokens => {\n        this.setTokens(tokens);\n\n        // resolve token based on the key\n        const tokenType = this.getTokenType(token);\n        return tokens[tokenType];\n      })\n      .catch(err => {\n        // If renew fails, remove token from storage and emit error\n        this.remove(key);\n        err.tokenKey = key;\n        this.emitError(err);\n        throw err;\n      })\n      .finally(() => {\n        // Remove existing promise key\n        this.state.renewPromise = null;\n      });\n  \n    return this.state.renewPromise;\n  }\n  \n  clear() {\n    this.clearExpireEventTimeoutAll();\n    this.storage.clearStorage();\n  }\n\n  clearPendingRemoveTokens() {\n    const tokens = this.getTokensSync();\n    Object.keys(tokens).forEach(key => {\n      if (tokens[key].pendingRemove) {\n       this.remove(key);\n      }\n    });\n  }\n  \n  getTokensFromStorageValue(value) {\n    let tokens;\n    try {\n      tokens = JSON.parse(value) || {};\n    } catch (e) {\n      tokens = {};\n    }\n    return tokens;\n  }\n\n  updateRefreshToken(token: RefreshToken) {\n    const key = this.getStorageKeyByType('refreshToken') || REFRESH_TOKEN_STORAGE_KEY;\n\n    // do not emit any event\n    var tokenStorage = this.storage.getStorage();\n    validateToken(token);\n    tokenStorage[key] = token;\n    this.storage.setStorage(tokenStorage);\n  }\n\n  removeRefreshToken () {\n    const key = this.getStorageKeyByType('refreshToken') || REFRESH_TOKEN_STORAGE_KEY;\n    this.remove(key);\n  }\n\n  addPendingRemoveFlags() {\n    const tokens = this.getTokensSync();\n    Object.keys(tokens).forEach(key => {\n      tokens[key].pendingRemove = true;\n    });\n    this.setTokens(tokens);\n  }\n  \n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { TokenManager, EVENT_EXPIRED } from '../TokenManager';\nimport { AuthSdkError } from '../errors';\nimport { ServiceInterface, ServiceManagerOptions } from '../types';\nimport { isBrowser } from '../features';\n\nexport class AutoRenewService implements ServiceInterface {\n  private tokenManager: TokenManager;\n  private options: ServiceManagerOptions;\n  private renewTimeQueue: Array<number>;\n  private started = false;\n\n  constructor(tokenManager: TokenManager, options: ServiceManagerOptions = {}) {\n    this.tokenManager = tokenManager;\n    this.options = options;\n    this.renewTimeQueue = [];\n    this.onTokenExpiredHandler = this.onTokenExpiredHandler.bind(this);\n  }\n  \n  private shouldThrottleRenew(): boolean {\n    let res = false;\n    this.renewTimeQueue.push(Date.now());\n    if (this.renewTimeQueue.length >= 10) {\n      // get and remove first item from queue\n      const firstTime = this.renewTimeQueue.shift() as number;\n      const lastTime = this.renewTimeQueue[this.renewTimeQueue.length - 1];\n      res = (lastTime - firstTime) < 30 * 1000;\n    }\n    return res;\n  }\n\n  requiresLeadership() {\n    // If tokens sync storage is enabled, handle tokens expiration only in 1 leader tab\n    return !!this.options.syncStorage && isBrowser();\n  }\n\n  private onTokenExpiredHandler(key: string) {\n    if (this.options.autoRenew) {\n      if (this.shouldThrottleRenew()) {\n        const error = new AuthSdkError('Too many token renew requests');\n        this.tokenManager.emitError(error);\n      } else {\n        this.tokenManager.renew(key).catch(() => {}); // Renew errors will emit an \"error\" event \n      }\n    } else if (this.options.autoRemove) {\n      this.tokenManager.remove(key);\n    }\n  }\n\n  canStart() {\n    return (!!this.options.autoRenew || !!this.options.autoRemove);\n  }\n\n  start() {\n    if (this.canStart()) {\n      this.stop();\n      this.tokenManager.on(EVENT_EXPIRED, this.onTokenExpiredHandler);\n      this.started = true;\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      this.tokenManager.off(EVENT_EXPIRED, this.onTokenExpiredHandler);\n      this.renewTimeQueue = [];\n      this.started = false;\n    }\n  }\n\n  isStarted() {\n    return this.started;\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* global window */\nimport { TokenManager } from '../TokenManager';\nimport { isBrowser } from '../features';\nimport { ServiceManagerOptions, ServiceInterface } from '../types';\n\n\nexport class SyncStorageService implements ServiceInterface {\n  private tokenManager: TokenManager;\n  private options: ServiceManagerOptions;\n  private syncTimeout: unknown;\n  private started = false;\n\n  constructor(tokenManager: TokenManager, options: ServiceManagerOptions = {}) {\n    this.tokenManager = tokenManager;\n    this.options = options;\n    this.storageListener = this.storageListener.bind(this);\n  }\n\n  // Sync authState cross multiple tabs when localStorage is used as the storageProvider\n  // A StorageEvent is sent to a window when a storage area it has access to is changed \n  // within the context of another document.\n  // https://developer.mozilla.org/en-US/docs/Web/API/StorageEvent\n  private storageListener({ key, newValue, oldValue }: StorageEvent) {\n    const opts = this.tokenManager.getOptions();\n\n    const handleCrossTabsStorageChange = () => {\n      this.tokenManager.resetExpireEventTimeoutAll();\n      this.tokenManager.emitEventsForCrossTabsStorageUpdate(newValue, oldValue);\n    };\n\n    // Skip if:\n    // not from localStorage.clear (event.key is null)\n    // event.key is not the storageKey\n    // oldValue === newValue\n    if (key && (key !== opts.storageKey || newValue === oldValue)) {\n      return;\n    }\n\n    // LocalStorage cross tabs update is not synced in IE, set a 1s timer by default to read latest value\n    // https://stackoverflow.com/questions/24077117/localstorage-in-win8-1-ie11-does-not-synchronize\n    this.syncTimeout = setTimeout(() => handleCrossTabsStorageChange(), opts._storageEventDelay);\n  }\n\n  requiresLeadership() {\n    return false;\n  }\n\n  isStarted() {\n    return this.started;\n  }\n\n  canStart() {\n    return !!this.options.syncStorage && isBrowser();\n  }\n\n  start() {\n    if (this.canStart()) {\n      this.stop();\n      window.addEventListener('storage', this.storageListener);\n      this.started = true;\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      window.removeEventListener('storage', this.storageListener!);\n      clearTimeout(this.syncTimeout as any);\n      this.started = false;\n    }\n  }\n} ","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport {\n  ServiceManagerInterface,\n  ServiceInterface,\n  ServiceManagerOptions\n} from './types';\nimport { OktaAuth } from '.';\nimport {\n  BroadcastChannel,\n  createLeaderElection,\n  LeaderElector\n} from 'broadcast-channel';\nimport { AutoRenewService, SyncStorageService } from './services';\nimport { isBrowser } from './features';\n\nexport class ServiceManager implements ServiceManagerInterface {\n  private sdk: OktaAuth;\n  private options: ServiceManagerOptions;\n  private services: Map<string, ServiceInterface>;\n  private channel?: BroadcastChannel;\n  private elector?: LeaderElector;\n  private started: boolean;\n\n  private static knownServices = ['autoRenew', 'syncStorage'];\n\n  private static defaultOptions = {\n    autoRenew: true,\n    autoRemove: true,\n    syncStorage: true\n  };\n\n  constructor(sdk: OktaAuth, options: ServiceManagerOptions = {}) {\n    this.sdk = sdk;\n\n    // TODO: backwards compatibility, remove in next major version - OKTA-473815\n    const { autoRenew, autoRemove, syncStorage } = sdk.tokenManager.getOptions();\n    this.options = Object.assign({}, \n      ServiceManager.defaultOptions,\n      { autoRenew, autoRemove, syncStorage },\n      options\n    );\n\n    this.started = false;\n    this.services = new Map();\n    this.onLeaderDuplicate = this.onLeaderDuplicate.bind(this);\n    this.onLeader = this.onLeader.bind(this);\n\n    ServiceManager.knownServices.forEach(name => {\n      const svc = this.createService(name);\n      if (svc) {\n        this.services.set(name, svc);\n      }\n    });\n  }\n\n  public static canUseLeaderElection() {\n    return isBrowser();\n  }\n\n  private onLeader() {\n    if (this.started) {\n      // Start services that requires leadership\n      this.startServices();\n    }\n  }\n\n  private onLeaderDuplicate() {\n  }\n\n  isLeader() {\n    return !!this.elector?.isLeader;\n  }\n\n  hasLeader() {\n    return this.elector?.hasLeader;\n  }\n\n  isLeaderRequired() {\n    return [...this.services.values()].some(srv => srv.requiresLeadership());\n  }\n\n  async start() {\n    if (this.started) {\n      return;     // noop if services have already started\n    }\n    // only start election if a leader is required\n    if (this.isLeaderRequired()) {\n      await this.startElector();\n    }\n    this.startServices();\n    this.started = true;\n  }\n  \n  async stop() {\n    await this.stopElector();\n    this.stopServices();\n    this.started = false;\n  }\n\n  getService(name: string): ServiceInterface | undefined {\n    return this.services.get(name);\n  }\n\n  private startServices() {\n    for (const srv of this.services.values()) {\n      const canStart = srv.canStart() && !srv.isStarted() && (srv.requiresLeadership() ? this.isLeader() : true);\n      if (canStart) {\n        srv.start();\n      }\n    }\n  }\n\n  private stopServices() {\n    for (const srv of this.services.values()) {\n      srv.stop();\n    }\n  }\n\n  private async startElector() {\n    await this.stopElector();\n    if (ServiceManager.canUseLeaderElection()) {\n      if (!this.channel) {\n        const { broadcastChannelName } = this.options;\n        this.channel = new BroadcastChannel(broadcastChannelName as string);\n      }\n      if (!this.elector) {\n        this.elector = createLeaderElection(this.channel);\n        this.elector.onduplicate = this.onLeaderDuplicate;\n        this.elector.awaitLeadership().then(this.onLeader);\n      }\n    }\n  }\n\n  private async stopElector() {\n    if (this.elector) {\n      await this.elector?.die();\n      this.elector = undefined;\n      await this.channel?.close();\n      this.channel = undefined;\n    }\n  }\n\n  private createService(name: string): ServiceInterface {\n    const tokenManager = this.sdk.tokenManager;\n\n    let service: ServiceInterface | undefined;\n    switch (name) {\n      case 'autoRenew':\n        service = new AutoRenewService(tokenManager, {...this.options});\n        break;\n      case 'syncStorage':\n        service = new SyncStorageService(tokenManager, {...this.options});\n        break;\n      default:\n        throw new Error(`Unknown service ${name}`);\n    }\n    return service;\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// Implements a queue for synchronous or asynchronous methods\n// Methods will be wrapped in a promise and execute sequentially\n// This can be used to prevent concurrent calls to a single method or a set of methods\n\nimport { isPromise, warn } from './util';\n\ninterface QueueItem {\n  method: () => void;\n  thisObject: object;\n  args: any[];\n  resolve: (value?: unknown) => void;\n  reject: (reason?: unknown) => void;\n}\n\ninterface PromiseQueueOptions {\n  quiet?: boolean; // if false, concurrrency warnings will not be logged\n}\nclass PromiseQueue {\n  queue: QueueItem[];\n  running: boolean;\n  options: PromiseQueueOptions;\n\n  constructor(options: PromiseQueueOptions = { quiet: false }) {\n    this.queue = [];\n    this.running = false;\n    this.options = options;\n  }\n\n  // Returns a promise\n  // If the method is synchronous, it will resolve when the method completes\n  // If the method returns a promise, it will resolve (or reject) with the value from the method's promise\n  push(method: (...args: any) => any, thisObject: any, ...args: any[]) {\n    return new Promise((resolve, reject) => {\n      if (this.queue.length > 0) {\n        // There is at least one other pending call.\n        // The PromiseQueue will prevent these methods from running concurrently.\n        if (this.options.quiet !== false) {\n          warn(\n            'Async method is being called but another async method is already running. ' +\n            'The new method will be delayed until the previous method completes.'\n          );\n        }\n      }\n      this.queue.push({\n        method,\n        thisObject,\n        args,\n        resolve,\n        reject\n      });\n      this.run();\n    });\n  }\n\n  run() {\n    if (this.running) {\n      return;\n    }\n    if (this.queue.length === 0) {\n      return;\n    }\n    this.running = true;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    var queueItem = this.queue.shift()!;\n    var res = queueItem.method.apply(queueItem.thisObject, queueItem.args as never) as unknown;\n    if (isPromise(res)) {\n      (res as Promise<unknown>).then(queueItem.resolve, queueItem.reject).finally(() => {\n        this.running = false;\n        this.run();\n      });\n    } else {\n      queueItem.resolve(res);\n      this.running = false;\n      this.run();\n    }\n  }\n}\n\nexport default PromiseQueue;","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from '../errors';\nimport { isFingerprintSupported } from '../features';\nimport {\n  addListener,\n  removeListener\n} from '../oidc';\nimport { FingerprintOptions, OktaAuthInterface } from '../types';\n\nexport default function fingerprint(sdk: OktaAuthInterface, options?: FingerprintOptions): Promise<string> {\n  options = options || {};\n\n  if (!isFingerprintSupported()) {\n    return Promise.reject(new AuthSdkError('Fingerprinting is not supported on this device'));\n  }\n\n  var timeout;\n  var iframe;\n  var listener;\n  var promise = new Promise(function (resolve, reject) {\n    iframe = document.createElement('iframe');\n    iframe.style.display = 'none';\n\n    // eslint-disable-next-line complexity\n    listener = function listener(e) {\n      if (!e || !e.data || e.origin !== sdk.getIssuerOrigin()) {\n        return;\n      }\n\n      try {\n        var msg = JSON.parse(e.data);\n      } catch (err) {\n        // iframe messages should all be parsable\n        // skip not parsable messages come from other sources in same origin (browser extensions)\n        // TODO: add namespace flag in okta-core to distinguish messages that come from other sources\n        return;\n      }\n\n      if (!msg) { return; }\n      if (msg.type === 'FingerprintAvailable') {\n        return resolve(msg.fingerprint as string);\n      }\n      if (msg.type === 'FingerprintServiceReady') {\n        e.source.postMessage(JSON.stringify({\n          type: 'GetFingerprint'\n        }), e.origin);\n      }\n    };\n    addListener(window, 'message', listener);\n\n    iframe.src = sdk.getIssuerOrigin() + '/auth/services/devicefingerprint';\n    document.body.appendChild(iframe);\n\n    timeout = setTimeout(function() {\n      reject(new AuthSdkError('Fingerprinting timed out'));\n    }, options?.timeout || 15000);\n  });\n\n  return promise.finally(function() {\n    clearTimeout(timeout);\n    removeListener(window, 'message', listener);\n    if (document.body.contains(iframe)) {\n      iframe.parentElement.removeChild(iframe);\n    }\n  }) as Promise<string>;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n \n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore \n// Do not use this type in code, so it won't be emitted in the declaration output\nimport PCancelable from 'p-cancelable';\nimport { AuthSdkError } from './errors';\nimport { AuthState, AuthStateLogOptions } from './types';\nimport { OktaAuth } from '.';\nimport { getConsole } from './util';\nimport { EVENT_ADDED, EVENT_REMOVED } from './TokenManager';\nimport PromiseQueue from './PromiseQueue';\n\nexport const INITIAL_AUTH_STATE = null;\nconst DEFAULT_PENDING = {\n  updateAuthStatePromise: null,\n  canceledTimes: 0\n};\nconst EVENT_AUTH_STATE_CHANGE = 'authStateChange';\nconst MAX_PROMISE_CANCEL_TIMES = 10;\n\n// only compare first level of authState\nconst isSameAuthState = (prevState: AuthState | null, state: AuthState) => {\n  // initial state is null\n  if (!prevState) {\n    return false;\n  }\n\n  return prevState.isAuthenticated === state.isAuthenticated \n    && JSON.stringify(prevState.idToken) === JSON.stringify(state.idToken)\n    && JSON.stringify(prevState.accessToken) === JSON.stringify(state.accessToken)\n    && prevState.error === state.error;\n};\n\n\nexport class AuthStateManager {\n  _sdk: OktaAuth;\n  _pending: { \n    updateAuthStatePromise: any;\n    canceledTimes: number; \n  };\n  _authState: AuthState | null;\n  _prevAuthState: AuthState | null;\n  _logOptions: AuthStateLogOptions;\n  _transformQueue: PromiseQueue;\n\n  constructor(sdk: OktaAuth) {\n    if (!sdk.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before AuthStateManager');\n    }\n\n    this._sdk = sdk;\n    this._pending = { ...DEFAULT_PENDING };\n    this._authState = INITIAL_AUTH_STATE;\n    this._logOptions = {};\n    this._prevAuthState = null;\n    this._transformQueue = new PromiseQueue({\n      quiet: true\n    });\n\n    // Listen on tokenManager events to start updateState process\n    // \"added\" event is emitted in both add and renew process\n    // Only listen on \"added\" event to update auth state\n    sdk.tokenManager.on(EVENT_ADDED, (key, token) => {\n      this._setLogOptions({ event: EVENT_ADDED, key, token });\n      this.updateAuthState();\n    });\n    sdk.tokenManager.on(EVENT_REMOVED, (key, token) => {\n      this._setLogOptions({ event: EVENT_REMOVED, key, token });\n      this.updateAuthState();\n    });\n  }\n\n  _setLogOptions(options) {\n    this._logOptions = options;\n  }\n\n  getAuthState(): AuthState | null {\n    return this._authState;\n  }\n\n  getPreviousAuthState(): AuthState | null {\n    return this._prevAuthState;\n  }\n\n  async updateAuthState(): Promise<AuthState> {\n    const { transformAuthState, devMode } = this._sdk.options;\n\n    const log = (status) => {\n      const { event, key, token } = this._logOptions;\n      getConsole().group(`OKTA-AUTH-JS:updateAuthState: Event:${event} Status:${status}`);\n      getConsole().log(key, token);\n      getConsole().log('Current authState', this._authState);\n      getConsole().groupEnd();\n      \n      // clear log options after logging\n      this._logOptions = {};\n    };\n\n    const emitAuthStateChange = (authState) => {\n      if (isSameAuthState(this._authState, authState)) {\n        devMode && log('unchanged'); \n        return;\n      }\n      this._prevAuthState = this._authState;\n      this._authState = authState;\n      // emit new authState object\n      this._sdk.emitter.emit(EVENT_AUTH_STATE_CHANGE, { ...authState });\n      devMode && log('emitted');\n    };\n\n    const finalPromise = (origPromise) => {       \n      return this._pending.updateAuthStatePromise.then(() => {\n        const curPromise = this._pending.updateAuthStatePromise;\n        if (curPromise && curPromise !== origPromise) {\n          return finalPromise(curPromise);\n        }\n        return this.getAuthState();\n      });\n    };\n\n    if (this._pending.updateAuthStatePromise) {\n      if (this._pending.canceledTimes >= MAX_PROMISE_CANCEL_TIMES) {\n        // stop canceling then starting a new promise\n        // let existing promise finish to prevent running into loops\n        devMode && log('terminated');\n        return finalPromise(this._pending.updateAuthStatePromise);\n      } else {\n        this._pending.updateAuthStatePromise.cancel();\n      }\n    }\n\n    /* eslint-disable complexity */\n    const cancelablePromise = new PCancelable((resolve, _, onCancel) => {\n      onCancel.shouldReject = false;\n      onCancel(() => {\n        this._pending.updateAuthStatePromise = null;\n        this._pending.canceledTimes = this._pending.canceledTimes + 1;\n        devMode && log('canceled');\n      });\n\n      const emitAndResolve = (authState) => {\n        if (cancelablePromise.isCanceled) {\n          resolve();\n          return;\n        }\n        // emit event and resolve promise \n        emitAuthStateChange(authState);\n        resolve();\n\n        // clear pending states after resolve\n        this._pending = { ...DEFAULT_PENDING };\n      };\n\n      this._sdk.isAuthenticated()\n        .then(() => {\n          if (cancelablePromise.isCanceled) {\n            resolve();\n            return;\n          }\n\n          const { accessToken, idToken, refreshToken } = this._sdk.tokenManager.getTokensSync();\n          const authState = {\n            accessToken,\n            idToken,\n            refreshToken,\n            isAuthenticated: !!(accessToken && idToken)\n          };\n\n          // Enqueue transformAuthState so that it does not run concurrently\n          const promise: Promise<AuthState> = transformAuthState\n            ? this._transformQueue.push(transformAuthState, null, this._sdk, authState) as Promise<AuthState>\n            : Promise.resolve(authState);\n\n          promise\n            .then(authState => emitAndResolve(authState))\n            .catch(error => emitAndResolve({\n              accessToken, \n              idToken, \n              refreshToken,\n              isAuthenticated: false, \n              error\n            }));\n        });\n    });\n    /* eslint-enable complexity */\n    this._pending.updateAuthStatePromise = cancelablePromise;\n\n    return finalPromise(cancelablePromise);\n  }\n\n  subscribe(handler): void {\n    this._sdk.emitter.on(EVENT_AUTH_STATE_CHANGE, handler);\n  }\n\n  unsubscribe(handler?): void {\n    this._sdk.emitter.off(EVENT_AUTH_STATE_CHANGE, handler);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport AuthSdkError from './errors/AuthSdkError';\nimport { StorageProvider, SimpleStorage } from './types';\n\n// formerly known as \"storageBuilder\". Represents an object saved under a key/name.\nexport default class SavedObject implements StorageProvider {\n  storageProvider: SimpleStorage;\n  storageName: string;\n\n  constructor(storage: SimpleStorage, storageName: string) {\n    if (!storage) {\n      throw new AuthSdkError('\"storage\" is required');\n    }\n\n    if (typeof storageName !== 'string' || !storageName.length) {\n      throw new AuthSdkError('\"storageName\" is required');\n    }\n\n    this.storageName = storageName;\n    this.storageProvider = storage;\n  }\n\n  //\n  // SimpleStorage interface\n  //\n\n  getItem(key: string) {\n    return this.getStorage()[key];\n  }\n\n  setItem(key: string, value: any) {\n    return this.updateStorage(key, value);\n  }\n\n  removeItem(key: string) {\n    return this.clearStorage(key);\n  }\n\n  //\n  // StorageProvider interface\n  //\n\n  getStorage() {\n    var storageString = this.storageProvider.getItem(this.storageName);\n    storageString = storageString || '{}';\n    try {\n      return JSON.parse(storageString);\n    } catch(e) {\n      throw new AuthSdkError('Unable to parse storage string: ' + this.storageName);\n    }\n  }\n\n  setStorage(obj?: any) {\n    try {\n      var storageString = obj ? JSON.stringify(obj) : '{}';\n      this.storageProvider.setItem(this.storageName, storageString);\n    } catch(e) {\n      throw new AuthSdkError('Unable to set storage: ' + this.storageName);\n    }\n  }\n\n  clearStorage(key?: string) {\n    if (!key) {\n      // clear all\n      if (this.storageProvider.removeItem) {\n        this.storageProvider.removeItem(this.storageName);\n      } else {\n        this.setStorage();\n      }\n      return;\n    }\n\n    var obj = this.getStorage();\n    delete obj[key];\n    this.setStorage(obj);\n  }\n\n  updateStorage(key, value) {\n    var obj = this.getStorage();\n    obj[key] = value;\n    this.setStorage(obj);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n\nimport {\n  PKCE_STORAGE_NAME,\n  TOKEN_STORAGE_NAME,\n  TRANSACTION_STORAGE_NAME,\n  SHARED_TRANSACTION_STORAGE_NAME,\n  ORIGINAL_URI_STORAGE_NAME,\n  IDX_RESPONSE_STORAGE_NAME,\n  CACHE_STORAGE_NAME,\n  REDIRECT_OAUTH_PARAMS_NAME\n} from './constants';\nimport {\n  StorageUtil,\n  StorageProvider,\n  StorageOptions,\n  PKCEStorage,\n  CookieOptions,\n  TransactionStorage,\n  IdxResponseStorage,\n  StorageManagerOptions,\n  SimpleStorage\n} from './types';\nimport SavedObject from './SavedObject';\nimport { isBrowser } from './features';\nimport { warn } from './util';\nimport { AuthSdkError } from './errors';\n\nfunction logServerSideMemoryStorageWarning(options: StorageOptions) {\n  if (!isBrowser() && !options.storageProvider && !options.storageProvider) {\n    // eslint-disable-next-line max-len\n    warn('Memory storage can only support simple single user use case on server side, please provide custom storageProvider or storageKey if advanced scenarios need to be supported.');\n  }\n}\n\nexport class StorageManager {\n  storageManagerOptions: StorageManagerOptions;\n  cookieOptions: CookieOptions;\n  storageUtil: StorageUtil;\n\n  constructor(storageManagerOptions: StorageManagerOptions, cookieOptions: CookieOptions, storageUtil: StorageUtil) {\n    this.storageManagerOptions = storageManagerOptions;\n    this.cookieOptions = cookieOptions;\n    this.storageUtil = storageUtil;\n  }\n\n  // combines defaults in order\n  getOptionsForSection(sectionName: string, overrideOptions?: StorageOptions) {\n    return Object.assign({}, this.storageManagerOptions[sectionName], overrideOptions);\n  }\n \n  // generic method to get any available storage provider\n  // eslint-disable-next-line complexity\n  getStorage(options: StorageOptions): SimpleStorage {\n    options = Object.assign({}, this.cookieOptions, options); // set defaults\n\n    if (options.storageProvider) {\n      return options.storageProvider;\n    }\n\n    let { storageType, storageTypes } = options;\n\n    if(storageType === 'sessionStorage') {\n      options.sessionCookie = true;\n    }\n\n    // Maintain compatibility. Automatically fallback. May change in next major version. OKTA-362589\n    if (storageType && storageTypes) {\n      const idx = storageTypes.indexOf(storageType);\n      if (idx >= 0) {\n        storageTypes = storageTypes.slice(idx);\n        storageType = undefined;\n      }\n    }\n\n    if (!storageType) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      storageType = this.storageUtil.findStorageType(storageTypes!);\n    }\n    return this.storageUtil.getStorageByType(storageType, options);\n  }\n\n  // stateToken, interactionHandle\n  getTransactionStorage(options?: StorageOptions): TransactionStorage {\n    options = this.getOptionsForSection('transaction', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || TRANSACTION_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  getSharedTansactionStorage(options?: StorageOptions): TransactionStorage {\n    options = this.getOptionsForSection('shared-transaction', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || SHARED_TRANSACTION_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  getOriginalUriStorage(options?: StorageOptions): TransactionStorage {\n    options = this.getOptionsForSection('original-uri', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || ORIGINAL_URI_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  // intermediate idxResponse\n  // store for network traffic optimazation purpose\n  // TODO: revisit in auth-js 6.0 epic JIRA: OKTA-399791\n  getIdxResponseStorage(options?: StorageOptions): IdxResponseStorage | null {\n    let storage;\n    if (isBrowser()) {\n      // on browser side only use memory storage \n      try {\n        storage = this.storageUtil.getStorageByType('memory', options);\n      } catch (e) {\n        // it's ok to miss response storage\n        // eslint-disable-next-line max-len\n        warn('No response storage found, you may want to provide custom implementation for intermediate idx responses to optimize the network traffic');\n      }\n    } else {\n      // on server side re-use transaction custom storage\n      const transactionStorage = this.getTransactionStorage(options);\n      if (transactionStorage) {\n        storage = {\n          getItem: (key) => {\n            const transaction = transactionStorage.getStorage();\n            if (transaction && transaction[key]) {\n              return transaction[key];\n            }\n            return null;\n          },\n          setItem: (key, val) => {\n            const transaction = transactionStorage.getStorage();\n            if (!transaction) {\n              throw new AuthSdkError('Transaction has been cleared, failed to save idxState');\n            }\n            transaction[key] = val;\n            transactionStorage.setStorage(transaction);\n          },\n          removeItem: (key) => {\n            const transaction = transactionStorage.getStorage();\n            if (!transaction) {\n              return;\n            }\n            delete transaction[key];\n            transactionStorage.setStorage(transaction);\n          }\n        };\n      }\n    }\n\n    if (!storage) {\n      return null;\n    }\n\n    return new SavedObject(storage, IDX_RESPONSE_STORAGE_NAME);\n  }\n\n  // access_token, id_token, refresh_token\n  getTokenStorage(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('token', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || TOKEN_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  // caches well-known response, among others\n  getHttpCache(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('cache', options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || CACHE_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  // Will be removed in an upcoming major version. OKTA-362589\n  getLegacyPKCEStorage(options?: StorageOptions): PKCEStorage {\n    options = this.getOptionsForSection('legacy-pkce', options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || PKCE_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  getLegacyOAuthParamsStorage(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('legacy-oauth-params', options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || REDIRECT_OAUTH_PARAMS_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n}\n","/* eslint-disable no-use-before-define */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Input } from './api';\n\n\n// TODO: remove when idx-js provides type information\n\nexport interface ChallengeData {\n  challenge: string; \n  userVerification: string; \n  extensions?: {\n    appid: string;\n  };\n}\nexport interface ActivationData {\n  challenge: string;\n  rp: {\n    name: string;\n  };\n  user: {\n    id: string;\n    name: string;\n    displayName: string;\n  };\n  pubKeyCredParams: {\n    type: string;\n    alg: number;\n  }[];\n  attestation?: string;\n  authenticatorSelection?: {\n    userVerification?: string;\n    authenticatorAttachment?: string;\n    requireResidentKey?: boolean;\n    residentKey?: string;\n  };\n  excludeCredentials?: {\n    id: string;\n    type: string;\n  }[];\n}\nexport interface IdxAuthenticatorMethod {\n  type: string;\n}\nexport interface IdxAuthenticator {\n  displayName: string;\n  id: string;\n  key: string;\n  methods: IdxAuthenticatorMethod[];\n  type: string;\n  settings?: {\n    complexity?: unknown;\n    age?: unknown;\n  };\n  contextualData?: {\n    enrolledQuestion?: {\n      question: string;\n      questionKey: string;\n    };\n    qrcode?: { \n      href: string; \n      method: string; \n      type: string; \n    };\n    sharedSecret?: string;\n    questions?: {\n      questionKey: string;\n      question: string;\n    }[];\n    questionKeys?: string[];\n    selectedChannel?: string;\n    activationData?: ActivationData;\n    challengeData?: ChallengeData;\n  };\n  credentialId?: string;\n  enrollmentId?: string;\n}\n\nexport interface IdxForm {\n  value: IdxRemediationValue[];\n}\n\nexport interface IdxOption {\n  value: string | {form: IdxForm} | Input[];\n  label: string;\n  relatesTo?: IdxAuthenticator;\n}\n\nexport interface IdpConfig {\n  id: string;\n  name: string;\n}\n\nexport interface IdxRemediationValueForm {\n  form: IdxForm;\n}\n\nexport interface IdxRemediationValue {\n  name: string;\n  type?: string;\n  required?: boolean;\n  secret?: boolean;\n  visible?: boolean;\n  mutable?: boolean;\n  value?: string | IdxRemediationValueForm;\n  label?: string;\n  form?: IdxForm;\n  options?: IdxOption[];\n  messages?: IdxMessages;\n  minLength?: number;\n  maxLength?: number;\n}\n\nexport interface IdxRemediation {\n  name: string;\n  label?: string;\n  value?: IdxRemediationValue[];\n  relatesTo?: {\n    type?: string;\n    value: IdxAuthenticator;\n  };\n  idp?: IdpConfig;\n  href?: string;\n  method?: string;\n  type?: string;\n  accepts?: string;\n  produces?: string;\n  refresh?: number;\n  rel?: string[];\n  action?: (payload?: IdxActionParams) => Promise<IdxResponse>;\n}\n\nexport interface IdxContext {\n  version: string;\n  stateHandle: string;\n  expiresAt: string;\n  intent: string;\n  currentAuthenticator: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n  authenticators: {\n    type: string;\n    value: IdxAuthenticator[];\n  };\n  authenticatorEnrollments: {\n    type: string;\n    value: IdxAuthenticator[];\n  };\n  enrollmentAuthenticator: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n  user?: {\n    type: string;\n    value: Record<string, unknown>;\n  };\n  app: {\n    type: string;\n    value: Record<string, unknown>;\n  };\n  messages?: IdxMessages;\n  success?: IdxRemediation;\n  failure?: IdxRemediation;\n}\n\nexport interface IdxMessage {\n  message: string;\n  class: string;\n  i18n: {\n    key: string;\n    params?: unknown[];\n  };\n}\n\nexport interface IdxMessages {\n  type: 'array';\n  value: IdxMessage[];\n}\n\n// JSON response from the server\nexport interface RawIdxResponse {\n  version: string;\n  stateHandle: string;\n  intent?: string;\n  expiresAt?: string;\n  remediation?: {\n    type: 'array';\n    value: IdxRemediation[];\n  };\n  messages?: IdxMessages;\n  success?: boolean;\n  successWithInteractionCode?: IdxRemediation;\n}\n\nexport function isRawIdxResponse(obj: any): obj is RawIdxResponse {\n  return obj && obj.version;\n}\n\nexport interface IdxActionParams {\n  [key: string]: string | boolean | number | object;\n}\n\nexport interface IdxActions {\n  [key: string]: (params?: IdxActionParams) => Promise<IdxResponse>;\n}\n\nexport interface IdxToPersist {\n  interactionHandle?: string;\n  withCredentials?: boolean;\n}\n\nexport interface IdxActionFunction {\n  (params: IdxActionParams): Promise<IdxResponse>;\n  neededParams?: Array<Array<IdxRemediationValue>>;\n}\n\nexport interface IdxResponse {\n  proceed: (remediationName: string, params: unknown) => Promise<IdxResponse>;\n  neededToProceed: IdxRemediation[];\n  rawIdxState: RawIdxResponse;\n  interactionCode?: string;\n  actions: IdxActions;\n  toPersist: IdxToPersist;\n  context?: IdxContext;\n  requestDidSucceed?: boolean;\n  stepUp?: boolean;\n}\n\nexport function isIdxResponse(obj: any): obj is IdxResponse {\n  return obj && isRawIdxResponse(obj.rawIdxState);\n}\n","import { isTransactionMeta, TransactionMeta } from '../types';\nimport { StorageManager } from '../StorageManager';\n\nconst MAX_ENTRY_LIFETIME = 30 * 60 * 1000; // 30 minutes\n\nexport function pruneSharedStorage(storageManager: StorageManager) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  Object.keys(entries).forEach(state => {\n    const entry = entries[state];\n    const age = Date.now() - entry.dateCreated;\n    if (age > MAX_ENTRY_LIFETIME) {\n      delete entries[state];\n    }\n  });\n  sharedStorage.setStorage(entries);\n}\n\nexport function saveTransactionToSharedStorage(storageManager: StorageManager, state: string, meta: TransactionMeta) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  entries[state] = {\n    dateCreated: Date.now(),\n    transaction: meta\n  };\n  sharedStorage.setStorage(entries);\n}\n\n\nexport function loadTransactionFromSharedStorage(storageManager: StorageManager, state: string) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  const entry = entries[state];\n  if (entry && entry.transaction && isTransactionMeta(entry.transaction)) {\n    return entry.transaction;\n  }\n  return null;\n}\n\nexport function clearTransactionFromSharedStorage(storageManager: StorageManager, state: string) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  delete entries[state];\n  sharedStorage.setStorage(entries);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from './errors';\nimport { REDIRECT_NONCE_COOKIE_NAME, REDIRECT_OAUTH_PARAMS_NAME, REDIRECT_STATE_COOKIE_NAME } from './constants';\nimport { StorageManager } from './StorageManager';\nimport {\n  StorageProvider,\n  TransactionMeta,\n  isTransactionMeta,\n  isOAuthTransactionMeta,\n  PKCETransactionMeta,\n  OAuthTransactionMeta,\n  TransactionMetaOptions,\n  TransactionManagerOptions,\n  CookieStorage,\n  SavedIdxResponse,\n  IntrospectOptions\n} from './types';\nimport { isRawIdxResponse } from './idx/types/idx-js';\nimport { warn } from './util';\nimport {\n  clearTransactionFromSharedStorage,\n  loadTransactionFromSharedStorage,\n  pruneSharedStorage,\n  saveTransactionToSharedStorage\n} from './util/sharedStorage';\n\nexport interface ClearTransactionMetaOptions extends TransactionMetaOptions {\n  clearSharedStorage?: boolean; // true by default\n  clearIdxResponse?: boolean; // true by default\n}\nexport default class TransactionManager {\n  options: TransactionManagerOptions;\n  storageManager: StorageManager;\n  legacyWidgetSupport: boolean;\n  saveNonceCookie: boolean;\n  saveStateCookie: boolean;\n  saveParamsCookie: boolean;\n  enableSharedStorage: boolean;\n  saveLastResponse: boolean;\n\n  constructor(options: TransactionManagerOptions) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.storageManager = options.storageManager!;\n    this.legacyWidgetSupport = options.legacyWidgetSupport === false ? false : true;\n    this.saveNonceCookie = options.saveNonceCookie === false ? false : true;\n    this.saveStateCookie = options.saveStateCookie === false ? false : true;\n    this.saveParamsCookie = options.saveParamsCookie === false ? false : true;\n    this.enableSharedStorage = options.enableSharedStorage === false ? false : true;\n    this.saveLastResponse = options.saveLastResponse === false ? false : true;\n    this.options = options;\n  }\n\n  // eslint-disable-next-line complexity\n  clear(options: ClearTransactionMetaOptions = {}) {\n    const transactionStorage: StorageProvider = this.storageManager.getTransactionStorage();\n    const meta = transactionStorage.getStorage();\n\n    // Clear primary storage (by default, sessionStorage on browser)\n    transactionStorage.clearStorage();\n\n    // Usually we want to also clear shared storage unless another tab may need it to continue/complete a flow\n    if (this.enableSharedStorage && options.clearSharedStorage !== false) {\n      const state = options.state || meta?.state;\n      if (state) {\n        clearTransactionFromSharedStorage(this.storageManager, state);\n      }\n    }\n\n    if (options.clearIdxResponse !== false) {\n      this.clearIdxResponse();\n    }\n    \n    if (!this.legacyWidgetSupport) {\n      return;\n    }\n\n    // This is for compatibility with older versions of the signin widget. OKTA-304806\n    if (options.oauth) {\n      this.clearLegacyOAuthParams();\n    }\n\n    if (options.pkce) {\n      this.clearLegacyPKCE();\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  save(meta: TransactionMeta, options: TransactionMetaOptions = {}) {\n    // There must be only one transaction executing at a time.\n    // Before saving, check to see if a transaction is already stored.\n    // An existing transaction indicates a concurrency/race/overlap condition\n\n    let storage: StorageProvider = this.storageManager.getTransactionStorage();\n    const obj = storage.getStorage();\n    // oie process may need to update transaction in the middle of process for tracking purpose\n    // false alarm might be caused \n    // TODO: revisit for a better solution, https://oktainc.atlassian.net/browse/OKTA-430919\n    if (isTransactionMeta(obj) && !options.muteWarning) {\n      // eslint-disable-next-line max-len\n      warn('a saved auth transaction exists in storage. This may indicate another auth flow is already in progress.');\n    }\n\n    storage.setStorage(meta);\n\n    // Shared storage allows continuation of transaction in another tab\n    if (this.enableSharedStorage && meta.state) {\n      saveTransactionToSharedStorage(this.storageManager, meta.state, meta);\n    }\n\n    if (!options.oauth) {\n      return;\n    }\n  \n    // Legacy cookie storage\n    if (this.saveNonceCookie || this.saveStateCookie || this.saveParamsCookie) {\n      const cookieStorage: CookieStorage = this.storageManager.getStorage({ storageType: 'cookie' }) as CookieStorage;\n\n      if (this.saveParamsCookie) {\n        const { \n          responseType,\n          state,\n          nonce,\n          scopes,\n          clientId,\n          urls,\n          ignoreSignature\n        } = meta;\n        const oauthParams = {\n          responseType,\n          state,\n          nonce,\n          scopes,\n          clientId,\n          urls,\n          ignoreSignature\n        };\n        cookieStorage.setItem(REDIRECT_OAUTH_PARAMS_NAME, JSON.stringify(oauthParams), null);\n      }\n\n      if (this.saveNonceCookie && meta.nonce) {\n        // Set nonce cookie for servers to validate nonce in id_token\n        cookieStorage.setItem(REDIRECT_NONCE_COOKIE_NAME, meta.nonce, null);\n      }\n\n      if (this.saveStateCookie && meta.state) {\n        // Set state cookie for servers to validate state\n        cookieStorage.setItem(REDIRECT_STATE_COOKIE_NAME, meta.state, null);\n      }\n    }\n  }\n\n  exists(options: TransactionMetaOptions = {}): boolean {\n    try {\n      const meta = this.load(options);\n      return !!meta;\n    } catch {\n      return false;\n    }\n  }\n\n  // load transaction meta from storage\n  // eslint-disable-next-line complexity,max-statements\n  load(options: TransactionMetaOptions = {}): TransactionMeta | null {\n\n    let meta: TransactionMeta;\n\n    // If state was passed, try loading transaction data from shared storage\n    if (this.enableSharedStorage && options.state) {\n      pruneSharedStorage(this.storageManager); // prune before load\n      meta = loadTransactionFromSharedStorage(this.storageManager, options.state);\n      if (isTransactionMeta(meta)) {\n        return meta;\n      }\n    }\n\n    let storage: StorageProvider = this.storageManager.getTransactionStorage();\n    meta = storage.getStorage();\n    if (isTransactionMeta(meta)) {\n      // if we have meta in the new location, there is no need to go further\n      return meta;\n    }\n\n    if (!this.legacyWidgetSupport) {\n      return null;\n    }\n\n    // This is for compatibility with older versions of the signin widget. OKTA-304806\n    if (options.oauth) {\n      try {\n        const oauthParams = this.loadLegacyOAuthParams();\n        Object.assign(meta, oauthParams);\n      } finally {\n        this.clearLegacyOAuthParams();\n      }\n    }\n\n    if (options.pkce) {\n      try {\n        const pkceMeta: PKCETransactionMeta = this.loadLegacyPKCE();\n        Object.assign(meta, pkceMeta);\n      } finally {\n        this.clearLegacyPKCE();\n      }\n    }\n\n    if (isTransactionMeta(meta)) {\n      return meta;\n    }\n    return null;\n  }\n\n  // This is for compatibility with older versions of the signin widget. OKTA-304806\n  clearLegacyPKCE(): void {\n    // clear storages\n    let storage: StorageProvider;\n\n    if (this.storageManager.storageUtil.testStorageType('localStorage')) {\n      storage = this.storageManager.getLegacyPKCEStorage({ storageType: 'localStorage' });\n      storage.clearStorage();\n    }\n\n    if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n      storage = this.storageManager.getLegacyPKCEStorage({ storageType: 'sessionStorage' });\n      storage.clearStorage();\n    }\n  }\n\n  loadLegacyPKCE(): PKCETransactionMeta {\n    let storage: StorageProvider;\n    let obj;\n    \n    // Try reading from localStorage first.\n    if (this.storageManager.storageUtil.testStorageType('localStorage')) {\n      storage = this.storageManager.getLegacyPKCEStorage({ storageType: 'localStorage' });\n      obj = storage.getStorage();\n      if (obj && obj.codeVerifier) {\n        return obj;\n      }\n    }\n\n    // If meta is not valid, read from sessionStorage. This is expected for more recent versions of the widget.\n    if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n      storage = this.storageManager.getLegacyPKCEStorage({ storageType: 'sessionStorage' });\n      obj = storage.getStorage();\n      if (obj && obj.codeVerifier) {\n        return obj;\n      }\n    }\n    \n    // If meta is not valid, throw an exception to avoid misleading server-side error\n    // The most likely cause of this error is trying to handle a callback twice\n    // eslint-disable-next-line max-len\n    throw new AuthSdkError('Could not load PKCE codeVerifier from storage. This may indicate the auth flow has already completed or multiple auth flows are executing concurrently.', undefined);\n  }\n\n  clearLegacyOAuthParams(): void {\n    // clear storages\n    let storage: StorageProvider;\n\n    if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n      storage = this.storageManager.getLegacyOAuthParamsStorage({ storageType: 'sessionStorage' });\n      storage.clearStorage();\n    }\n\n    if (this.storageManager.storageUtil.testStorageType('cookie')) {\n      storage = this.storageManager.getLegacyOAuthParamsStorage({ storageType: 'cookie' });\n      storage.clearStorage();\n    }\n  }\n\n  loadLegacyOAuthParams(): OAuthTransactionMeta {\n    let storage: StorageProvider;\n    let oauthParams;\n  \n    // load first from session storage\n    if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n      storage = this.storageManager.getLegacyOAuthParamsStorage({ storageType: 'sessionStorage' });\n      oauthParams = storage.getStorage();\n    }\n    if (isOAuthTransactionMeta(oauthParams)) {\n      return oauthParams;\n    }\n\n    // try to load from cookie\n    if (this.storageManager.storageUtil.testStorageType('cookie')) {\n      storage = this.storageManager.getLegacyOAuthParamsStorage({ storageType: 'cookie' });\n      oauthParams = storage.getStorage();\n    }\n\n    if (isOAuthTransactionMeta(oauthParams)) {\n      return oauthParams;\n    }\n\n\n    throw new AuthSdkError('Unable to retrieve OAuth redirect params from storage');\n\n    // Something is there but we don't recognize it\n    // throw new AuthSdkError('Unable to parse the ' + REDIRECT_OAUTH_PARAMS_NAME + ' value from storage');\n  }\n\n  saveIdxResponse(data: SavedIdxResponse): void {\n    if (!this.saveLastResponse) {\n      return;\n    }\n    const storage = this.storageManager.getIdxResponseStorage();\n    if (!storage) {\n      return;\n    }\n    storage.setStorage(data);\n  }\n\n  // eslint-disable-next-line complexity\n  loadIdxResponse(options?: IntrospectOptions): SavedIdxResponse | null {\n    if (!this.saveLastResponse) {\n      return null;\n    }\n    const storage = this.storageManager.getIdxResponseStorage();\n    if (!storage) {\n      return null;\n    }\n    const storedValue = storage.getStorage();\n    if (!storedValue || !isRawIdxResponse(storedValue.rawIdxResponse)) {\n      return null;\n    }\n\n    if (options) {\n      const { stateHandle, interactionHandle } = options;\n      if (stateHandle && storedValue.stateHandle !== stateHandle) {\n        return null;\n      }\n      if (interactionHandle && storedValue.interactionHandle !== interactionHandle) {\n        return null;\n      }\n    }\n\n    return storedValue;\n  }\n\n  clearIdxResponse(): void {\n    if (!this.saveLastResponse) {\n      return;\n    }\n    const storage = this.storageManager.getIdxResponseStorage();\n    storage?.clearStorage();\n  }\n}","/*!\n * Copyright (c) 2018-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from './errors/AuthSdkError';\nimport { OktaAuthOptions } from './types';\n\n// TODO: use @okta/configuration-validation (move module to this monorepo?)\n// eslint-disable-next-line complexity\nfunction assertValidConfig(args: OktaAuthOptions) {\n  args = args || {};\n\n  var scopes = args.scopes;\n  if (scopes && !Array.isArray(scopes)) {\n    throw new AuthSdkError('scopes must be a array of strings. ' +\n      'Required usage: new OktaAuth({scopes: [\"openid\", \"email\"]})');\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  var issuer = args.issuer!;\n  if (!issuer) {\n    throw new AuthSdkError('No issuer passed to constructor. ' + \n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com/oauth2/{authServerId}\"})');\n  }\n\n  var isUrlRegex = new RegExp('^http?s?://.+');\n  if (!isUrlRegex.test(issuer)) {\n    throw new AuthSdkError('Issuer must be a valid URL. ' + \n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com/oauth2/{authServerId}\"})');\n  }\n\n  if (issuer.indexOf('-admin.') !== -1) {\n    throw new AuthSdkError('Issuer URL passed to constructor contains \"-admin\" in subdomain. ' +\n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com})');\n  }\n}\n\nexport {\n  assertValidConfig\n};\n","/*!\n * Copyright (c) 2018-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport crossFetch from 'cross-fetch';\nimport { FetchOptions, HttpResponse } from '../types';\n\n// content-type = application/json OR application/ion+json\nconst appJsonContentTypeRegex = /application\\/\\w*\\+?json/;\n\nfunction readData(response: Response): Promise<object | string> {\n  if (response.headers.get('Content-Type') &&\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    response.headers.get('Content-Type')!.toLowerCase().indexOf('application/json') >= 0) {\n  return response.json()\n    // JSON parse can fail if response is not a valid object\n    .catch(e => {\n      return {\n        error: e,\n        errorSummary: 'Could not parse server response'\n      };\n    });\n  } else {\n    return response.text();\n  }\n}\n\nfunction formatResult(status: number, data: object | string, response: Response) {\n  const isObject = typeof data === 'object';\n  const headers = {};\n  for (const pair of (response.headers as any).entries()) {\n    headers[pair[0]] = pair[1];\n  }\n  const result: HttpResponse = {\n    responseText: isObject ? JSON.stringify(data) : data as string,\n    status: status,\n    headers\n  };\n  if (isObject) {\n    result.responseType = 'json';\n    result.responseJSON = data as object;\n  }\n  return result;\n}\n\n/* eslint-disable complexity */\nfunction fetchRequest(method: string, url: string, args: FetchOptions) {\n  var body = args.data;\n  var headers = args.headers || {};\n  var contentType = (headers['Content-Type'] || headers['content-type'] || '');\n\n  if (body && typeof body !== 'string') {\n    // JSON encode body (if appropriate)\n    if (appJsonContentTypeRegex.test(contentType)) {\n      body = JSON.stringify(body);\n    }\n    else if (contentType === 'application/x-www-form-urlencoded') {\n      body = Object.entries(body)\n      .map( ([param, value]) => `${param}=${encodeURIComponent(value)}` )\n      .join('&');\n    }\n  }\n\n  var fetch = global.fetch || crossFetch;\n  var fetchPromise = fetch(url, {\n    method: method,\n    headers: args.headers,\n    body: body as string,\n    credentials: args.withCredentials ? 'include' : 'omit'\n  });\n\n  if (!fetchPromise.finally) {\n    fetchPromise = Promise.resolve(fetchPromise);\n  }\n\n  return fetchPromise.then(function(response) {\n    var error = !response.ok;\n    var status = response.status;\n    return readData(response)\n      .then(data => {\n        return formatResult(status, data, response);\n      })\n      .then(result => {\n        if (error || result.responseJSON?.error) {\n          // Throwing result object since error handling is done in http.js\n          throw result;\n        }\n        return result;\n      });\n  });\n}\n\nexport default fetchRequest;\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable complexity */\nimport { StorageManagerOptions, OktaAuthOptions, StorageUtil } from '../types';\nimport { warn } from '../util';\n\nimport { default as browserStorage } from '../browser/browserStorage';\n\nexport function getStorage(): StorageUtil {\n  const storageUtil = Object.assign({}, browserStorage, {\n    inMemoryStore: {} // create unique storage for this instance\n  });\n  return storageUtil;\n}\n\nexport const STORAGE_MANAGER_OPTIONS: StorageManagerOptions = {\n  token: {\n    storageTypes: [\n      'localStorage',\n      'sessionStorage',\n      'cookie'\n    ]\n  },\n  cache: {\n    storageTypes: [\n      'localStorage',\n      'sessionStorage',\n      'cookie'\n    ]\n  },\n  transaction: {\n    storageTypes: [\n      'sessionStorage',\n      'localStorage',\n      'cookie'\n    ]\n  },\n  'shared-transaction': {\n    storageTypes: [\n      'localStorage'\n    ]\n  },\n  'original-uri': {\n    storageTypes: [\n      'localStorage'\n    ]\n  }\n};\n\nexport const enableSharedStorage = true;\n\nexport function getCookieSettings(args: OktaAuthOptions = {}, isHTTPS: boolean) {\n  // Secure cookies will be automatically used on a HTTPS connection\n  // Non-secure cookies will be automatically used on a HTTP connection\n  // secure option can override the automatic behavior\n  var cookieSettings = args.cookies || {};\n  if (typeof cookieSettings.secure === 'undefined') {\n    cookieSettings.secure = isHTTPS;\n  }\n  if (typeof cookieSettings.sameSite === 'undefined') {\n    cookieSettings.sameSite = cookieSettings.secure ? 'none' : 'lax';\n  }\n\n  // If secure=true, but the connection is not HTTPS, set secure=false.\n  if (cookieSettings.secure && !isHTTPS) {\n    // eslint-disable-next-line no-console\n    warn(\n      'The current page is not being served with the HTTPS protocol.\\n' +\n      'For security reasons, we strongly recommend using HTTPS.\\n' +\n      'If you cannot use HTTPS, set \"cookies.secure\" option to false.'\n    );\n    cookieSettings.secure = false;\n  }\n\n  // Chrome >= 80 will block cookies with SameSite=None unless they are also Secure\n  // If sameSite=none, but the connection is not HTTPS, set sameSite=lax.\n  if (cookieSettings.sameSite === 'none' && !cookieSettings.secure) {\n    cookieSettings.sameSite = 'lax';\n  }\n\n  return cookieSettings;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { removeTrailingSlash, removeNils } from '../util';\nimport { assertValidConfig } from '../builderUtil';\nimport { OktaAuthOptions } from '../types';\n\nimport fetchRequest from '../fetch/fetchRequest';\nimport { getStorage, STORAGE_MANAGER_OPTIONS, enableSharedStorage, getCookieSettings } from './node';\nimport { isHTTPS } from '../features';\n\nexport function getDefaultOptions(): OktaAuthOptions {\n\n  \n  const options = {\n    devMode: false,\n    httpRequestClient: fetchRequest,\n    storageUtil: getStorage(),\n    storageManager: STORAGE_MANAGER_OPTIONS,\n    transactionManager: {\n      enableSharedStorage\n    }\n  };\n  return options;\n}\n\nfunction mergeOptions(options, args): OktaAuthOptions {\n  return Object.assign({}, options, removeNils(args), {\n    storageManager: Object.assign({}, options.storageManager, args.storageManager),\n    transactionManager: Object.assign({}, options.transactionManager, args.transactionManager),\n  });\n}\n\nexport function buildOptions(args: OktaAuthOptions = {}): OktaAuthOptions {\n  assertValidConfig(args);\n  args = mergeOptions(getDefaultOptions(), args);\n  return removeNils({\n    // OIDC configuration\n    issuer: removeTrailingSlash(args.issuer),\n    tokenUrl: removeTrailingSlash(args.tokenUrl),\n    authorizeUrl: removeTrailingSlash(args.authorizeUrl),\n    userinfoUrl: removeTrailingSlash(args.userinfoUrl),\n    revokeUrl: removeTrailingSlash(args.revokeUrl),\n    logoutUrl: removeTrailingSlash(args.logoutUrl),\n    clientId: args.clientId,\n    redirectUri: args.redirectUri,\n    state: args.state,\n    scopes: args.scopes,\n    postLogoutRedirectUri: args.postLogoutRedirectUri,\n    responseMode: args.responseMode,\n    responseType: args.responseType,\n    pkce: args.pkce === false ? false : true, // PKCE defaults to true\n    useInteractionCodeFlow: args.useInteractionCodeFlow,\n\n    // Internal options\n    httpRequestClient: args.httpRequestClient,\n    transformErrorXHR: args.transformErrorXHR,\n    transformAuthState: args.transformAuthState,\n    restoreOriginalUri: args.restoreOriginalUri,\n    storageUtil: args.storageUtil,\n    headers: args.headers,\n    devMode: !!args.devMode,\n    storageManager: args.storageManager,\n    transactionManager: args.transactionManager,\n    cookies: getCookieSettings(args, isHTTPS()),\n    flow: args.flow,\n    codeChallenge: args.codeChallenge,\n    codeChallengeMethod: args.codeChallengeMethod,\n    recoveryToken: args.recoveryToken,\n    activationToken: args.activationToken,\n    // BETA WARNING: configs in this section are subject to change without a breaking change notice\n    idx: {\n      useGenericRemediator: !!args.idx?.useGenericRemediator, // false by default\n      exchangeCodeForTokens: args.idx?.exchangeCodeForTokens !== false // true by default\n    },\n\n    // Give the developer the ability to disable token signature validation.\n    ignoreSignature: !!args.ignoreSignature,\n\n    // Server-side web applications\n    clientSecret: args.clientSecret\n  });\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthIdxInterface, IdxTransactionMeta, TransactionMetaOptions, PKCETransactionMeta } from '../types';\nimport { removeNils, warn } from '../util';\nimport { createOAuthMeta } from '../oidc';\n\n// Calculate new values\nexport async function createTransactionMeta(\n  authClient: OktaAuthIdxInterface,\n  options: TransactionMetaOptions = {}\n): Promise<IdxTransactionMeta> {\n  const tokenParams = await authClient.token.prepareTokenParams(options);\n  const pkceMeta = createOAuthMeta(authClient, tokenParams) as PKCETransactionMeta;\n  let {\n    flow = 'default',\n    withCredentials = true,\n    activationToken = undefined,\n    recoveryToken = undefined,\n    maxAge = undefined,\n  } = { ...authClient.options, ...options }; // local options override SDK options\n\n  const meta: IdxTransactionMeta = {\n    ...pkceMeta,\n    flow,\n    withCredentials,\n    activationToken,\n    recoveryToken,\n    maxAge\n  };\n  return meta;\n}\n\nexport function hasSavedInteractionHandle(authClient: OktaAuthIdxInterface, options?: TransactionMetaOptions): boolean {\n  const savedMeta = getSavedTransactionMeta(authClient, options);\n  if (savedMeta?.interactionHandle) {\n    return true;\n  }\n  return false;\n}\n\n// Returns the saved transaction meta, if it exists and is valid\nexport function getSavedTransactionMeta(\n  authClient: OktaAuthIdxInterface,\n  options?: TransactionMetaOptions\n): IdxTransactionMeta | undefined {\n  options = removeNils(options);\n  options = { ...authClient.options, ...options }; // local options override SDK options\n  let savedMeta;\n  try {\n    savedMeta = authClient.transactionManager.load(options) as IdxTransactionMeta;\n  } catch (e) {\n    // ignore errors here\n  }\n\n  if (!savedMeta) {\n    return;\n  }\n\n  if (isTransactionMetaValid(savedMeta, options)) {\n    return savedMeta;\n  }\n\n  // existing meta is not valid for this configuration\n  // this is common when changing configuration in local development environment\n  // in a production environment, this may indicate that two apps are sharing a storage key\n  warn('Saved transaction meta does not match the current configuration. ' + \n    'This may indicate that two apps are sharing a storage key.');\n\n}\n\nexport async function getTransactionMeta(\n  authClient: OktaAuthIdxInterface,\n  options?: TransactionMetaOptions\n): Promise<IdxTransactionMeta> {\n  options = removeNils(options);\n  options = { ...authClient.options, ...options }; // local options override SDK options\n  // Load existing transaction meta from storage\n  const validExistingMeta = getSavedTransactionMeta(authClient, options);\n  if (validExistingMeta) {\n    return validExistingMeta;\n  }\n  // No existing? Create new transaction meta.\n  return createTransactionMeta(authClient, options);\n}\n\nexport function saveTransactionMeta (authClient: OktaAuthIdxInterface, meta): void {\n  authClient.transactionManager.save(meta, { muteWarning: true });\n}\n\nexport function clearTransactionMeta (authClient: OktaAuthIdxInterface): void {\n  authClient.transactionManager.clear();\n}\n\nexport function isTransactionMetaValid (meta, options: TransactionMetaOptions  = {}): boolean {\n  // Validate against certain options. If these exist in options, they must match in meta\n  const keys = [\n    'issuer',\n    'clientId',\n    'redirectUri',\n    'state',\n    'codeChallenge',\n    'codeChallengeMethod',\n    'activationToken',\n    'recoveryToken'\n  ];\n  if (isTransactionMetaValidForOptions(meta, options, keys) === false) {\n    return false;\n  }\n\n  // Validate configured flow\n  const { flow } = options;\n  if (isTransactionMetaValidForFlow(meta, flow) === false) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isTransactionMetaValidForFlow(meta, flow) {\n  // Specific flows should not share transaction data\n  const shouldValidateFlow = flow && flow !== 'default' && flow !== 'proceed';\n  if (shouldValidateFlow) {\n    if (flow !== meta.flow) {\n      // The flow has changed; abandon the old transaction\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isTransactionMetaValidForOptions(meta, options, keys) {\n  // returns false if values in meta do not match options\n  // if the option does not have a value for a specific key, it is ignored\n  const mismatch = keys.some(key => {\n    const value = options[key];\n    if (value && value !== meta[key]) {\n      return true;\n    }\n  });\n  return !mismatch;\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* eslint complexity:[0,8] */\nimport { OktaAuthIdxInterface, IdxTransactionMeta, InteractOptions, InteractResponse } from '../types';\nimport { getSavedTransactionMeta, saveTransactionMeta, createTransactionMeta } from './transactionMeta';\nimport { getOAuthBaseUrl } from '../oidc';\nimport { removeNils } from '../util';\nimport { httpRequest } from '../http';\n\n\n/* eslint-disable camelcase */\nexport interface InteractParams {\n  client_id: string;\n  scope: string;\n  redirect_uri: string;\n  code_challenge: string;\n  code_challenge_method: string;\n  state: string;\n  activation_token?: string;\n  recovery_token?: string;\n  client_secret?: string;\n  max_age?: string | number;\n}\n/* eslint-enable camelcase */\n\nfunction getResponse(meta: IdxTransactionMeta): InteractResponse {\n  return {\n    meta,\n    interactionHandle: meta.interactionHandle!,\n    state: meta.state\n  };\n}\n\n// Begin or resume a transaction. Returns an interaction handle\nexport async function interact (\n  authClient: OktaAuthIdxInterface, \n  options: InteractOptions = {}\n): Promise<InteractResponse> {\n  options = removeNils(options);\n\n  let meta = getSavedTransactionMeta(authClient, options);\n  // If meta exists, it has been validated against all options\n\n  if (meta?.interactionHandle) {\n    return getResponse(meta); // Saved transaction, return meta\n  }\n\n  // Create new meta, respecting previous meta if it has been set and is not overridden\n  meta = await createTransactionMeta(authClient, { ...meta, ...options });\n  const baseUrl = getOAuthBaseUrl(authClient);\n  let {\n    clientId,\n    redirectUri,\n    state,\n    scopes,\n    withCredentials,\n    codeChallenge,\n    codeChallengeMethod,\n    activationToken,\n    recoveryToken,\n    maxAge\n  } = meta as IdxTransactionMeta;\n  const clientSecret = options.clientSecret || authClient.options.clientSecret;\n  withCredentials = withCredentials ?? true;\n\n  /* eslint-disable camelcase */\n  const url = `${baseUrl}/v1/interact`;\n  const params = {\n    client_id: clientId,\n    scope: scopes!.join(' '),\n    redirect_uri: redirectUri,\n    code_challenge: codeChallenge,\n    code_challenge_method: codeChallengeMethod,\n    state,\n    ...(activationToken && { activation_token: activationToken }),\n    ...(recoveryToken && { recovery_token: recoveryToken }),\n    // X-Device-Token header need to pair with `client_secret`\n    // eslint-disable-next-line max-len\n    // https://oktawiki.atlassian.net/wiki/spaces/eng/pages/2445902453/Support+Device+Binding+in+interact#Scenario-1%3A-Non-User-Agent-with-Confidential-Client-(top-priority)\n    ...(clientSecret && { client_secret: clientSecret }),\n    ...(maxAge && { max_age: maxAge })\n  } as InteractParams;\n  /* eslint-enable camelcase */\n\n  const headers = {\n    'Content-Type': 'application/x-www-form-urlencoded',\n  };\n\n  const resp = await httpRequest(authClient, {\n    method: 'POST',\n    url,\n    headers,\n    withCredentials,\n    args: params\n  });\n  const interactionHandle = resp.interaction_handle;\n\n  const newMeta = {\n    ...meta,\n    interactionHandle,\n    \n    // Options which can be passed into interact() should be saved in the meta\n    withCredentials,\n    state,\n    scopes,\n    recoveryToken,\n    activationToken\n  };\n  // Save transaction meta so it can be resumed\n  saveTransactionMeta(authClient, newMeta);\n\n  return getResponse(newMeta);\n}\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nconst isFieldMutable = function isFieldMutable(field) {\n  // mutable defaults to true, annoyingly\n  return ( field.mutable !== false );\n};\n\nconst divideSingleActionParamsByMutability = function divideSingleActionParamsByMutability( action ) {\n  const defaultParamsForAction = {}; // mutable and present\n  const neededParamsForAction = []; // mutable values\n  const immutableParamsForAction = {}; // immutable\n  // TODO: remove assumption that form names are unique, neededParams being an array is a temp fix\n  // not all actions have value (e.g. redirect)\n  // making sure they are not empty and instead hold the remediation object\n  if (!action.value) {\n    neededParamsForAction.push(action);\n    return { defaultParamsForAction, neededParamsForAction, immutableParamsForAction };\n  }\n\n  for ( let field of action.value ) {\n\n    if ( isFieldMutable( field ) ) {\n\n      neededParamsForAction.push(field);\n\n      if ( field.value ?? false ) {\n        defaultParamsForAction[field.name] = field.value;\n      }\n\n    } else {\n      immutableParamsForAction[field.name] = field.value ?? '';\n    }\n  }\n  return { defaultParamsForAction, neededParamsForAction, immutableParamsForAction };\n};\n\nexport const divideActionParamsByMutability = function divideActionParamsByMutability( actionList ) {\n  // TODO: when removing form name is unique assumption, this may all be redundant\n  actionList = Array.isArray(actionList) ? actionList : [ actionList ];\n  const neededParams = [];\n  const defaultParams = {};\n  const immutableParams = {};\n\n  for ( let action of actionList ) {\n    const { \n      defaultParamsForAction, \n      neededParamsForAction, \n      immutableParamsForAction \n    } = divideSingleActionParamsByMutability(action);\n    neededParams.push(neededParamsForAction);\n    defaultParams[action.name] = defaultParamsForAction;\n    immutableParams[action.name] = immutableParamsForAction;\n  }\n\n  return { defaultParams, neededParams, immutableParams };\n};\n\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable max-len, complexity */\nimport { httpRequest } from '../../../http';\nimport { OktaAuthIdxInterface } from '../../../types';    // auth-js/types\nimport { IdxActionFunction, IdxActionParams, IdxResponse, IdxToPersist } from '../../types/idx-js';\nimport { divideActionParamsByMutability } from './actionParser';\nimport AuthApiError from '../../../errors/AuthApiError';\n\nconst generateDirectFetch = function generateDirectFetch(authClient: OktaAuthIdxInterface, { \n  actionDefinition, \n  defaultParamsForAction = {}, \n  immutableParamsForAction = {}, \n  toPersist = {} as IdxToPersist\n}): IdxActionFunction {\n  const target = actionDefinition.href;\n  return async function(params: IdxActionParams = {}): Promise<IdxResponse> {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Accept': actionDefinition.accepts || 'application/ion+json',\n    };\n    const body = JSON.stringify({\n      ...defaultParamsForAction,\n      ...params,\n      ...immutableParamsForAction\n    });\n\n    try {\n      const response = await httpRequest(authClient, {\n        url: target,\n        method: actionDefinition.method,\n        headers,\n        args: body,\n        withCredentials: toPersist?.withCredentials ?? true\n      });\n\n      return authClient.idx.makeIdxResponse({ ...response }, toPersist, true);\n    }\n    catch (err) {\n      if (!(err instanceof AuthApiError) || !err?.xhr) {\n        throw err;\n      }\n\n      const response = err.xhr;\n      const payload = response.responseJSON || JSON.parse(response.responseText);\n      const wwwAuthHeader = response.headers['WWW-Authenticate'] || response.headers['www-authenticate'];\n\n      const idxResponse = authClient.idx.makeIdxResponse({ ...payload }, toPersist, false);\n      if (response.status === 401 && wwwAuthHeader === 'Oktadevicejwt realm=\"Okta Device\"') {\n        // Okta server responds 401 status code with WWW-Authenticate header and new remediation\n        // so that the iOS/MacOS credential SSO extension (Okta Verify) can intercept\n        // the response reaches here when Okta Verify is not installed\n        // set `stepUp` to true if flow should be continued without showing any errors\n        idxResponse.stepUp = true;\n      }\n\n      // Throw IDX response if request did not succeed. This behavior will be removed in version 7.0: OKTA-481844\n      throw idxResponse;\n    }\n  };\n};\n\n// TODO: Resolve in M2: Either build the final polling solution or remove this code\n// const generatePollingFetch = function generatePollingFetch( { actionDefinition, defaultParamsForAction = {}, immutableParamsForAction = {} } ) {\n//   // TODO: Discussions ongoing about when/how to terminate polling: OKTA-246581\n//   const target = actionDefinition.href;\n//   return async function(params) {\n//     return fetch(target, {\n//       method: actionDefinition.method,\n//       headers: {\n//         'content-type': actionDefinition.accepts,\n//       },\n//       body: JSON.stringify({ ...defaultParamsForAction, ...params, ...immutableParamsForAction })\n//     })\n//       .then( response => response.ok ? response.json() : response.json().then( err => Promise.reject(err)) )\n//       .then( idxResponse => makeIdxState(authClient, idxResponse) );\n//   };\n// };\n\nconst generateIdxAction = function generateIdxAction( authClient: OktaAuthIdxInterface, actionDefinition, toPersist ): IdxActionFunction {\n  // TODO: leaving this here to see where the polling is EXPECTED to drop into the code, but removing any accidental trigger of incomplete code\n  // const generator =  actionDefinition.refresh ? generatePollingFetch : generateDirectFetch;\n  const generator = generateDirectFetch;\n  const { defaultParams, neededParams, immutableParams } = divideActionParamsByMutability( actionDefinition );\n\n  const action = generator(authClient, {\n    actionDefinition,\n    defaultParamsForAction: defaultParams[actionDefinition.name],\n    immutableParamsForAction: immutableParams[actionDefinition.name],\n    toPersist\n  });\n  action.neededParams = neededParams;\n  return action;\n};\n\nexport default generateIdxAction;\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nimport { OktaAuthIdxInterface } from '../../../types';    // auth-js/types\nimport generateIdxAction from './generateIdxAction';\n\nexport const generateRemediationFunctions = function generateRemediationFunctions(\n  authClient: OktaAuthIdxInterface,\n  remediationValue,\n  toPersist = {}\n) {\n  return Object.fromEntries( remediationValue.map( remediation => {\n    return [\n      remediation.name,\n      generateIdxAction(authClient, remediation, toPersist),\n    ];\n  }) );\n};\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable max-len */\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nimport { OktaAuthIdxInterface } from '../../../types';    // auth-js/types\nimport { generateRemediationFunctions } from './remediationParser';\nimport generateIdxAction from './generateIdxAction';\nimport { JSONPath } from 'jsonpath-plus';\n\nconst SKIP_FIELDS = Object.fromEntries([\n  'remediation', // remediations are put into proceed/neededToProceed\n  'context', // the API response of 'context' isn't externally useful.  We ignore it and put all non-action (contextual) info into idxState.context\n].map( (field) => [ field, !!'skip this field' ] ));\n\nexport const parseNonRemediations = function parseNonRemediations( authClient: OktaAuthIdxInterface, idxResponse, toPersist = {} ) {\n  const actions = {};\n  const context = {};\n\n  Object.keys(idxResponse)\n    .filter( field => !SKIP_FIELDS[field])\n    .forEach( field => {\n      const fieldIsObject = typeof idxResponse[field] === 'object' && !!idxResponse[field];\n\n      if ( !fieldIsObject ) {\n        // simple fields are contextual info\n        context[field] = idxResponse[field];\n        return;\n      }\n\n      if ( idxResponse[field].rel ) {\n        // top level actions\n        actions[idxResponse[field].name] = generateIdxAction(authClient, idxResponse[field], toPersist);\n        return;\n      }\n\n      const { value: fieldValue, type, ...info} = idxResponse[field];\n      context[field] = { type, ...info}; // add the non-action parts as context\n\n      if ( type !== 'object' ) {\n        // only object values hold actions\n        context[field].value = fieldValue;\n        return;\n      }\n\n      // We are an object field containing an object value\n      context[field].value = {};\n      Object.entries(fieldValue)\n        .forEach( ([subField, value]) => {\n          if (value.rel) { // is [field].value[subField] an action?\n            // add any \"action\" value subfields to actions\n            actions[`${field}-${subField.name || subField}`] = generateIdxAction(authClient, value, toPersist);\n          } else {\n            // add non-action value subfields to context\n            context[field].value[subField] = value;\n          }\n        });\n    });\n\n  return { context, actions };\n};\n\nconst expandRelatesTo = (idxResponse, value) => {\n  Object.keys(value).forEach(k => {\n    if (k === 'relatesTo') {\n      const query = Array.isArray(value[k]) ? value[k][0] : value[k];\n      if (typeof query === 'string') {\n        // eslint-disable-next-line new-cap\n        const result = JSONPath({ path: query, json: idxResponse })[0];\n        if (result) {\n          value[k] = result;\n          return;\n        }\n      }\n    }\n    if (Array.isArray(value[k])) {\n      value[k].forEach(innerValue => expandRelatesTo(idxResponse, innerValue));\n    }\n  });\n};\n\nconst convertRemediationAction = (authClient: OktaAuthIdxInterface, remediation, toPersist) => {\n  // Only remediation that has `rel` field (indicator for form submission) can have http action\n  if (remediation.rel) {\n    const remediationActions = generateRemediationFunctions( authClient, [remediation], toPersist );\n    const actionFn = remediationActions[remediation.name];\n    return {\n      ...remediation,\n      action: actionFn,\n    };\n  }\n  \n  return remediation;\n};\n\nexport const parseIdxResponse = function parseIdxResponse( authClient: OktaAuthIdxInterface, idxResponse, toPersist = {} ): {\n  remediations: IdxRemediation[];\n  context: IdxContext;\n  actions: IdxActions;\n} {\n  const remediationData = idxResponse.remediation?.value || [];\n\n  remediationData.forEach(\n    remediation => expandRelatesTo(idxResponse, remediation)\n  );\n\n  const remediations = remediationData.map(remediation => convertRemediationAction( authClient, remediation, toPersist ));\n\n  const { context, actions } = parseNonRemediations( authClient, idxResponse, toPersist );\n\n  return {\n    remediations,\n    context,\n    actions,\n  };\n};\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { IdxResponse, IdxToPersist } from '../../types/idx-js';\nimport { OktaAuthIdxInterface, RawIdxResponse } from '../../../types';    // auth-js/types\nimport { parseIdxResponse } from './idxResponseParser';\n\nexport function makeIdxState( \n  authClient: OktaAuthIdxInterface,\n  idxResponse: RawIdxResponse,\n  toPersist: IdxToPersist,\n  requestDidSucceed: boolean\n): IdxResponse {\n  const rawIdxResponse =  idxResponse;\n  const { remediations, context, actions } = parseIdxResponse( authClient, idxResponse, toPersist );\n  const neededToProceed = [...remediations];\n\n  const proceed: IdxResponse['proceed'] = async function( remediationChoice, paramsFromUser = {} ) {\n    /*\n    remediationChoice is the name attribute on each form\n    name should remain unique for items inside the remediation that are considered forms(identify, select-factor)\n    name can be duplicate for items like redirect where its not considered a form(redirect)\n    when names are not unique its a redirect to a href, so widget wont POST to idx-js layer.\n    */\n    const remediationChoiceObject = remediations.find((remediation) => remediation.name === remediationChoice);\n    if ( !remediationChoiceObject ) {\n      return Promise.reject(`Unknown remediation choice: [${remediationChoice}]`);\n    }\n\n    const actionFn = remediationChoiceObject.action;\n    if (typeof actionFn !== 'function') {\n      return Promise.reject(`Current remediation cannot make form submit action: [${remediationChoice}]`);\n    }\n\n    return remediationChoiceObject.action(paramsFromUser);\n  };\n\n  const findCode = item => item.name === 'interaction_code';\n  const interactionCode = rawIdxResponse.successWithInteractionCode?.value?.find( findCode )?.value as string;\n\n  return {\n    proceed,\n    neededToProceed,\n    actions,\n    context,\n    rawIdxState: rawIdxResponse,\n    interactionCode,\n    toPersist,\n    requestDidSucceed,\n  };\n}\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nimport { makeIdxState } from './makeIdxState';\n\nexport default {\n  makeIdxState,\n};\n","import { OktaAuthIdxInterface } from '../../types';    // auth-js/types\nimport { IdxResponse, IdxToPersist, RawIdxResponse } from '../types/idx-js';      // idx/types\nimport { IDX_API_VERSION } from '../../constants';\nimport v1 from './v1/parsers';\n\n\nexport const parsersForVersion = function parsersForVersion( version ) {\n  switch (version) {\n    case '1.0.0':\n      return v1;\n    case undefined:\n    case null:\n      throw new Error('Api version is required');\n    default:\n      throw new Error(`Unknown api version: ${version}.  Use an exact semver version.`);\n  }\n};\n\nexport function validateVersionConfig(version) {\n  if ( !version ) {\n    throw new Error('version is required');\n  }\n\n  const cleanVersion = (version ?? '').replace(/[^0-9a-zA-Z._-]/, '');\n  if ( cleanVersion !== version || !version ) {\n    throw new Error('invalid version supplied - version is required and uses semver syntax');\n  }\n\n  parsersForVersion(version); // will throw for invalid version\n}\n\nexport function makeIdxState ( \n  authClient: OktaAuthIdxInterface,\n  rawIdxResponse: RawIdxResponse,\n  toPersist: IdxToPersist,\n  requestDidSucceed: boolean,\n): IdxResponse {\n  const version = rawIdxResponse?.version ?? IDX_API_VERSION;\n  validateVersionConfig(version);\n  \n  const { makeIdxState } = parsersForVersion(version);\n  return makeIdxState(authClient, rawIdxResponse, toPersist, requestDidSucceed);\n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { makeIdxState, validateVersionConfig } from './idxState';\nimport { IntrospectOptions, OktaAuthIdxInterface } from '../types';\nimport { IdxResponse, isRawIdxResponse } from './types/idx-js';\nimport { getOAuthDomain } from '../oidc';\nimport { IDX_API_VERSION } from '../constants';\nimport { httpRequest } from '../http';\nimport { isAuthApiError } from '../errors';\n\nexport async function introspect (\n  authClient: OktaAuthIdxInterface, \n  options: IntrospectOptions = {}\n): Promise<IdxResponse> {\n  let rawIdxResponse;\n  let requestDidSucceed;\n\n  // try load from storage first\n  const savedIdxResponse = authClient.transactionManager.loadIdxResponse(options);\n  if (savedIdxResponse) {\n    rawIdxResponse = savedIdxResponse.rawIdxResponse;\n    requestDidSucceed = savedIdxResponse.requestDidSucceed;\n  }\n\n  // call idx.introspect if no existing idx response available in storage\n  if (!rawIdxResponse) {\n    const version = options.version || IDX_API_VERSION;\n    const domain = getOAuthDomain(authClient);\n    const { interactionHandle, stateHandle } = options;\n    const withCredentials = options.withCredentials ?? true;\n    try {\n      requestDidSucceed = true;\n      validateVersionConfig(version);\n      const url = `${domain}/idp/idx/introspect`;\n      const body = stateHandle ? { stateToken: stateHandle } : { interactionHandle };\n      const headers = {\n        'Content-Type': `application/ion+json; okta-version=${version}`, // Server wants this version info\n        Accept: `application/ion+json; okta-version=${version}`,\n      };\n      rawIdxResponse = await httpRequest(authClient, {\n        method: 'POST',\n        url,\n        headers,\n        withCredentials,\n        args: body\n      });\n    } catch (err) {\n      if (isAuthApiError(err) && err.xhr && isRawIdxResponse(err.xhr.responseJSON)) {\n        rawIdxResponse = err.xhr.responseJSON;\n        requestDidSucceed = false;\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  const { withCredentials } = options;\n  return makeIdxState(authClient, rawIdxResponse, { withCredentials }, requestDidSucceed);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { IdxRemediation, IdxRemediationValue } from '../types/idx-js';\n\nexport function getAllValues(idxRemediation: IdxRemediation) {\n  return idxRemediation.value?.map(r => r.name);\n}\n\nexport function getRequiredValues(idxRemediation: IdxRemediation) {\n  return idxRemediation.value?.reduce((required, cur) => {\n    if (cur.required) {\n      required.push(cur.name as never);\n    }\n    return required;\n  }, []);\n}\n\nexport function titleCase(str: string) {\n  return str.charAt(0).toUpperCase() + str.substring(1);\n}\n\nexport function getAuthenticatorFromRemediation(\n  remediation: IdxRemediation\n): IdxRemediationValue {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return remediation.value!.find(({ name }) => name === 'authenticator') as IdxRemediationValue;\n}\n","import { Authenticator, isAuthenticator } from '../types';\n\nexport function formatAuthenticator(incoming: unknown): Authenticator {\n  let authenticator: Authenticator;\n  if  (isAuthenticator(incoming)) {\n    authenticator = incoming;\n  } else if (typeof incoming === 'string') {\n    authenticator = {\n      key: incoming\n    };\n  } else {\n    throw new Error('Invalid format for authenticator');\n  }\n  return authenticator;\n}\n\n// Returns true if the authenticators are equivalent\nexport function compareAuthenticators(auth1, auth2) {\n  if (!auth1 || !auth2) {\n    return false;\n  }\n  // by id\n  if (auth1.id && auth2.id) {\n    return (auth1.id === auth2.id);\n  }\n  // by key\n  if (auth1.key && auth2.key) {\n    return (auth1.key === auth2.key);\n  }\n  return false;\n}\n\n// Find matched authenticator in provided order\nexport function findMatchedOption(authenticators, options) {\n  let option;\n  for (let authenticator of authenticators) {\n    option = options\n      .find(({ relatesTo }) => relatesTo.key === authenticator.key);\n    if (option) {\n      break;\n    }\n  }\n  return option;\n}","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable complexity */\nimport { NextStep, IdxMessage, Authenticator, Input, RemediateOptions } from '../../types';\nimport { IdxAuthenticator, IdxRemediation, IdxContext } from '../../types/idx-js';\nimport { getAllValues, getRequiredValues, titleCase, getAuthenticatorFromRemediation } from '../util';\nimport { formatAuthenticator, compareAuthenticators } from '../../authenticator/util';\nimport { OktaAuthIdxInterface } from '../../../types';\n\n// A map from IDX data values (server spec) to RemediationValues (client spec)\nexport type IdxToRemediationValueMap = Record<string, string[]>;\n\nexport interface RemediationValues {\n  stateHandle?: string;\n  authenticators?: (Authenticator | string)[];\n  authenticator?: string | Authenticator;\n  authenticatorsData?: Authenticator[];\n  resend?: boolean;\n}\n\nexport interface RemediatorConstructor {\n  new<T extends RemediationValues>(\n    remediation: IdxRemediation, \n    values?: T, \n    options?: RemediateOptions\n  ): any;\n}\n\n// Base class - DO NOT expose static remediationName\nexport class Remediator<T extends RemediationValues = RemediationValues> {\n  static remediationName: string;\n\n  remediation: IdxRemediation;\n  values: T;\n  options: RemediateOptions;\n  map?: IdxToRemediationValueMap;\n\n  constructor(\n    remediation: IdxRemediation, \n    values: T = {} as T, \n    options: RemediateOptions = {}\n  ) {\n    // assign fields to the instance\n    this.values = { ...values };\n    this.options = { ...options };\n    this.formatAuthenticators();\n    this.remediation = remediation;\n  }\n\n  private formatAuthenticators() {\n    this.values.authenticators = (this.values.authenticators || []) as Authenticator[];\n\n    // ensure authenticators are in the correct format\n    this.values.authenticators = this.values.authenticators.map(authenticator => {\n      return formatAuthenticator(authenticator);\n    });\n\n    // add authenticator (if any) to \"authenticators\"\n    if (this.values.authenticator) {\n      const authenticator = formatAuthenticator(this.values.authenticator);\n      const hasAuthenticatorInList = this.values.authenticators.some(existing => {\n        return compareAuthenticators(authenticator, existing);\n      });\n      if (!hasAuthenticatorInList) {\n        this.values.authenticators.push(authenticator);\n      }\n    }\n\n    // save non-key meta to \"authenticatorsData\" field\n    // authenticators will be removed after selection to avoid select-authenticator loop\n    this.values.authenticatorsData = this.values.authenticators.reduce((acc, authenticator) => {\n      if (typeof authenticator === 'object' && Object.keys(authenticator).length > 1) {\n        // save authenticator meta into authenticator data\n        acc.push(authenticator);\n      }\n      return acc;\n    }, this.values.authenticatorsData || []);\n  }\n\n  getName(): string {\n    return this.remediation.name;\n  }\n\n  // Override this method to provide custom check\n  /* eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars */\n  canRemediate(): boolean {\n    const required = getRequiredValues(this.remediation);\n    const needed = required!.find((key) => !this.hasData(key));\n    if (needed) {\n      return false; // missing data for a required field\n    }\n    return true; // all required fields have available data\n  }\n\n  // returns an object for the entire remediation form, or just a part\n  getData(key?: string) {\n\n    if (!key) {\n      let allValues = getAllValues(this.remediation);\n      let res = allValues!.reduce((data, key) => {\n        data[key] = this.getData(key); // recursive\n        return data;\n      }, {});\n      return res;\n    }\n\n    // Map value by \"map${Property}\" function in each subClass\n    if (typeof this[`map${titleCase(key)}`] === 'function') {\n      const val = this[`map${titleCase(key)}`](\n        this.remediation.value!.find(({name}) => name === key)\n      );\n      if (val) {\n        return val;\n      }\n    }\n\n    // If a map is defined for this key, return the first aliased property that returns a truthy value\n    if (this.map && this.map[key]) {\n      const entry = this.map[key];\n      for (let i = 0; i < entry.length; i++) {\n        let val = this.values[entry[i]];\n        if (val) {\n          return val;\n        }\n      }\n    }\n\n    // fallback: return the value by key\n    return this.values[key];\n  }\n\n  hasData(\n    key: string // idx name\n  ): boolean \n  {\n    // no attempt to format, we want simple true/false\n    return !!this.getData(key);\n  }\n\n  getNextStep(_authClient: OktaAuthIdxInterface, _context?: IdxContext): NextStep {\n    const name = this.getName();\n    const inputs = this.getInputs();\n    const authenticator = this.getAuthenticator();\n    // TODO: remove type field in the next major version change\n    // https://oktainc.atlassian.net/browse/OKTA-431749\n    const type = authenticator?.type;\n    return { \n      name, \n      inputs, \n      ...(type && { type }),\n      ...(authenticator && { authenticator }),\n    };\n  }\n\n  // Get inputs for the next step\n  getInputs(): Input[] {\n    const inputs: Input[] = [];\n    const inputsFromRemediation = this.remediation.value || [];\n    inputsFromRemediation.forEach(inputFromRemediation => {\n      let input;\n      let { name, type, visible, messages } = inputFromRemediation;\n      if (visible === false) {\n        return; // Filter out invisible inputs, like stateHandle\n      }\n      if (typeof this[`getInput${titleCase(name)}`] === 'function') {\n        input = this[`getInput${titleCase(name)}`](inputFromRemediation);\n      } else if (type !== 'object') {\n        // handle general primitive types\n        let alias;\n        const aliases = (this.map ? this.map[name] : null) || [];\n        if (aliases.length === 1) {\n          alias = aliases[0];\n        } else {\n          // try find key from values\n          alias = aliases.find(name => Object.keys(this.values).includes(name));\n        }\n        if (alias) {\n          input = { ...inputFromRemediation, name: alias };\n        }\n      }\n      if (!input) {\n        input = inputFromRemediation;\n      }\n      if (Array.isArray(input)) {\n        input.forEach(i => inputs.push(i));\n      } else {\n        // guarantees field-level messages are passed back\n        if (messages) {\n          input.messages = messages;\n        }\n        inputs.push(input);\n      }\n    });\n    return inputs;\n  }\n\n  static getMessages(remediation: IdxRemediation): IdxMessage[] | undefined {\n    if (!remediation.value) {\n      return;\n    }\n    return remediation.value[0]?.form?.value.reduce((messages: IdxMessage[], field) => {\n      if (field.messages) {\n        messages = [...messages, ...field.messages.value];\n      }\n      return messages;\n    }, []);\n  }\n\n  // Prepare values for the next remediation\n  // In general, remove used values from inputs for the current remediation\n  // Override this method if special cases need be handled\n  getValuesAfterProceed(): T {\n    const inputsFromRemediation = this.remediation.value || []; // \"raw\" inputs from server response\n    const inputsFromRemediator = this.getInputs(); // \"aliased\" inputs from SDK remediator\n    const inputs = [\n      ...inputsFromRemediation,\n      ...inputsFromRemediator\n    ];\n    // scrub all values related to this remediation\n    for (const input of inputs) {\n      delete this.values[input.name];\n    }\n    return this.values;\n  }\n\n  protected getAuthenticator(): IdxAuthenticator | undefined {\n    // relatesTo value may be an authenticator or an authenticatorEnrollment\n    const relatesTo = this.remediation.relatesTo?.value;\n    if (!relatesTo) {\n      return;\n    }\n\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    if (!authenticatorFromRemediation) {\n      // Hopefully value is an authenticator\n      return relatesTo;\n    }\n\n    // If relatesTo is an authenticatorEnrollment, the id is actually the enrollmentId\n    // Let's get the correct authenticator id from the form value\n    const id = authenticatorFromRemediation.form!.value\n      .find(({ name }) => name === 'id')!.value as string;\n    const enrollmentId = authenticatorFromRemediation.form!.value\n      .find(({ name }) => name === 'enrollmentId')?.value as string;\n\n    return {\n      ...relatesTo,\n      id,\n      enrollmentId\n    };\n  }\n}\n","import { IdxAuthenticator, IdxRemediationValue } from '../types/idx-js';\n\n\nexport interface Credentials {\n  [key: string]: string | undefined;\n}\n\nexport abstract class Authenticator<Values> {\n  meta: IdxAuthenticator;\n\n  constructor(authenticator: IdxAuthenticator) {\n    this.meta = authenticator;\n  }\n\n  abstract canVerify(values: Values): boolean;\n\n  abstract mapCredentials(values: Values): Credentials | undefined;\n\n  abstract getInputs(idxRemediationValue: IdxRemediationValue): any; // TODO: add type\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface VerificationCodeValues {\n  verificationCode?: string;\n  otp?: string;\n  credentials?: Credentials;\n}\n\ninterface VerificationCodeCredentials extends Credentials {\n  passcode: string;\n}\n\n// general authenticator to handle \"verificationCode\" input\n// it can be used for \"email\", \"phone\", \"google authenticator\"\n// a new authenticator class should be created if special cases need to be handled\nexport class VerificationCodeAuthenticator extends Authenticator<VerificationCodeValues> {\n  canVerify(values: VerificationCodeValues) {\n    return !!(values.credentials ||values.verificationCode || values.otp);\n  }\n\n  mapCredentials(values): VerificationCodeCredentials | Credentials | undefined {\n    const { credentials, verificationCode, otp } = values;\n    if (!credentials && !verificationCode && !otp) {\n      return;\n    }\n    return credentials || { passcode: verificationCode || otp };\n  }\n\n  getInputs(idxRemediationValue) {\n    return {\n      ...idxRemediationValue.form?.value[0],\n      name: 'verificationCode',\n      type: 'string',\n      required: idxRemediationValue.required\n    };\n  }\n}\n","import { Credentials } from './Authenticator';\nimport { VerificationCodeAuthenticator } from './VerificationCodeAuthenticator';\n\ninterface TotpCredentials extends Credentials {\n  totp: string;\n}\n\nexport class OktaVerifyTotp extends VerificationCodeAuthenticator {\n  mapCredentials(values): TotpCredentials | undefined {\n    const { verificationCode } = values;\n    if (!verificationCode) {\n      return;\n    }\n    return { totp: verificationCode };\n  }\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface OktaPasswordInputValues {\n  password?: string;\n  credentials?: Credentials;\n}\n\nexport class OktaPassword extends Authenticator<OktaPasswordInputValues> {\n  canVerify(values: OktaPasswordInputValues) {\n    return !!(values.credentials || values.password);\n  }\n\n  mapCredentials(values: OktaPasswordInputValues): Credentials | undefined {\n    const { credentials, password } = values;\n    if (!credentials && !password) {\n      return;\n    }\n    return credentials || { passcode: password };\n  }\n\n  getInputs(idxRemediationValue) {\n    return {\n      ...idxRemediationValue.form?.value[0],\n      name: 'password',\n      type: 'string',\n      required: idxRemediationValue.required\n    };\n  }\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface SecurityQuestionEnrollValues {\n  questionKey?: string;\n  question?: string;\n  answer?: string;\n  credentials?: Credentials;\n}\n\nexport class SecurityQuestionEnrollment extends Authenticator<SecurityQuestionEnrollValues> {\n  canVerify(values: SecurityQuestionEnrollValues) {\n    const { credentials } = values;\n    if (credentials && credentials.questionKey && credentials.answer) {\n      return true;\n    }\n    const { questionKey, question, answer } = values;\n    return !!(questionKey && answer) || !!(question && answer);\n  }\n\n  mapCredentials(values: SecurityQuestionEnrollValues): Credentials | undefined {\n    const { questionKey, question, answer } = values;\n    if (!answer || (!questionKey && !question)) {\n      return;\n    }\n    return {\n      questionKey: question ? 'custom' : questionKey,\n      question,\n      answer\n    };\n  }\n\n  getInputs() {\n    return [\n      { name: 'questionKey', type: 'string', required: true },\n      { name: 'question', type: 'string', label: 'Create a security question' },\n      { name: 'answer', type: 'string', label: 'Answer', required: true },\n    ];\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { Authenticator, Credentials } from './Authenticator';\n\nexport interface SecurityQuestionVerificationValues {\n  answer?: string;\n  credentials?: Credentials;\n}\n\nexport class SecurityQuestionVerification extends Authenticator<SecurityQuestionVerificationValues> {\n  canVerify(values: SecurityQuestionVerificationValues) {\n    const { credentials } = values;\n    if (credentials && credentials.answer) {\n      return true;\n    }\n    const { answer } = values;\n    return !!answer;\n  }\n\n  mapCredentials(values: SecurityQuestionVerificationValues): Credentials | undefined {\n    const { answer } = values;\n    if (!answer) {\n      return;\n    }\n    return {\n      questionKey: this.meta.contextualData!.enrolledQuestion!.questionKey,\n      answer\n    };\n  }\n\n  getInputs() {\n    return [\n      { name: 'answer', type: 'string', label: 'Answer', required: true }\n    ];\n  }\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface WebauthnEnrollValues {\n  clientData?: string;\n  attestation?: string;\n  credentials?: Credentials;\n}\n\nexport class WebauthnEnrollment extends Authenticator<WebauthnEnrollValues> {\n  canVerify(values: WebauthnEnrollValues) {\n    const { credentials } = values;\n    const obj = credentials || values;\n    const { clientData, attestation } = obj;\n    return !!(clientData && attestation);\n  }\n\n  mapCredentials(values: WebauthnEnrollValues): Credentials | undefined {\n    const { credentials, clientData, attestation } = values;\n    if (!credentials && !clientData && !attestation) {\n      return;\n    }\n    return credentials || ({\n      clientData,\n      attestation\n    });\n  }\n\n  getInputs() {\n    return [\n      { name: 'clientData', type: 'string', required: true, visible: false, label: 'Client Data' },\n      { name: 'attestation', type: 'string', required: true, visible: false, label: 'Attestation' },\n    ];\n  }\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface WebauthnVerificationValues {\n  clientData?: string;\n  authenticatorData?: string;\n  signatureData?: string;\n  credentials?: Credentials;\n}\n\nexport class WebauthnVerification extends Authenticator<WebauthnVerificationValues> {\n  canVerify(values: WebauthnVerificationValues) {\n    const { credentials } = values;\n    const obj = credentials || values;\n    const { clientData, authenticatorData, signatureData } = obj;\n    return !!(clientData && authenticatorData && signatureData);\n  }\n\n  mapCredentials(values: WebauthnVerificationValues): Credentials | undefined {\n    const { credentials, authenticatorData, clientData, signatureData } = values;\n    if (!credentials && !authenticatorData && !clientData && !signatureData) {\n      return;\n    }\n    return credentials || ({\n      authenticatorData,\n      clientData,\n      signatureData\n    });\n  }\n\n  getInputs() {\n    return [\n      { name: 'authenticatorData', type: 'string', label: 'Authenticator Data', required: true, visible: false },\n      { name: 'clientData', type: 'string', label: 'Client Data', required: true, visible: false },\n      { name: 'signatureData', type: 'string', label: 'Signature Data', required: true, visible: false },\n    ];\n  }\n}\n","import { OktaVerifyTotp } from './OktaVerifyTotp';\nimport { Authenticator } from './Authenticator';\nimport { VerificationCodeAuthenticator } from './VerificationCodeAuthenticator';\nimport { OktaPassword } from './OktaPassword';\nimport { SecurityQuestionEnrollment } from './SecurityQuestionEnrollment';\nimport { SecurityQuestionVerification } from './SecurityQuestionVerification';\nimport { WebauthnEnrollment } from './WebauthnEnrollment';\nimport { WebauthnVerification } from './WebauthnVerification';\nimport { IdxAuthenticator, IdxRemediation } from '../types/idx-js';\nimport { AuthenticatorKey } from '../types';\n\n/* eslint complexity:[0,8] */\nexport function getAuthenticator(remediation: IdxRemediation): Authenticator<any> {\n  const relatesTo = remediation.relatesTo;\n  const value = relatesTo?.value || {} as IdxAuthenticator;\n  switch (value.key) {\n    case AuthenticatorKey.OKTA_PASSWORD:\n      return new OktaPassword(value);\n    case AuthenticatorKey.SECURITY_QUESTION:\n      if (value.contextualData?.enrolledQuestion) {\n        return new SecurityQuestionVerification(value);\n      } else {\n        return new SecurityQuestionEnrollment(value);\n      }\n    case AuthenticatorKey.OKTA_VERIFY:\n      return new OktaVerifyTotp(value);\n    case AuthenticatorKey.WEBAUTHN:\n      if (value.contextualData?.challengeData) {\n        return new WebauthnVerification(value);\n      } else {\n        return new WebauthnEnrollment(value);\n      }\n    default:\n      return new VerificationCodeAuthenticator(value);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { getAuthenticator, Authenticator, AuthenticatorValues } from '../../authenticator';\nimport { IdxRemediation, IdxContext } from '../../types/idx-js';\nimport { NextStep } from '../../types';\nimport { OktaAuthIdxInterface } from '../../../types';\n\nexport type VerifyAuthenticatorValues = AuthenticatorValues & RemediationValues;\n\n// Base class - DO NOT expose static remediationName\nexport class VerifyAuthenticator<T extends VerifyAuthenticatorValues = VerifyAuthenticatorValues>\n  extends Remediator<T> {\n\n  authenticator: Authenticator<VerifyAuthenticatorValues>;\n\n  constructor(remediation: IdxRemediation, values: T = {} as T) {\n    super(remediation, values);\n    this.authenticator = getAuthenticator(remediation);\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context?: IdxContext): NextStep {\n    const nextStep = super.getNextStep(authClient, context);\n    const authenticatorEnrollments = context?.authenticatorEnrollments?.value;\n\n    return {\n      ...nextStep,\n      authenticatorEnrollments\n    };\n  }\n\n  canRemediate() {\n    return this.authenticator.canVerify(this.values);\n  }\n\n  mapCredentials() {\n    return this.authenticator.mapCredentials(this.values);\n  }\n\n  getInputCredentials(input) {\n    return this.authenticator.getInputs(input);\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'credentials');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {} as T);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type EnrollAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class EnrollAuthenticator extends VerifyAuthenticator<EnrollAuthenticatorValues> {\n  static remediationName = 'enroll-authenticator';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { NextStep, OktaAuthIdxInterface } from '../../types';\nimport { IdxContext } from '../types/idx-js';\n\nexport interface EnrollPollValues extends RemediationValues {\n  startPolling?: boolean;\n}\n\nexport class EnrollPoll extends Remediator<EnrollPollValues> {\n  static remediationName = 'enroll-poll';\n\n  canRemediate() {\n    return !!this.values.startPolling || this.options.step === 'enroll-poll';\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context?: IdxContext): NextStep {\n    const common = super.getNextStep(authClient, context);\n    let authenticator = this.getAuthenticator();\n    if (!authenticator && context?.currentAuthenticator) {\n      authenticator = context.currentAuthenticator.value;\n    }\n    return {\n      ...common,\n      authenticator,\n      poll: {\n        required: true,\n        refresh: this.remediation.refresh\n      },\n    };\n  }\n\n  getValuesAfterProceed(): EnrollPollValues {\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'startPolling');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { IdxRemediationValueForm, IdxOption, IdxRemediationValue, IdxContext } from '../types/idx-js';\nimport { getAuthenticatorFromRemediation } from './util';\nimport { OktaAuthIdxInterface } from '../../types';\n\n\nexport type SelectEnrollmentChannelValues = RemediationValues & {\n  channel?: string;\n};\n\nexport class SelectEnrollmentChannel extends Remediator<SelectEnrollmentChannelValues> {\n  static remediationName = 'select-enrollment-channel';\n\n  canRemediate() {\n    return Boolean(this.values.channel);\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context: IdxContext) {\n    const common = super.getNextStep(authClient, context);\n    const options = this.getChannels();\n    const authenticator = context.currentAuthenticator.value;\n    return {\n      ...common,\n      // TODO: remove options field in the next major version - OKTA-491236\n      ...(options && { options }),\n      authenticator,\n    };\n  }\n\n  private getChannels(): IdxOption[] | undefined {\n    const authenticator: IdxRemediationValue = getAuthenticatorFromRemediation(this.remediation);\n    const remediationValue = authenticator.value as IdxRemediationValueForm;\n    return remediationValue.form.value.find(({ name }) => name === 'channel')?.options;\n  }\n\n  getData() {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const remediationValue = this.remediation!.value![0].value as IdxRemediationValueForm;\n    return {\n      authenticator: {\n        id: remediationValue.form.value[0].value,\n        channel: this.values.channel,\n      },\n      stateHandle: this.values.stateHandle,\n\n    };\n  }\n\n  getValuesAfterProceed(): SelectEnrollmentChannelValues {\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'channel');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { IdxContext } from '../types/idx-js';\nimport { OktaAuthIdxInterface } from '../../types';\n\n\nexport type EnrollmentChannelDataValues = RemediationValues & {\n  email?: string;\n  phoneNumber?: string;\n};\n\nexport class EnrollmentChannelData extends Remediator<EnrollmentChannelDataValues> {\n  static remediationName = 'enrollment-channel-data';\n\n  getInputEmail() {\n    return [\n      { name: 'email', type: 'string', required: true, label: 'Email' },\n    ];\n  }\n\n  getInputPhoneNumber() {\n    return [\n      { name: 'phoneNumber', type: 'string', required: true, label: 'Phone Number' },\n    ];\n  }\n\n  canRemediate() {\n    return Boolean(this.values.email || this.values.phoneNumber);\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context: IdxContext) {\n    const common = super.getNextStep(authClient, context);\n    const authenticator = context.currentAuthenticator.value;\n    return {\n      ...common,\n      authenticator,\n    };\n  }\n\n  getData() {\n    return {\n      stateHandle: this.values.stateHandle,\n      email: this.values.email,\n      phoneNumber: this.values.phoneNumber\n    };\n  }\n\n  getValuesAfterProceed(): EnrollmentChannelDataValues {\n    let trimmedValues = Object.keys(this.values).filter(valueKey => !['email', 'phoneNumber'].includes(valueKey));\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type ChallengeAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class ChallengeAuthenticator extends VerifyAuthenticator<ChallengeAuthenticatorValues> {\n  static remediationName = 'challenge-authenticator';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { EnrollPoll } from './EnrollPoll';\n\nexport class ChallengePoll extends EnrollPoll{\n  static remediationName = 'challenge-poll';\n\n  canRemediate() {\n    return !!this.values.startPolling || this.options.step === 'challenge-poll';\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type ResetAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class ResetAuthenticator extends VerifyAuthenticator<ResetAuthenticatorValues> {\n  static remediationName = 'reset-authenticator';\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { IdxRemediationValue } from '../types/idx-js';\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface EnrollProfileValues extends RemediationValues {\n  firstName?: string;\n  lastName?: string;\n  email?: string;\n}\n\nexport class EnrollProfile extends Remediator<EnrollProfileValues> {\n  static remediationName = 'enroll-profile';\n\n  canRemediate() {\n    const userProfileFromValues = this.getData().userProfile;\n    if (!userProfileFromValues) {\n      return false;\n    }\n    // eslint-disable-next-line max-len\n    const userProfileFromRemediation = this.remediation.value!.find(({ name }) => name === 'userProfile') as IdxRemediationValue;\n    return userProfileFromRemediation.form!.value.reduce((canRemediate, curr) => {\n      if (curr.required) {\n        canRemediate = canRemediate && !!userProfileFromValues[curr.name];\n      }\n      return canRemediate;\n    }, true);\n  }\n\n  mapUserProfile({form: { value: profileAttributes }}) {\n    const attributeNames = profileAttributes.map(({name}) => name);\n    const data = attributeNames.reduce((attributeValues, attributeName) => (\n      this.values[attributeName] ? {\n      ...attributeValues,\n      [attributeName]: this.values[attributeName]\n    } : attributeValues), {});\n    if (Object.keys(data).length === 0) {\n      return;\n    }\n    return data;\n  }\n\n  getInputUserProfile(input) {\n    return [...input.form.value];\n  }\n\n  getErrorMessages(errorRemediation) {\n    return errorRemediation.value[0].form.value.reduce((errors, field) => {\n      if (field.messages) {\n        errors.push(field.messages.value[0].message);\n      }\n      return errors;\n    }, []);\n  }\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Credentials } from '../authenticator';\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface IdentifyValues extends RemediationValues {\n  username?: string;\n  password?: string;\n  credentials?: Credentials;\n}\n\nexport class Identify extends Remediator<IdentifyValues> {\n  static remediationName = 'identify';\n\n  map = {\n    'identifier': ['username']\n  };\n\n  canRemediate(): boolean {\n    const { identifier } = this.getData();\n    return !!identifier;\n  }\n\n  mapCredentials() {\n    const { credentials, password } = this.values;\n    if (!credentials && !password) {\n      return;\n    }\n    return credentials || { passcode: password };\n  }\n\n  getInputCredentials(input) {\n    return {\n      ...input.form.value[0],\n      name: 'password',\n      required: input.required\n    };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface ReEnrollAuthenticatorValues extends RemediationValues {\n  newPassword?: string;\n}\n\nexport class ReEnrollAuthenticator extends Remediator<ReEnrollAuthenticatorValues> {\n  static remediationName = 'reenroll-authenticator';\n\n  mapCredentials() {\n    const { newPassword } = this.values;\n    if (!newPassword) {\n      return;\n    }\n    return { \n      passcode: newPassword,\n    };\n  }\n\n  getInputCredentials(input) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const challengeType = this.getAuthenticator()!.type;\n    const name = challengeType === 'password' ? 'newPassword' : 'verificationCode';\n    return {\n      ...input.form.value[0],\n      name\n    };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator } from './Base/Remediator';\n\nexport class RedirectIdp extends Remediator {\n  static remediationName = 'redirect-idp';\n\n  canRemediate() {\n    return false;\n  }\n\n  getNextStep() {\n    const { name, type, idp, href } = this.remediation;\n    return {\n      name,\n      type,\n      idp,\n      href\n    };\n  }\n\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { getAuthenticatorFromRemediation } from '../util';\nimport { IdxOption, IdxRemediationValue } from '../../types/idx-js';\nimport { Authenticator, isAuthenticator } from '../../types';\nimport { compareAuthenticators, findMatchedOption} from '../../authenticator/util';\nimport { OktaAuthIdxInterface } from '../../../types';\n\nexport type SelectAuthenticatorValues = RemediationValues & {\n  authenticator?: string | Authenticator;\n};\n\n// Base class - DO NOT expose static remediationName\nexport class SelectAuthenticator<T extends SelectAuthenticatorValues = SelectAuthenticatorValues>\n  extends Remediator<T> {\n  selectedAuthenticator?: Authenticator;\n  selectedOption?: any;\n\n  // Find matched authenticator in provided order\n  findMatchedOption(authenticators, options) {\n    let option;\n    for (let authenticator of authenticators) {\n      option = options\n        .find(({ relatesTo }) => relatesTo.key === authenticator.key);\n      if (option) {\n        break;\n      }\n    }\n    return option;\n  }\n\n  canRemediate() {\n    const { authenticators, authenticator } = this.values;\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    const { options } = authenticatorFromRemediation;\n    // Let users select authenticator if no input is provided\n    if (!authenticators || !authenticators.length) {\n      return false;\n    }\n\n    // Authenticator is explicitly specified by id\n    if (isAuthenticator(authenticator) && authenticator.id) {\n      return true;\n    }\n\n    // Proceed with provided authenticators\n    const matchedOption = this.findMatchedOption(authenticators, options);\n    if (matchedOption) {\n      return true;\n    }\n    \n    return false;\n  }\n\n  // TODO: remove this override method in the next major version - OKTA-491236\n  getNextStep(authClient: OktaAuthIdxInterface) {\n    const common = super.getNextStep(authClient);\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    const options = authenticatorFromRemediation.options!.map(option => {\n      const { \n        label, \n        relatesTo\n      } = option as IdxOption;\n      const key = relatesTo!.key!;\n      return { label, value: key };\n    });\n    return { ...common, options };\n  }\n\n  mapAuthenticator(remediationValue: IdxRemediationValue) {\n    const { authenticators, authenticator } = this.values;\n\n    // Authenticator is explicitly specified by id\n    if (isAuthenticator(authenticator) && authenticator.id) {\n      this.selectedAuthenticator = authenticator; // track the selected authenticator\n      return authenticator;\n    }\n\n    const { options } = remediationValue;\n    const selectedOption = findMatchedOption(authenticators, options);\n    this.selectedAuthenticator = selectedOption.relatesTo; // track the selected authenticator\n    this.selectedOption = selectedOption;\n    return {\n      id: selectedOption?.value.form.value.find(({ name }) => name === 'id').value\n    };\n  }\n\n  getInputAuthenticator(remediation) {\n    const options = remediation.options.map(({ label, relatesTo }) => {\n      return {\n        label,\n        value: relatesTo.key\n      };\n    });\n    return { name: 'authenticator', type: 'string', options };\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    // remove used authenticators\n    const authenticators = (this.values.authenticators as Authenticator[])\n      .filter(authenticator => {\n        return compareAuthenticators(authenticator, this.selectedAuthenticator) !== true;\n      });\n    return { ...this.values, authenticators };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\nimport { getAuthenticatorFromRemediation } from './util';\nimport { IdxRemediation } from '../types/idx-js';\nimport { AuthenticatorKey, Authenticator, RemediateOptions } from '../types';\n\nexport type SelectAuthenticatorAuthenticateValues = SelectAuthenticatorValues & {\n  password?: string;\n};\n\nexport class SelectAuthenticatorAuthenticate extends SelectAuthenticator<SelectAuthenticatorAuthenticateValues> {\n  static remediationName = 'select-authenticator-authenticate';\n\n  constructor(\n    remediation: IdxRemediation, \n    values: SelectAuthenticatorValues = {}, \n    options: RemediateOptions = {}\n  ) {\n    super(remediation, values, options);\n\n    // Preset password authenticator to trigger recover action\n    const isRecoveryFlow = this.options.flow === 'recoverPassword';\n    const hasPasswordInOptions = getAuthenticatorFromRemediation(remediation)\n      .options?.some(({ relatesTo }) => relatesTo?.key === AuthenticatorKey.OKTA_PASSWORD);\n    if (hasPasswordInOptions && (isRecoveryFlow || this.values.password)) {\n      this.values.authenticators = [\n        ...this.values.authenticators || [],\n        { key: AuthenticatorKey.OKTA_PASSWORD }\n      ] as Authenticator[];\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\n\nexport type SelectAuthenticatorEnrollValues = SelectAuthenticatorValues;\n\nexport class SelectAuthenticatorEnroll extends SelectAuthenticator<SelectAuthenticatorEnrollValues> {\n  static remediationName = 'select-authenticator-enroll';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\nimport { Authenticator } from '../../types';\nimport { IdxRemediationValue } from '../types/idx-js';\n\n\nexport type SelectAuthenticatorUnlockAccountValues = SelectAuthenticatorValues & {\n  identifier?: string;\n  methodType?: string;\n};\n\nexport class SelectAuthenticatorUnlockAccount extends SelectAuthenticator<SelectAuthenticatorUnlockAccountValues> {\n  static remediationName = 'select-authenticator-unlock-account';\n  authenticator?: Authenticator;\n\n  map = {\n    identifier: ['username']\n  };\n\n  canRemediate() {\n    const identifier = this.getData('identifier');\n    return !!identifier && super.canRemediate();\n  }\n\n  mapAuthenticator(remediationValue: IdxRemediationValue) {\n    const authenticatorMap = super.mapAuthenticator(remediationValue);\n    const methodTypeOption = this.selectedOption?.value.form.value.find(({ name }) => name === 'methodType');\n\n    // defaults to 'manually defined' value\n    // 2nd: option may have pre-defined value, like stateHandle\n    // 3rd: if only a single OV option is available, default to that option\n    const methodTypeValue = this.values.methodType ||\n      methodTypeOption?.value as string || methodTypeOption?.options?.[0]?.value as string;\n\n    if (methodTypeValue) {\n      return {\n        ...authenticatorMap,\n        methodType: methodTypeValue\n      };\n    }\n\n    return authenticatorMap;\n  }\n\n  getInputUsername () {\n    return { name: 'username', type: 'string' };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SelectEnrollProfileValues extends RemediationValues {}\n\nexport class SelectEnrollProfile extends Remediator<SelectEnrollProfileValues> {\n  static remediationName = 'select-enroll-profile';\n\n  canRemediate() {\n    return true;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { IdxRemediationValue, IdxOption, IdxRemediation, IdxAuthenticator } from '../../types/idx-js';\nimport { isAuthenticator } from '../../types';\nimport { compareAuthenticators } from '../../authenticator/util';\nimport { OktaAuthIdxInterface } from '../../../types';\n\nexport type AuthenticatorDataValues = RemediationValues & {\n  methodType?: string;\n};\n\n// Base class - DO NOT expose static remediationName\nexport class AuthenticatorData<T extends AuthenticatorDataValues = AuthenticatorDataValues> extends Remediator<T> {\n  authenticator: IdxAuthenticator;\n\n  constructor(remediation: IdxRemediation, values: T = {} as T) {\n    super(remediation, values);\n\n    // set before other data calculation\n    this.authenticator = this.getAuthenticator()!;\n\n    this.formatAuthenticatorData();\n  }\n\n  protected formatAuthenticatorData() {\n    const authenticatorData = this.getAuthenticatorData();\n    if (authenticatorData) {\n      this.values.authenticatorsData = this.values.authenticatorsData!.map(data => {\n        if (compareAuthenticators(this.authenticator, data)) {\n          return this.mapAuthenticatorDataFromValues(data);\n        }\n        return data;\n      });\n    } else {\n      const data = this.mapAuthenticatorDataFromValues();\n      if (data) {\n        this.values.authenticatorsData!.push(data);\n      }\n    }\n  }\n\n  protected getAuthenticatorData() {\n    return this.values.authenticatorsData!\n      .find((data) => compareAuthenticators(this.authenticator, data));\n  }\n\n  canRemediate() {\n    return this.values.authenticatorsData!\n      .some(data => compareAuthenticators(this.authenticator, data));\n  }\n\n  // TODO: remove this override method in the next major version - OKTA-491236\n  getNextStep(authClient: OktaAuthIdxInterface) {\n    const common = super.getNextStep(authClient);\n    const options = this.getMethodTypes();\n    return { \n      ...common, \n      ...(options && { options }) \n    };\n  }\n\n  protected mapAuthenticatorDataFromValues(authenticatorData?) {\n    // add methodType to authenticatorData if it exists in values\n    let { methodType, authenticator } = this.values;\n    if (!methodType && isAuthenticator(authenticator)) {\n     methodType = authenticator?.methodType;\n    }\n    \n    const { id, enrollmentId } = this.authenticator;\n    const data = { \n      id,\n      enrollmentId,\n      ...(authenticatorData && authenticatorData),\n      ...(methodType && { methodType }) \n    };\n\n    return data.methodType ? data : null;\n  }\n\n  protected getAuthenticatorFromRemediation(): IdxRemediationValue {\n    const authenticator = this.remediation.value!\n      .find(({ name }) => name === 'authenticator') as IdxRemediationValue;\n    return authenticator;\n  }\n\n  private getMethodTypes(): IdxOption[] {\n    const authenticator: IdxRemediationValue = this.getAuthenticatorFromRemediation();\n    return authenticator.form!.value.find(({ name }) => name === 'methodType')?.options as IdxOption[];\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    // remove used authenticatorData\n    const authenticatorsData = this.values.authenticatorsData!\n      .filter(data => compareAuthenticators(this.authenticator, data) !== true);\n    return { ...this.values, authenticatorsData };\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from '../../errors';\nimport { AuthenticatorData, AuthenticatorDataValues } from './Base/AuthenticatorData';\nimport { IdxRemediation, RemediateOptions } from '../types';\n\nexport type AuthenticatorVerificationDataValues = AuthenticatorDataValues;\n\nexport class AuthenticatorVerificationData extends AuthenticatorData<AuthenticatorVerificationDataValues> {\n  static remediationName = 'authenticator-verification-data';\n\n  shouldProceedWithEmailAuthenticator: boolean; // will be removed in next major version\n\n  constructor(\n    remediation: IdxRemediation, \n    values: AuthenticatorDataValues = {}, \n    options: RemediateOptions = {}\n  ) {\n    super(remediation, values);\n\n    // will be removed in next major version\n    this.shouldProceedWithEmailAuthenticator = options.shouldProceedWithEmailAuthenticator !== false\n      && this.authenticator.methods.length === 1 \n      && this.authenticator.methods[0].type === 'email';\n  }\n\n  canRemediate() {\n    // auto proceed if there is only one method (will be removed in next major version)\n    if (this.shouldProceedWithEmailAuthenticator !== false) {\n      return true;\n    }\n    return super.canRemediate();\n  }\n\n  mapAuthenticator() {\n    // auto proceed with the only methodType option\n    if (this.shouldProceedWithEmailAuthenticator !== false) {\n      const authenticatorFromRemediation = this.getAuthenticatorFromRemediation();\n      return authenticatorFromRemediation.form?.value.reduce((acc, curr) => {\n        if (curr.value) {\n          acc[curr.name] = curr.value;\n        } else if (curr.options) {\n          acc[curr.name] = curr.options![0].value;\n        } else {\n          throw new AuthSdkError(`Unsupported authenticator data type: ${curr}`);\n        }\n        return acc;\n      }, {});\n    }\n\n    return this.getAuthenticatorData();\n  }\n\n  getInputAuthenticator() {\n    const authenticator = this.getAuthenticatorFromRemediation();\n    const methodType = authenticator.form!.value.find(({ name }) => name === 'methodType');\n    // if has methodType in form, let user select the methodType\n    if (methodType && methodType.options) {\n      return { \n        name: 'methodType', \n        type: 'string', \n        required: true, \n        options: methodType.options \n      };\n    }\n    // no methodType, then return form values\n    const inputs = [...authenticator.form!.value];\n    return inputs;\n  }\n\n  getValuesAfterProceed(): AuthenticatorVerificationDataValues {\n    this.values = super.getValuesAfterProceed();\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'authenticator');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthenticatorData, AuthenticatorDataValues } from './Base/AuthenticatorData';\nimport { getAuthenticatorFromRemediation } from './util';\n\nexport type AuthenticatorEnrollmentDataValues =  AuthenticatorDataValues & {\n  phoneNumber?: string;\n  resend?: boolean; // resend is not a remediator value - revise when IdxResponse structure is updated\n}\nexport class AuthenticatorEnrollmentData extends AuthenticatorData<AuthenticatorEnrollmentDataValues> {\n  static remediationName = 'authenticator-enrollment-data';\n\n  mapAuthenticator() {\n    const authenticatorData = this.getAuthenticatorData();\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation)!;\n    return { \n      id: authenticatorFromRemediation.form!.value\n        .find(({ name }) => name === 'id')!.value,\n      methodType: authenticatorData!.methodType,\n      phoneNumber: authenticatorData!.phoneNumber,\n    };\n  }\n\n  getInputAuthenticator(remediation) {\n    return [\n      { name: 'methodType', type: 'string' }, \n      { name: 'phoneNumber', label: 'Phone Number', type: 'string' }\n    ].map(item => {\n      const value = remediation.form.value.find(val => val.name === item.name);\n      return { ...value, ...item };\n    });\n  }\n\n  protected mapAuthenticatorDataFromValues(data?) {\n    // get mapped authenticator from base class\n    data = super.mapAuthenticatorDataFromValues(data);\n    // add phoneNumber to authenticator if it exists in values\n    const { phoneNumber } = this.values;\n    if (!data && !phoneNumber) {\n      return;\n    }\n\n    return { \n      ...(data && data), \n      ...(phoneNumber && { phoneNumber }) \n    };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface SkipValues extends RemediationValues {\n  skip?: boolean;\n}\n\nexport class Skip extends Remediator<SkipValues> {\n  static remediationName = 'skip';\n\n  canRemediate() {\n    return !!this.values.skip || this.options.step === 'skip';\n  }\n\n}\n","/* eslint-disable complexity */\nimport { AuthSdkError } from '../../../errors';\nimport { Input } from '../../types';\n\nexport function unwrapFormValue(remediation): Input { \n  const res = {};\n  for (const [key, value] of Object.entries(remediation)) {\n    if (value === null || typeof value === 'undefined') {\n      continue;\n    }\n\n    if (Array.isArray(value)) {\n      res[key] = value.map(unwrapFormValue);\n    } else if (typeof value === 'object') {\n      const formKeys = Object.keys(value as object);\n      // detect patterns like:\n      // value -> form -> value | form -> value\n      if (['value', 'form'].includes(key) \n        && formKeys.length === 1 \n        && ['value', 'form'].includes(formKeys[0])\n      ) {\n        // unwrap nested form\n        const unwrappedForm = unwrapFormValue(value);\n        Object.entries(unwrappedForm).forEach(([key, value]) => {\n          res[key] = value;\n        });\n      } else {\n        // dfs\n        res[key] = unwrapFormValue(value);\n      }\n    } else {\n      // handle primitive value\n      res[key] = value;\n    }\n  }\n\n  return res as Input;\n}\n\n// only check if value is required for now\n// TODO: support SDK layer type based input validation\nexport function hasValidInputValue(input, values) {\n  const fn = (input, values, requiredTracker) => {\n    const { name, value, type, options, required } = input;\n    const isRequired = required || requiredTracker;\n\n    // handle nested value - all required fields should be avaiable in values \n    if (Array.isArray(value)) {\n      return value.reduce((acc, item) => {\n        return acc && fn(item, values[name], isRequired); // recursive call\n      }, true);\n    }\n\n    // handle options field\n    // 1. object type options - check if each object field is required and value can be found from the selectedOption\n    // 2. primitive options - required field is avaiable from top level\n    if (options) {\n      // object type options\n      if (type === 'object') {\n        const selectedOption = values[name];\n        if (!selectedOption?.id) {\n         return false;\n        }\n        const optionSchema = options.find((option) => {\n          const idSchema = option.value.find(({ name }) => name === 'id' );\n          return idSchema.value === selectedOption.id;\n        });\n        if (!optionSchema) {\n          return false;\n        }\n        return optionSchema.value\n          .filter(({ required }) => !!required)\n          .reduce((acc, { name }) => {\n            return acc && !!selectedOption[name];\n          }, true);\n      }\n\n      // primitive options, not required - always valid\n      if (required === false) {\n        return true;\n      }\n\n      // primitive options, required - check if value is available\n      if (required === true) {\n        return !!values[name];\n      }\n\n      // unknown options, throw\n      throw new AuthSdkError(`Unknown options type, ${JSON.stringify(input)}`);\n    }\n\n    // base case\n    if (!isRequired) {\n      return true;\n    }\n      \n    return !!(values && values[name]);\n  };\n\n  return fn(input, values, false);\n}\n","import { IdxContext, NextStep, Input } from '../../types';\nimport { Remediator } from '../Base/Remediator';\nimport { unwrapFormValue, hasValidInputValue } from './util';\nimport { OktaAuthIdxInterface } from '../../../types';\n\nexport class GenericRemediator extends Remediator {\n  canRemediate(): boolean {\n    // only handle remediations that are able to submit form (xhr)\n    if (typeof this.remediation.action !== 'function') {\n      return false;\n    }\n\n    const inputs = this.getInputs();\n    const res = inputs.reduce((acc, input) => {\n      return acc && hasValidInputValue(input, this.values);\n    }, true);\n    return res;\n  }\n\n  getData() {\n    const data = this.getInputs().reduce((acc, { name }) => {\n      acc[name] = this.values[name];\n      return acc;\n    }, {});\n    return data;\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, _context?: IdxContext): NextStep {\n    const name = this.getName();\n    const inputs = this.getInputs();\n    \n    /* eslint-disable no-unused-vars, @typescript-eslint/no-unused-vars */\n    // excludes transformed fields\n    const { \n      // http metas have been transformed to action\n      href, \n      method, \n      rel, \n      accepts, \n      produces, \n      // value has been transform to inputs\n      value,\n      // will be transformed to a function that resolves IdxTransaction\n      action,\n      ...rest \n    } = this.remediation;\n    /* eslint-enable no-unused-vars, @typescript-eslint/no-unused-vars */\n\n    // step to handle form submission\n    if (action) {\n      return { \n        ...rest,\n        ...(!!inputs.length && { inputs }),\n        action: async (params?) => {\n          return authClient.idx.proceed({\n            step: name,\n            ...params\n          });\n        }\n      };\n    }\n\n    // return whole remediation data for other steps, eg \"redirect-idp\"\n    return { ...this.remediation } as NextStep;\n    \n  }\n\n  getInputs(): Input[] {\n    return (this.remediation.value || [])\n      .filter(({ name }) => name !== 'stateHandle')\n      .map(unwrapFormValue)\n      .map(input => {\n        // use string as default input type\n        input.type = input.type || 'string';\n        return input;\n      });\n  }\n\n}\n","import { warn } from '../util';\nimport * as remediators from './remediators';\nimport { RemediationValues, Remediator, RemediatorConstructor } from './remediators';\nimport { GenericRemediator } from './remediators/GenericRemediator';\nimport { IdxFeature, NextStep, RemediateOptions, RemediationResponse } from './types';\nimport { IdxMessage, IdxRemediation, IdxRemediationValue, IdxResponse, isIdxResponse } from './types/idx-js';\nimport { OktaAuthIdxInterface } from '../types';\n\nexport function isTerminalResponse(idxResponse: IdxResponse) {\n  const { neededToProceed, interactionCode } = idxResponse;\n  return !neededToProceed.length && !interactionCode;\n}\n\nexport function canSkipFn(idxResponse: IdxResponse) {\n  return idxResponse.neededToProceed.some(({ name }) => name === 'skip');\n}\n\nexport function canResendFn(idxResponse: IdxResponse) {\n  return Object.keys(idxResponse.actions).some(actionName => actionName.includes('resend'));\n}\n\nexport function getMessagesFromIdxRemediationValue(\n  value?: IdxRemediationValue[]\n): IdxMessage[] | undefined {\n  if (!value || !Array.isArray(value)) {\n    return;\n  }\n  return value.reduce((messages, value) => {\n    if (value.messages) {\n      messages = [...messages, ...value.messages.value] as never;\n    }\n    if (value.form) {\n      const messagesFromForm = getMessagesFromIdxRemediationValue(value.form.value) || [];\n      messages = [...messages, ...messagesFromForm] as never;\n    } \n    if (value.options) {\n      let optionValues = [];\n      value.options.forEach(option => {\n        if (!option.value || typeof option.value === 'string') {\n          return;\n        }\n        optionValues = [...optionValues, option.value] as never;\n      });\n      const messagesFromOptions = getMessagesFromIdxRemediationValue(optionValues) || [];\n      messages = [...messages, ...messagesFromOptions] as never;\n    }\n    return messages;\n  }, []);\n}\n\nexport function getMessagesFromResponse(idxResponse: IdxResponse): IdxMessage[] {\n  let messages: IdxMessage[] = [];\n  const { rawIdxState, neededToProceed } = idxResponse;\n\n  // Handle global messages\n  const globalMessages = rawIdxState.messages?.value.map(message => message);\n  if (globalMessages) {\n    messages = [...messages, ...globalMessages] as never;\n  }\n\n  // Handle field messages for current flow\n  for (let remediation of neededToProceed) {\n    const fieldMessages = getMessagesFromIdxRemediationValue(remediation.value);\n    if (fieldMessages) {\n      messages = [...messages, ...fieldMessages] as never;\n    }\n  }\n\n  // API may return identical error on same field, filter by i18n key\n  const seen = {};\n  messages = messages.reduce((filtered, message) => {\n    const key = message.i18n?.key;\n    if (key && seen[key]) {\n      return filtered;\n    }\n    seen[key] = message;\n    filtered = [...filtered, message] as never;\n    return filtered;\n  }, []);\n  return messages;\n}\n\n\nexport function getEnabledFeatures(idxResponse: IdxResponse): IdxFeature[] {\n  const res = [];\n  const { actions, neededToProceed } = idxResponse;\n\n  if (actions['currentAuthenticator-recover']) {\n    res.push(IdxFeature.PASSWORD_RECOVERY as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'select-enroll-profile')) {\n    res.push(IdxFeature.REGISTRATION as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'redirect-idp')) {\n    res.push(IdxFeature.SOCIAL_IDP as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'unlock-account')) {\n    res.push(IdxFeature.ACCOUNT_UNLOCK as never);\n  }\n\n  return res;\n}\n\nexport function getAvailableSteps(\n  authClient: OktaAuthIdxInterface, \n  idxResponse: IdxResponse, \n  useGenericRemediator?: boolean\n): NextStep[] {\n  const res: NextStep[] = [];\n\n  const remediatorMap: Record<string, RemediatorConstructor> = Object.values(remediators)\n    .reduce((map, remediatorClass) => {\n      // Only add concrete subclasses to the map\n      if (remediatorClass.remediationName) {\n        map[remediatorClass.remediationName] = remediatorClass;\n      }\n      return map;\n    }, {});\n\n  for (let remediation of idxResponse.neededToProceed) {\n    const T = getRemediatorClass(remediation, { useGenericRemediator, remediators: remediatorMap });\n    if (T) {\n      const remediator: Remediator = new T(remediation);\n      res.push (remediator.getNextStep(authClient, idxResponse.context) as never);\n    }\n  }\n\n  for (const [name] of Object.entries((idxResponse.actions || {}))) {\n    res.push({ \n      name, \n      action: async (params?) => {\n        return authClient.idx.proceed({ \n          actions: [{ name, params }] \n        });\n      }\n    });\n  }\n\n  return res;\n}\n\nexport function filterValuesForRemediation(\n  idxResponse: IdxResponse,\n  remediationName: string,\n  values: RemediationValues\n): RemediationValues {\n  const remediations = idxResponse.neededToProceed || [];\n  const remediation = remediations.find(r => r.name === remediationName);\n  if (!remediation) {\n    // step was specified, but remediation was not found. This is unexpected!\n    warn(`filterValuesForRemediation: \"${remediationName}\" did not match any remediations`);\n    return values;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const valuesForRemediation = remediation.value!.reduce((res, entry) => {\n    const { name, value } = entry;\n    if (name === 'stateHandle') {\n      res[name] = value; // use the stateHandle value in the remediation\n    } else {\n      res[name] = values[name]; // use the value provided by the caller\n    }\n    return res;\n  }, {});\n  return valuesForRemediation;\n}\n\nfunction getRemediatorClass(remediation: IdxRemediation, options: RemediateOptions) {\n  const { useGenericRemediator, remediators } = options;\n  \n  if (!remediation) {\n    return undefined;\n  }\n\n  if (useGenericRemediator) {\n    return GenericRemediator;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return remediators![remediation.name];\n}\n\n// Return first match idxRemediation in allowed remediators\n// eslint-disable-next-line complexity\nexport function getRemediator(\n  idxRemediations: IdxRemediation[],\n  values: RemediationValues,\n  options: RemediateOptions,\n): Remediator | undefined {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const remediators = options.remediators!;\n  const useGenericRemediator = options.useGenericRemediator;\n\n  let remediator: Remediator;\n  // remediation name specified by caller - fast-track remediator lookup \n  if (options.step) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const remediation = idxRemediations.find(({ name }) => name === options.step)!;\n    if (remediation) {\n      const T = getRemediatorClass(remediation, options);\n      return T ? new T(remediation, values, options) : undefined;\n    } else {\n      // step was specified, but remediation was not found. This is unexpected!\n      warn(`step \"${options.step}\" did not match any remediations`);\n      return;\n    }\n  }\n\n  const remediatorCandidates: Remediator[] = [];\n  if (useGenericRemediator) {\n    // always pick the first remediation for when use GenericRemediator\n    remediatorCandidates.push(new GenericRemediator(idxRemediations[0], values, options));\n  } else {\n    for (let remediation of idxRemediations) {\n      const isRemeditionInFlow = Object.keys(remediators as object).includes(remediation.name);\n      if (!isRemeditionInFlow) {\n        continue;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const T = getRemediatorClass(remediation, options)!;\n      remediator = new T(remediation, values, options);\n      if (remediator.canRemediate()) {\n        // found the remediator\n        return remediator;\n      }\n      // remediator cannot handle the current values\n      // maybe return for next step\n      remediatorCandidates.push(remediator);  \n    }\n  }\n  \n  return remediatorCandidates[0];\n}\n\n\nexport function getNextStep(\n  authClient: OktaAuthIdxInterface, remediator: Remediator, idxResponse: IdxResponse\n): NextStep {\n  const nextStep = remediator.getNextStep(authClient, idxResponse.context);\n  const canSkip = canSkipFn(idxResponse);\n  const canResend = canResendFn(idxResponse);\n  return {\n    ...nextStep,\n    ...(canSkip && {canSkip}),\n    ...(canResend && {canResend}),\n  };\n}\n\nexport function handleIdxError(authClient: OktaAuthIdxInterface, e, remediator?): RemediationResponse {\n  // Handle idx messages\n  let idxResponse = isIdxResponse(e) ? e : null;\n  if (!idxResponse) {\n    // Thrown error terminates the interaction with idx\n    throw e;\n  }\n  idxResponse = {\n    ...idxResponse,\n    requestDidSucceed: false\n  };\n  const terminal = isTerminalResponse(idxResponse);\n  const messages = getMessagesFromResponse(idxResponse);\n  if (terminal) {\n    return { idxResponse, terminal, messages };\n  } else {\n    const nextStep = remediator && getNextStep(authClient, remediator, idxResponse);\n    return { \n      idxResponse,\n      messages, \n      ...(nextStep && { nextStep }) \n    };\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable max-statements, max-depth, complexity */\nimport { OktaAuthIdxInterface } from '../types';\nimport { AuthSdkError } from '../errors';\nimport { RemediationValues } from './remediators';\nimport { RemediateOptions, RemediationResponse } from './types';\nimport { \n  IdxResponse,\n  IdxActionParams, \n} from './types/idx-js';\nimport {\n  getMessagesFromResponse,\n  isTerminalResponse,\n  filterValuesForRemediation,\n  getRemediator,\n  getNextStep,\n  handleIdxError\n} from './util';\n\nexport interface RemediateActionWithOptionalParams {\n  name: string;\n  params?: IdxActionParams;\n}\n\nexport type RemediateAction = string | RemediateActionWithOptionalParams;\n\n\nfunction getActionFromValues(values: RemediationValues, idxResponse: IdxResponse): string | undefined {\n  // Currently support resend actions only\n  return Object.keys(idxResponse.actions).find(action => !!values.resend && action.includes('-resend'));\n}\n\nfunction removeActionFromValues(values: RemediationValues): RemediationValues {\n  // Currently support resend actions only\n  return {\n    ...values,\n    resend: undefined\n  };\n}\n\nfunction removeActionFromOptions(options: RemediateOptions, actionName: string): RemediateOptions {\n  let actions = options.actions || [];\n  actions = actions.filter(entry => {\n    if (typeof entry === 'string') {\n      return entry !== actionName;\n    }\n    return entry.name !== actionName;\n  });\n\n  return { ...options, actions };\n}\n\n// This function is called recursively until it reaches success or cannot be remediated\nexport async function remediate(\n  authClient: OktaAuthIdxInterface,\n  idxResponse: IdxResponse,\n  values: RemediationValues,\n  options: RemediateOptions\n): Promise<RemediationResponse> {\n  let { neededToProceed, interactionCode } = idxResponse;\n  const { flow } = options;\n\n  // If the response contains an interaction code, there is no need to remediate\n  if (interactionCode) {\n    return { idxResponse };\n  }\n\n  const remediator = getRemediator(neededToProceed, values, options);\n\n  // Try actions in idxResponse first\n  const actionFromValues = getActionFromValues(values, idxResponse);\n  const actionFromOptions = options.actions || [];\n  const actions = [\n    ...actionFromOptions,\n    ...(actionFromValues && [actionFromValues] || []),\n  ];\n  if (actions) {\n    for (let action of actions) {\n      // Action can either be specified as a string, or as an object with name and optional params\n      let params: IdxActionParams = {};\n      if (typeof action !== 'string') {\n        params = action.params || {};\n        action = action.name;\n      }\n      let valuesWithoutExecutedAction = removeActionFromValues(values);\n      let optionsWithoutExecutedAction = removeActionFromOptions(options, action);\n\n      if (typeof idxResponse.actions[action] === 'function') {\n        try {\n          idxResponse = await idxResponse.actions[action](params);\n          idxResponse = { ...idxResponse, requestDidSucceed: true };\n        } catch (e) {\n          return handleIdxError(authClient, e, remediator);\n        }\n        if (action === 'cancel') {\n          return { idxResponse, canceled: true };\n        }\n        return remediate(\n          authClient, \n          idxResponse, \n          valuesWithoutExecutedAction, \n          optionsWithoutExecutedAction\n        ); // recursive call\n      }\n\n      // search for action in remediation list\n      const remediationAction = neededToProceed.find(({ name }) => name === action);\n      if (remediationAction) {\n        try {\n          idxResponse = await idxResponse.proceed(action, params);\n          idxResponse = { ...idxResponse, requestDidSucceed: true };\n        }\n        catch (e) {\n          return handleIdxError(authClient, e, remediator);\n        }\n\n        return remediate(authClient, idxResponse, values, optionsWithoutExecutedAction); // recursive call\n      }\n    }\n  }\n\n  // Do not attempt to remediate if response is in terminal state\n  const terminal = isTerminalResponse(idxResponse);\n  const messages = getMessagesFromResponse(idxResponse);\n  if (terminal) {\n    return { idxResponse, terminal, messages };\n  }\n\n  if (!remediator) {\n    if (options.step) {\n      values = filterValuesForRemediation(idxResponse, options.step, values); // include only requested values\n      try {\n        idxResponse = await idxResponse.proceed(options.step, values);\n        idxResponse = { ...idxResponse, requestDidSucceed: true };\n        return { idxResponse };\n      } catch(e) {\n        return handleIdxError(authClient, e);\n      }\n    }\n    if (flow === 'default') {\n      return { idxResponse };\n    }\n    throw new AuthSdkError(`\n      No remediation can match current flow, check policy settings in your org.\n      Remediations: [${neededToProceed.reduce((acc, curr) => acc ? acc + ' ,' + curr.name : curr.name, '')}]\n    `);\n  }\n\n  // Return next step to the caller\n  if (!remediator.canRemediate()) {\n    const nextStep = getNextStep(authClient, remediator, idxResponse);\n    return {\n      idxResponse,\n      nextStep,\n      messages: messages.length ? messages: undefined\n    };\n  }\n\n  const name = remediator.getName();\n  const data = remediator.getData();\n  try {\n    idxResponse = await idxResponse.proceed(name, data);\n    idxResponse = { ...idxResponse, requestDidSucceed: true };\n    // We may want to trim the values bag for the next remediation\n    // Let the remediator decide what the values should be (default to current values)\n    values = remediator.getValuesAfterProceed();\n    options = { ...options, step: undefined }; // do not re-use the step\n\n    // generic remediator should not auto proceed in pending status\n    // return nextStep directly\n    if (options.useGenericRemediator && !idxResponse.interactionCode && !isTerminalResponse(idxResponse)) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const gr = getRemediator(idxResponse.neededToProceed, values, options)!;\n      const nextStep = getNextStep(authClient, gr, idxResponse);\n      return {\n        idxResponse,\n        nextStep,\n        messages: messages.length ? messages: undefined\n      };\n    }\n    \n    return remediate(authClient, idxResponse, values, options); // recursive call\n  } catch (e) {\n    return handleIdxError(authClient, e, remediator);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport { \n  Identify,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  ReEnrollAuthenticator,\n  RedirectIdp,\n  AuthenticatorEnrollmentData,\n  SelectAuthenticatorEnroll,\n  EnrollAuthenticator,\n  AuthenticatorVerificationData,\n  EnrollPoll,\n  ChallengePoll, \n  Skip\n} from '../remediators';\n\nexport const AuthenticationFlow: RemediationFlow = {\n  'identify': Identify,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'enroll-authenticator': EnrollAuthenticator,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'challenge-poll': ChallengePoll,\n  'reenroll-authenticator': ReEnrollAuthenticator,\n  'enroll-poll': EnrollPoll,\n  'redirect-idp': RedirectIdp,\n  'skip': Skip,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport {\n  Identify,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  AuthenticatorVerificationData,\n  ResetAuthenticator,\n  ReEnrollAuthenticator,\n  SelectAuthenticatorEnroll,\n  AuthenticatorEnrollmentData,\n  EnrollPoll\n} from '../remediators';\n\nexport const PasswordRecoveryFlow: RemediationFlow = {\n  'identify': Identify,\n  'identify-recovery': Identify,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'reset-authenticator': ResetAuthenticator,\n  'reenroll-authenticator': ReEnrollAuthenticator,\n  'enroll-poll': EnrollPoll,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport { \n  SelectEnrollProfile,\n  EnrollPoll,\n  SelectEnrollmentChannel,\n  EnrollmentChannelData,\n  EnrollProfile,\n  SelectAuthenticatorEnroll,\n  EnrollAuthenticator,\n  AuthenticatorEnrollmentData,\n  Skip,\n} from '../remediators';\n\nexport const RegistrationFlow: RemediationFlow = {\n  'select-enroll-profile': SelectEnrollProfile,\n  'enroll-profile': EnrollProfile,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'enroll-poll': EnrollPoll,\n  'select-enrollment-channel': SelectEnrollmentChannel,\n  'enrollment-channel-data': EnrollmentChannelData,\n  'enroll-authenticator': EnrollAuthenticator,\n  'skip': Skip,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport {\n  Identify,\n  SelectAuthenticatorUnlockAccount,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  ChallengePoll,\n  AuthenticatorVerificationData\n} from '../remediators';\n\nexport const AccountUnlockFlow: RemediationFlow = {\n  'identify': Identify,\n  // NOTE: unlock-account is purposely not included. Handled as action\n  // because it's a rememdiation which requires no input\n  // 'unlock-account': UnlockAccount,\n  'select-authenticator-unlock-account': SelectAuthenticatorUnlockAccount,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'challenge-poll': ChallengePoll,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n};\n","import { OktaAuthIdxInterface, FlowIdentifier } from '../../types';\nimport { AuthenticationFlow } from './AuthenticationFlow';\nimport { PasswordRecoveryFlow } from './PasswordRecoveryFlow';\nimport { RegistrationFlow } from './RegistrationFlow';\nimport { AccountUnlockFlow } from './AccountUnlockFlow';\nimport { RemediationFlow } from './RemediationFlow';\n\nexport interface FlowSpecification {\n  flow: FlowIdentifier;\n  remediators: RemediationFlow;\n  actions?: string[];\n  withCredentials?: boolean;\n}\n\n// eslint-disable-next-line complexity\nexport function getFlowSpecification(\n  oktaAuth: OktaAuthIdxInterface,\n  flow: FlowIdentifier = 'default'\n): FlowSpecification {\n  let remediators, actions, withCredentials = true;\n  switch (flow) {\n    case 'register':\n    case 'signup':\n    case 'enrollProfile':\n      remediators = RegistrationFlow;\n      withCredentials = false;\n      break;\n    case 'recoverPassword':\n    case 'resetPassword':\n      remediators = PasswordRecoveryFlow;\n      actions = [\n        'currentAuthenticator-recover', \n        'currentAuthenticatorEnrollment-recover'\n      ];\n      withCredentials = false;\n      break;\n    case 'unlockAccount':\n      remediators = AccountUnlockFlow;\n      withCredentials = false;\n      actions = [\n        'unlock-account'\n      ];\n      break;\n    case 'authenticate':\n    case 'login':\n    case 'signin':\n      remediators = AuthenticationFlow;\n      break;\n    default:\n      // default case has no flow monitor\n      remediators = AuthenticationFlow;\n      break;\n  }\n  return { flow, remediators, actions, withCredentials };\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable max-statements, complexity, max-depth */\nimport { interact } from './interact';\nimport { introspect } from './introspect';\nimport { remediate } from './remediate';\nimport { getFlowSpecification } from './flow';\nimport * as remediators from './remediators';\nimport { \n  OktaAuthIdxInterface,\n  IdxStatus,\n  IdxTransaction,\n  IdxFeature,\n  NextStep,\n  RunOptions,\n  IdxTransactionMeta,\n  Tokens,\n  APIError,\n} from '../types';\nimport { IdxMessage, IdxResponse, isIdxResponse } from './types/idx-js';\nimport { getSavedTransactionMeta, saveTransactionMeta } from './transactionMeta';\nimport { getAvailableSteps, getEnabledFeatures, getMessagesFromResponse, isTerminalResponse } from './util';\ndeclare interface RunData {\n  options: RunOptions;\n  values: remediators.RemediationValues;\n  status?: IdxStatus;\n  tokens?: Tokens;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  error?: APIError | IdxResponse;\n  meta?: IdxTransactionMeta;\n  enabledFeatures?: IdxFeature[];\n  availableSteps?: NextStep[];\n  idxResponse?: IdxResponse;\n  canceled?: boolean;\n  interactionCode?: string;\n  shouldSaveResponse?: boolean;\n  shouldClearTransaction?: boolean;\n  clearSharedStorage?: boolean;\n  terminal?: boolean;\n}\n\nfunction initializeValues(options: RunOptions) {\n  // remove known options, everything else is assumed to be a value\n  const knownOptions = [\n    'flow', \n    'remediators', \n    'actions', \n    'withCredentials', \n    'step',\n    'useGenericRemediator',\n    'exchangeCodeForTokens',\n    'shouldProceedWithEmailAuthenticator'\n  ];\n  const values = { ...options };\n  knownOptions.forEach(option => {\n    delete values[option];\n  });\n  return values;\n}\n\nfunction initializeData(authClient, data: RunData): RunData {\n  let { options } = data;\n  options = {\n    ...authClient.options.idx,\n    ...options\n  };\n  let {\n    flow,\n    withCredentials,\n    remediators,\n    actions,\n  } = options;\n\n  const status = IdxStatus.PENDING;\n\n  // certain options can be set by the flow specification\n  flow = flow || authClient.idx.getFlow() || 'default';\n  if (flow) {\n    authClient.idx.setFlow(flow);\n    const flowSpec = getFlowSpecification(authClient, flow);\n    // Favor option values over flow spec\n    withCredentials = (typeof withCredentials !== 'undefined') ? withCredentials : flowSpec.withCredentials;\n    remediators = remediators || flowSpec.remediators;\n    actions = actions || flowSpec.actions;\n  }\n\n  return { \n    ...data,\n    options: { \n      ...options, \n      flow, \n      withCredentials, \n      remediators, \n      actions,\n    },\n    status\n  };\n}\n\nasync function getDataFromIntrospect(authClient, data: RunData): Promise<RunData> {\n  const { options } = data;\n  const {\n    stateHandle,\n    withCredentials,\n    version,\n    state,\n    scopes,\n    recoveryToken,\n    activationToken,\n    maxAge,\n  } = options;\n\n  let idxResponse;\n  let meta = getSavedTransactionMeta(authClient, { state, recoveryToken, activationToken }); // may be undefined\n\n  if (stateHandle) {\n    idxResponse = await introspect(authClient, { withCredentials, version, stateHandle });\n  } else {\n    let interactionHandle = meta?.interactionHandle; // may be undefined\n    if (!interactionHandle) {\n      // start a new transaction\n      authClient.transactionManager.clear();\n      const interactResponse = await interact(authClient, {\n        withCredentials,\n        state,\n        scopes,\n        activationToken,\n        recoveryToken,\n        maxAge,\n      }); \n      interactionHandle = interactResponse.interactionHandle;\n      meta = interactResponse.meta;\n    }\n  \n    // Introspect to get idx response\n    idxResponse = await introspect(authClient, { withCredentials, version, interactionHandle });\n  }\n  return { ...data, idxResponse, meta };\n}\n\nasync function getDataFromRemediate(authClient, data: RunData): Promise<RunData> {\n  let {\n    idxResponse,\n    options,\n    values\n  } = data;\n\n  const {\n    autoRemediate,\n    remediators,\n    actions,\n    flow,\n    step,\n    shouldProceedWithEmailAuthenticator, // will be removed in next major version\n    useGenericRemediator,\n  } = options;\n  \n  const shouldRemediate = (autoRemediate !== false && (remediators || actions || step));\n  if (!shouldRemediate) {\n    return data;\n  }\n\n  values = { \n    ...values, \n    stateHandle: idxResponse!.rawIdxState.stateHandle \n  };\n\n  // Can we handle the remediations?\n  const { \n    idxResponse: idxResponseFromRemediation, \n    nextStep,\n    canceled,\n  } = await remediate(\n    authClient,\n    idxResponse!, \n    values, \n    {\n      remediators,\n      actions,\n      flow,\n      step,\n      shouldProceedWithEmailAuthenticator, // will be removed in next major version\n      useGenericRemediator,\n    }\n  );\n  idxResponse = idxResponseFromRemediation;\n\n  return { ...data, idxResponse, nextStep, canceled };\n}\n\nasync function getTokens(authClient, data: RunData): Promise<Tokens> {\n  let { meta, idxResponse } = data;\n  const { interactionCode } = idxResponse as IdxResponse;\n  const {\n    clientId,\n    codeVerifier,\n    ignoreSignature,\n    redirectUri,\n    urls,\n    scopes,\n  } = meta as IdxTransactionMeta;\n  const tokenResponse = await authClient.token.exchangeCodeForTokens({\n    interactionCode,\n    clientId,\n    codeVerifier,\n    ignoreSignature,\n    redirectUri,\n    scopes\n  }, urls);\n  return tokenResponse.tokens;\n}\n\nasync function finalizeData(authClient, data: RunData): Promise<RunData> {\n  let {\n    options,\n    idxResponse,\n    canceled,\n    status,\n  } = data;\n  const { exchangeCodeForTokens } = options;\n  let shouldSaveResponse = false;\n  let shouldClearTransaction = false;\n  let clearSharedStorage = true;\n  let interactionCode;\n  let tokens;\n  let enabledFeatures;\n  let availableSteps;\n  let messages;\n  let terminal;\n\n  if (idxResponse) {\n    shouldSaveResponse = !!(idxResponse.requestDidSucceed || idxResponse.stepUp);\n    enabledFeatures = getEnabledFeatures(idxResponse);\n    availableSteps = getAvailableSteps(authClient, idxResponse, options.useGenericRemediator);\n    messages = getMessagesFromResponse(idxResponse);\n    terminal = isTerminalResponse(idxResponse);\n  }\n\n  if (terminal) {\n    status = IdxStatus.TERMINAL;\n\n    // In most cases a terminal response should not clear transaction data. The user should cancel or skip to continue.\n    // A terminal \"success\" is a non-error response with no further actions available.\n    // In these narrow cases, saved transaction data should be cleared.\n    // One example of a terminal success is when the email verify flow is continued in another tab\n    const hasActions = Object.keys(idxResponse!.actions).length > 0;\n    const hasErrors = !!messages.find(msg => msg.class === 'ERROR');\n    const isTerminalSuccess = !hasActions && !hasErrors && idxResponse!.requestDidSucceed === true;\n    if (isTerminalSuccess) {\n      shouldClearTransaction = true;\n    } else {\n      // only save response if there are actions available (ignore messages)\n      shouldSaveResponse = shouldSaveResponse && hasActions;\n    }\n    // leave shared storage intact so the transaction can be continued in another tab\n    clearSharedStorage = false;\n  } else if (canceled) {\n    status = IdxStatus.CANCELED;\n    shouldClearTransaction = true;\n  } else if (idxResponse?.interactionCode) { \n    interactionCode = idxResponse.interactionCode;\n    if (exchangeCodeForTokens === false) {\n      status = IdxStatus.SUCCESS;\n      shouldClearTransaction = false;\n    } else {\n      tokens = await getTokens(authClient, data);\n      status = IdxStatus.SUCCESS;\n      shouldClearTransaction = true;\n    }\n  }\n  return {\n    ...data,\n    status,\n    interactionCode,\n    tokens,\n    shouldSaveResponse,\n    shouldClearTransaction,\n    clearSharedStorage,\n    enabledFeatures,\n    availableSteps,\n    messages,\n    terminal\n  };\n}\n\nfunction handleError(err, data: RunData): RunData {\n  let { error, status, shouldClearTransaction } = data;\n\n  // current version of idx-js will throw/reject IDX responses. Handle these differently than regular errors\n  if (isIdxResponse(err)) {\n    error = err;\n    status = IdxStatus.FAILURE;\n    shouldClearTransaction = true;\n  } else {\n    // error is not an IDX response, throw it like a regular error\n    throw err;\n  }\n\n  return { ...data, error, status, shouldClearTransaction };\n}\n\nexport async function run(\n  authClient: OktaAuthIdxInterface, \n  options: RunOptions = {},\n): Promise<IdxTransaction> {\n  let data: RunData = {\n    options,\n    values: initializeValues(options)\n  };\n\n  data = initializeData(authClient, data);\n  try {\n    data = await getDataFromIntrospect(authClient, data);\n    data = await getDataFromRemediate(authClient, data);\n  } catch (err) {\n    data = handleError(err, data);\n  }\n  data = await finalizeData(authClient, data);\n\n  const {\n    idxResponse,\n    meta,\n    shouldSaveResponse,\n    shouldClearTransaction,\n    clearSharedStorage,\n    status,\n    enabledFeatures,\n    availableSteps,\n    tokens,\n    nextStep,\n    messages,\n    error,\n    interactionCode\n  } = data;\n\n  if (shouldClearTransaction) {\n    authClient.transactionManager.clear({ clearSharedStorage });\n  }\n  else {\n    // ensures state is saved to sessionStorage\n    saveTransactionMeta(authClient, { ...meta });\n\n    if (shouldSaveResponse) {\n      // Save intermediate idx response in storage to reduce introspect call\n      const { rawIdxState: rawIdxResponse, requestDidSucceed } = idxResponse!;\n      authClient.transactionManager.saveIdxResponse({\n        rawIdxResponse,\n        requestDidSucceed,\n        stateHandle: idxResponse!.context?.stateHandle,\n        interactionHandle: meta?.interactionHandle\n      });\n    }\n  }\n  \n  // copy all fields from idxResponse which are needed by the widget\n  const { actions, context, neededToProceed, proceed, rawIdxState, requestDidSucceed, stepUp } = idxResponse || {};\n  return {\n    status: status!,\n    ...(meta && { meta }),\n    ...(enabledFeatures && { enabledFeatures }),\n    ...(availableSteps && { availableSteps }),\n    ...(tokens && { tokens }),\n    ...(nextStep && { nextStep }),\n    ...(messages && messages.length && { messages }),\n    ...(error && { error }),\n    ...(stepUp && { stepUp }),\n    interactionCode, // if options.exchangeCodeForTokens is false\n\n    // from idx-js\n    actions: actions!,\n    context: context!,\n    neededToProceed: neededToProceed!,\n    proceed: proceed!,\n    rawIdxState: rawIdxState!,\n    requestDidSucceed\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { \n  OktaAuthIdxInterface,\n  IdxTransaction,\n  AuthenticatorKey,\n  AuthenticationOptions\n} from '../types';\nimport { run } from './run';\n\nexport async function authenticate(\n  authClient: OktaAuthIdxInterface, options: AuthenticationOptions = {}\n): Promise<IdxTransaction> {\n  if (options.password && !options.authenticator) {\n    options.authenticator = AuthenticatorKey.OKTA_PASSWORD;\n  }\n  return run(authClient, { \n    ...options, \n    flow: 'authenticate'\n  });\n}\n","/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthIdxInterface, CancelOptions, IdxTransactionMeta } from '../types';\nimport { run } from './run';\nimport { getFlowSpecification } from './flow';\n\nexport async function cancel (authClient: OktaAuthIdxInterface, options?: CancelOptions) {\n  const meta = authClient.transactionManager.load() as IdxTransactionMeta;\n  const flowSpec = getFlowSpecification(authClient, meta.flow);\n  return run(authClient, {\n    ...options,\n    ...flowSpec,\n    actions: ['cancel']\n  });\n}\n","\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthIdxInterface } from '../types';\n\nimport CustomError from '../errors/CustomError';\nimport { urlParamsToObject  } from '../oidc/util/urlParams';\n\nexport interface EmailVerifyCallbackResponse {\n  state: string;\n  otp: string;\n}\n\nexport class EmailVerifyCallbackError extends CustomError {\n  state: string;\n  otp: string;\n\n  constructor(state: string, otp: string) {\n    super(`Enter the OTP code in the originating client: ${otp}`);\n    this.name = 'EmailVerifyCallbackError';\n    this.state = state;\n    this.otp = otp;\n  }\n}\n\nexport function isEmailVerifyCallbackError(error: Error) {\n  return (error.name === 'EmailVerifyCallbackError');\n}\n\n// Check if state && otp have been passed back in the url\nexport function isEmailVerifyCallback (urlPath: string): boolean {\n  return /(otp=)/i.test(urlPath) && /(state=)/i.test(urlPath);\n}\n\n// Parse state and otp from a urlPath (should be either a search or fragment from the URL)\nexport function parseEmailVerifyCallback(urlPath: string): EmailVerifyCallbackResponse {\n  return urlParamsToObject(urlPath) as EmailVerifyCallbackResponse;\n}\n\nexport async function handleEmailVerifyCallback(authClient: OktaAuthIdxInterface, search: string) {\n  if (isEmailVerifyCallback(search)) {\n    const { state, otp } = parseEmailVerifyCallback(search);\n    if (authClient.idx.canProceed({ state })) {\n      // same browser / device\n      return await authClient.idx.proceed({ state, otp });\n    } else {\n      // different browser or device\n      throw new EmailVerifyCallbackError(state, otp);\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { \n  OktaAuthIdxInterface,\n  IdxTransaction,\n  ProceedOptions,\n} from '../types';\nimport { run } from './run';\nimport { getSavedTransactionMeta } from './transactionMeta';\nimport { AuthSdkError } from '../errors';\n\nexport function canProceed(authClient: OktaAuthIdxInterface, options: ProceedOptions = {}): boolean {\n  const meta = getSavedTransactionMeta(authClient, options);\n  return !!(meta || options.stateHandle);\n}\n\nexport async function proceed(\n  authClient: OktaAuthIdxInterface,\n  options: ProceedOptions = {}\n): Promise<IdxTransaction> {\n\n  if (!canProceed(authClient, options)) {\n    throw new AuthSdkError('Unable to proceed: saved transaction could not be loaded');\n  }\n\n  let { flow, state } = options;\n  if (!flow) {\n    const meta = getSavedTransactionMeta(authClient, { state });\n    flow = meta?.flow;\n  }\n\n  return run(authClient, { \n    ...options, \n    flow\n  });\n}\n","/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { proceed } from './proceed';\n\nimport { \n  IdxPollOptions,\n  IdxTransaction,\n  OktaAuthIdxInterface,\n} from '../types';\nimport { getSavedTransactionMeta } from './transactionMeta';\nimport { warn } from '../util';\n\nexport async function poll(authClient: OktaAuthIdxInterface, options: IdxPollOptions = {}): Promise<IdxTransaction> {\n  let transaction = await proceed(authClient, {\n    startPolling: true\n  });\n\n  const meta = getSavedTransactionMeta(authClient);\n  let availablePollingRemeditaions = meta?.remediations?.find(remediation => remediation.includes('poll'));\n  if (!availablePollingRemeditaions?.length) {\n    warn('No polling remediations available at the current IDX flow stage');\n  }\n\n  if (Number.isInteger(options.refresh)) {\n    return new Promise(function (resolve, reject) {\n      setTimeout(async function () {\n        try {\n          const refresh = transaction.nextStep?.poll?.refresh;\n          if (refresh) {\n            resolve(poll(authClient, {\n              refresh\n            }));\n          } else {\n            resolve(transaction);\n          }\n        } catch (err) {\n          reject(err);\n        }\n      }, options.refresh);\n    });\n  }\n\n  return transaction;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { OktaAuthIdxInterface, IdxTransaction, StartOptions } from '../types';\n\nexport async function startTransaction(\n  authClient: OktaAuthIdxInterface, \n  options: StartOptions = {}\n): Promise<IdxTransaction> {\n  // Clear IDX response cache and saved transaction meta (if any)\n  authClient.transactionManager.clear();\n\n  return run(authClient, {\n    exchangeCodeForTokens: false,\n    ...options\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { hasSavedInteractionHandle } from './transactionMeta';\nimport { startTransaction } from './startTransaction';\nimport { AuthSdkError } from '../errors';\nimport { \n  RegistrationOptions, \n  IdxTransaction, \n  OktaAuthIdxInterface, \n  IdxFeature,\n} from '../types';\n\nexport async function register(\n  authClient: OktaAuthIdxInterface, options: RegistrationOptions = {}\n): Promise<IdxTransaction> {\n\n  // Only check at the beginning of the transaction\n  if (!hasSavedInteractionHandle(authClient)) {\n    const { enabledFeatures, availableSteps } = await startTransaction(authClient, {\n      ...options,\n      flow: 'register',\n      autoRemediate: false\n    });\n    if (!options.activationToken && enabledFeatures && !enabledFeatures.includes(IdxFeature.REGISTRATION)) {\n      const error = new AuthSdkError('Registration is not supported based on your current org configuration.');\n      throw error;\n    // return { status: IdxStatus.FAILURE, error } as unknown as IdxTransaction; // TODO: wny not just throw the error?\n    }\n    if (options.activationToken && availableSteps?.some(({ name }) => name === 'identify')) {\n      const error = new AuthSdkError('activationToken is not supported based on your current org configuration.');\n      throw error;\n    // return { status: IdxStatus.FAILURE, error } as unknown as IdxTransaction; // TODO: wny not just throw the error?\n    }\n  }\n\n  return run(authClient, {\n    ...options,\n    flow: 'register'\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { getFlowSpecification } from './flow';\nimport { \n  OktaAuthIdxInterface, \n  PasswordRecoveryOptions, \n  IdxTransaction,\n} from '../types';\n\nexport async function recoverPassword(\n  authClient: OktaAuthIdxInterface, options: PasswordRecoveryOptions = {}\n): Promise<IdxTransaction> {\n  const flowSpec = getFlowSpecification(authClient, 'recoverPassword');\n  return run(\n    authClient, \n    { \n      ...options,\n      ...flowSpec,\n    }\n  );\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError, OAuthError } from '../errors';\nimport { OktaAuth } from '..';\nimport {IdxTransactionMeta} from '../types';\n\nexport async function handleInteractionCodeRedirect(\n  authClient: OktaAuth, \n  url: string\n): Promise<void> {\n  const meta = authClient.transactionManager.load() as IdxTransactionMeta;\n  if (!meta) {\n    throw new AuthSdkError('No transaction data was found in storage');\n  }\n\n  const { \n    codeVerifier,\n    state: savedState \n  } = meta;\n  const { \n    searchParams\n  // URL API has been added to the polyfill\n  // eslint-disable-next-line compat/compat\n  } = new URL(url); \n  const state = searchParams.get('state');\n  const interactionCode = searchParams.get('interaction_code');\n\n  // Error handling\n  const error = searchParams.get('error');\n  if (error) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    throw new OAuthError(error, searchParams.get('error_description')!);\n  }\n  if (state !== savedState) {\n    throw new AuthSdkError('State in redirect uri does not match with transaction state');\n  }\n  if (!interactionCode) {\n    throw new AuthSdkError('Unable to parse interaction_code from the url');\n  }\n  \n  // Save tokens to storage\n  const { tokens } = await authClient.token.exchangeCodeForTokens({ interactionCode, codeVerifier });\n  authClient.tokenManager.setTokens(tokens);\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { hasSavedInteractionHandle } from './transactionMeta';\nimport { startTransaction } from './startTransaction';\nimport { AuthSdkError } from '../errors';\nimport { \n  OktaAuthIdxInterface, \n  AccountUnlockOptions, \n  IdxTransaction,\n  IdxFeature,\n} from '../types';\n\nexport async function unlockAccount(\n  authClient: OktaAuthIdxInterface, options: AccountUnlockOptions = {}\n): Promise<IdxTransaction> {\n  options.flow = 'unlockAccount';\n\n  // Only check at the beginning of the transaction\n  if (!hasSavedInteractionHandle(authClient)) {\n    const { enabledFeatures } = await startTransaction(authClient, { ...options, autoRemediate: false });\n    if (enabledFeatures && !enabledFeatures.includes(IdxFeature.ACCOUNT_UNLOCK)) {\n      throw new AuthSdkError(\n        'Self Service Account Unlock is not supported based on your current org configuration.'\n      );\n    }\n  }\n\n  return run(authClient, { ...options });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* global SDK_VERSION */\n\nimport { isBrowser } from './features';\nexport class OktaUserAgent {\n  private environments: string[];\n\n  constructor() {\n    // add base sdk env\n    this.environments = [`okta-auth-js/${SDK_VERSION}`];\n  }\n\n  addEnvironment(env: string) {\n    this.environments.push(env);\n  }\n\n  getHttpHeader() {\n    this.maybeAddNodeEnvironment();\n    return { 'X-Okta-User-Agent-Extended': this.environments.join(' ') };\n  }\n\n  getVersion() {\n    return SDK_VERSION;\n  }\n\n  private maybeAddNodeEnvironment() {\n    if (isBrowser() || !process || !process.versions) {\n      return;\n    }\n    const { node: version } = process.versions;\n    this.environments.push(`nodejs/${version}`);\n  }\n}\n","/* eslint-disable max-statements */\n/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* global window */\n\nimport { \n  DEFAULT_MAX_CLOCK_SKEW, \n  REFERRER_PATH_STORAGE_KEY\n} from './constants';\nimport * as constants from './constants';\nimport {\n  OktaAuthInterface,\n  OktaAuthOptions, \n  AccessToken, \n  IDToken,\n  RefreshToken,\n  TokenAPI, \n  FeaturesAPI, \n  CryptoAPI,\n  WebauthnAPI,\n  SignoutAPI, \n  FingerprintAPI,\n  UserClaims, \n  SigninWithRedirectOptions,\n  SigninWithCredentialsOptions,\n  SignoutOptions,\n  Tokens,\n  ForgotPasswordOptions,\n  VerifyRecoveryTokenOptions,\n  TransactionAPI,\n  SessionAPI,\n  SigninAPI,\n  PkceAPI,\n  SigninOptions,\n  IdxAPI,\n  SignoutRedirectUrlOptions,\n  HttpAPI,\n  FlowIdentifier,\n  GetWithRedirectAPI,\n  ParseFromUrlInterface,\n  GetWithRedirectFunction,\n  RequestOptions,\n  IsAuthenticatedOptions,\n  OAuthResponseType,\n  CustomUserClaims,\n  RequestData,\n} from './types';\nimport {\n  transactionStatus,\n  resumeTransaction,\n  transactionExists,\n  introspectAuthn,\n  postToTransaction,\n  AuthTransaction,\n  TransactionState\n} from './tx';\nimport PKCE from './oidc/util/pkce';\nimport {\n  closeSession,\n  sessionExists,\n  getSession,\n  refreshSession,\n  setCookieAndRedirect\n} from './session';\nimport {\n  getOAuthUrls,\n  getWithoutPrompt,\n  getWithPopup,\n  getWithRedirect,\n  isLoginRedirect,\n  parseFromUrl,\n  decodeToken,\n  revokeToken,\n  renewToken,\n  renewTokens,\n  renewTokensWithRefresh,\n  getUserInfo,\n  verifyToken,\n  prepareTokenParams,\n  exchangeCodeForTokens,\n  isInteractionRequiredError,\n  isInteractionRequired,\n} from './oidc';\nimport { isBrowser } from './features';\nimport * as features from './features';\nimport * as crypto from './crypto';\nimport * as webauthn from './crypto/webauthn';\nimport browserStorage from './browser/browserStorage';\nimport { \n  toQueryString, \n  toAbsoluteUrl,\n  clone,\n} from './util';\nimport { TokenManager } from './TokenManager';\nimport { ServiceManager } from './ServiceManager';\nimport { get, httpRequest, setRequestHeader } from './http';\nimport PromiseQueue from './PromiseQueue';\nimport fingerprint from './browser/fingerprint';\nimport { AuthStateManager } from './AuthStateManager';\nimport { StorageManager } from './StorageManager';\nimport TransactionManager from './TransactionManager';\nimport { buildOptions } from './options';\nimport {\n  interact,\n  introspect,\n  authenticate,\n  cancel,\n  poll,\n  proceed,\n  register,\n  recoverPassword,\n  unlockAccount,\n  startTransaction,\n  handleInteractionCodeRedirect,\n  canProceed,\n  handleEmailVerifyCallback,\n  isEmailVerifyCallback,\n  parseEmailVerifyCallback,\n  isEmailVerifyCallbackError\n} from './idx';\nimport { OktaUserAgent } from './OktaUserAgent';\nimport { parseOAuthResponseFromUrl } from './oidc/parseFromUrl';\nimport {\n  getSavedTransactionMeta,\n  createTransactionMeta,\n  getTransactionMeta,\n  saveTransactionMeta,\n  clearTransactionMeta,\n  isTransactionMetaValid\n} from './idx/transactionMeta';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore \n// Do not use this type in code, so it won't be emitted in the declaration output\nimport Emitter from 'tiny-emitter';\nimport { makeIdxState } from './idx/idxState';\n\nclass OktaAuth implements OktaAuthInterface, SigninAPI, SignoutAPI {\n  options: OktaAuthOptions;\n  storageManager: StorageManager;\n  transactionManager: TransactionManager;\n  tx: TransactionAPI;\n  idx: IdxAPI;\n  session: SessionAPI;\n  pkce: PkceAPI;\n  static features: FeaturesAPI = features;\n  static crypto: CryptoAPI = crypto;\n  static webauthn: WebauthnAPI = webauthn;\n  features: FeaturesAPI = features;\n  token: TokenAPI;\n  _tokenQueue: PromiseQueue;\n  emitter: any;\n  tokenManager: TokenManager;\n  authStateManager: AuthStateManager;\n  serviceManager: ServiceManager;\n  http: HttpAPI;\n  fingerprint: FingerprintAPI;\n  _oktaUserAgent: OktaUserAgent;\n  _pending: { handleLogin: boolean };\n  constructor(args: OktaAuthOptions) {\n    const options = this.options = buildOptions(args);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.storageManager = new StorageManager(options.storageManager!, options.cookies!, options.storageUtil!);\n    this.transactionManager = new TransactionManager(Object.assign({\n      storageManager: this.storageManager,\n    }, options.transactionManager));\n    this._oktaUserAgent = new OktaUserAgent();\n\n    this.tx = {\n      status: transactionStatus.bind(null, this),\n      resume: resumeTransaction.bind(null, this),\n      exists: Object.assign(transactionExists.bind(null, this), {\n        _get: (name) => {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          const storage = options.storageUtil!.storage;\n          return storage.get(name);\n        }\n      }),\n      introspect: introspectAuthn.bind(null, this),\n      createTransaction: (res?: TransactionState) => {\n        return new AuthTransaction(this, res);\n      },\n      postToTransaction: (url: string, args?: RequestData, options?: RequestOptions) => {\n        return postToTransaction(this, url, args, options);\n      }\n    };\n\n    this.pkce = {\n      DEFAULT_CODE_CHALLENGE_METHOD: PKCE.DEFAULT_CODE_CHALLENGE_METHOD,\n      generateVerifier: PKCE.generateVerifier,\n      computeChallenge: PKCE.computeChallenge\n    };\n\n    // Add shims for compatibility, these will be removed in next major version. OKTA-362589\n    Object.assign(this.options.storageUtil, {\n      getPKCEStorage: this.storageManager.getLegacyPKCEStorage.bind(this.storageManager),\n      getHttpCache: this.storageManager.getHttpCache.bind(this.storageManager),\n    });\n\n    this._pending = { handleLogin: false };\n\n    if (isBrowser()) {\n      this.options = Object.assign(this.options, {\n        redirectUri: toAbsoluteUrl(args.redirectUri, window.location.origin), // allow relative URIs\n      });\n    }\n\n    // Digital clocks will drift over time, so the server\n    // can misalign with the time reported by the browser.\n    // The maxClockSkew allows relaxing the time-based\n    // validation of tokens (in seconds, not milliseconds).\n    // It currently defaults to 300, because 5 min is the\n    // default maximum tolerance allowed by Kerberos.\n    // (https://technet.microsoft.com/en-us/library/cc976357.aspx)\n    if (!args.maxClockSkew && args.maxClockSkew !== 0) {\n      this.options.maxClockSkew = DEFAULT_MAX_CLOCK_SKEW;\n    } else {\n      this.options.maxClockSkew = args.maxClockSkew;\n    }\n\n    // As some end user's devices can have their date \n    // and time incorrectly set, allow for the disabling\n    // of the jwt liftetime validation\n    this.options.ignoreLifetime = !!args.ignoreLifetime;\n\n    this.session = {\n      close: closeSession.bind(null, this),\n      exists: sessionExists.bind(null, this),\n      get: getSession.bind(null, this),\n      refresh: refreshSession.bind(null, this),\n      setCookieAndRedirect: setCookieAndRedirect.bind(null, this)\n    };\n\n    this._tokenQueue = new PromiseQueue();\n    const useQueue = (method) => {\n      return PromiseQueue.prototype.push.bind(this._tokenQueue, method, null);\n    };\n\n    // eslint-disable-next-line max-len\n    const getWithRedirectFn = useQueue(getWithRedirect.bind(null, this)) as GetWithRedirectFunction;\n    const getWithRedirectApi: GetWithRedirectAPI = Object.assign(getWithRedirectFn, {\n      // This is exposed so we can set window.location in our tests\n      _setLocation: function(url) {\n        window.location = url;\n      }\n    });\n    // eslint-disable-next-line max-len\n    const parseFromUrlFn = useQueue(parseFromUrl.bind(null, this)) as ParseFromUrlInterface;\n    const parseFromUrlApi: ParseFromUrlInterface = Object.assign(parseFromUrlFn, {\n      // This is exposed so we can mock getting window.history in our tests\n      _getHistory: function() {\n        return window.history;\n      },\n\n      // This is exposed so we can mock getting window.location in our tests\n      _getLocation: function() {\n        return window.location;\n      },\n\n      // This is exposed so we can mock getting window.document in our tests\n      _getDocument: function() {\n        return window.document;\n      }\n    });\n    this.token = {\n      prepareTokenParams: prepareTokenParams.bind(null, this),\n      exchangeCodeForTokens: exchangeCodeForTokens.bind(null, this),\n      getWithoutPrompt: getWithoutPrompt.bind(null, this),\n      getWithPopup: getWithPopup.bind(null, this),\n      getWithRedirect: getWithRedirectApi,\n      parseFromUrl: parseFromUrlApi,\n      decode: decodeToken,\n      revoke: revokeToken.bind(null, this),\n      renew: renewToken.bind(null, this),\n      renewTokensWithRefresh: renewTokensWithRefresh.bind(null, this),\n      renewTokens: renewTokens.bind(null, this),\n      getUserInfo: <C extends CustomUserClaims = CustomUserClaims>(\n        accessTokenObject: AccessToken,\n        idTokenObject: IDToken\n      ): Promise<UserClaims<C>> => {\n        return getUserInfo(this, accessTokenObject, idTokenObject);\n      },\n      verify: verifyToken.bind(null, this),\n      isLoginRedirect: isLoginRedirect.bind(null, this)\n    };\n    // Wrap certain async token API methods using PromiseQueue to avoid issues with concurrency\n    // 'getWithRedirect' and 'parseFromUrl' are already wrapped\n    const toWrap = [\n      'getWithoutPrompt',\n      'getWithPopup',\n      'revoke',\n      'renew',\n      'renewTokensWithRefresh',\n      'renewTokens'\n    ];\n    toWrap.forEach(key => {\n      this.token[key] = useQueue(this.token[key]);\n    });\n\n    // IDX\n    const boundStartTransaction = startTransaction.bind(null, this);\n    this.idx = {\n      interact: interact.bind(null, this),\n      introspect: introspect.bind(null, this),\n      makeIdxResponse: makeIdxState.bind(null, this),\n      \n      authenticate: authenticate.bind(null, this),\n      register: register.bind(null, this),\n      start: boundStartTransaction,\n      startTransaction: boundStartTransaction, // Use `start` instead. `startTransaction` will be removed in 7.0\n      poll: poll.bind(null, this),\n      proceed: proceed.bind(null, this),\n      cancel: cancel.bind(null, this),\n      recoverPassword: recoverPassword.bind(null, this),\n\n      // oauth redirect callback\n      handleInteractionCodeRedirect: handleInteractionCodeRedirect.bind(null, this),\n\n      // interaction required callback\n      isInteractionRequired: isInteractionRequired.bind(null, this),\n      isInteractionRequiredError,\n\n      // email verify callback\n      handleEmailVerifyCallback: handleEmailVerifyCallback.bind(null, this),\n      isEmailVerifyCallback,\n      parseEmailVerifyCallback,\n      isEmailVerifyCallbackError,\n      \n      getSavedTransactionMeta: getSavedTransactionMeta.bind(null, this),\n      createTransactionMeta: createTransactionMeta.bind(null, this),\n      getTransactionMeta: getTransactionMeta.bind(null, this),\n      saveTransactionMeta: saveTransactionMeta.bind(null, this),\n      clearTransactionMeta: clearTransactionMeta.bind(null, this),\n      isTransactionMetaValid,\n      setFlow: (flow: FlowIdentifier) => {\n        this.options.flow = flow;\n      },\n      getFlow: (): FlowIdentifier | undefined => {\n        return this.options.flow;\n      },\n      canProceed: canProceed.bind(null, this),\n      unlockAccount: unlockAccount.bind(null, this),\n    };\n\n    // HTTP\n    this.http = {\n      setRequestHeader: setRequestHeader.bind(null, this)\n    };\n\n    // Fingerprint API\n    this.fingerprint = fingerprint.bind(null, this);\n\n    this.emitter = new Emitter();\n\n    // TokenManager\n    this.tokenManager = new TokenManager(this, args.tokenManager);\n\n    // AuthStateManager\n    this.authStateManager = new AuthStateManager(this);\n\n    // ServiceManager\n    this.serviceManager = new ServiceManager(this, args.services);\n  }\n\n  async start() {\n    // TODO: review tokenManager.start\n    this.tokenManager.start();\n    if (!this.token.isLoginRedirect()) {\n      this.authStateManager.updateAuthState();\n    }\n    await this.serviceManager.start();\n  }\n\n  async stop() {\n    // TODO: review tokenManager.stop\n    this.tokenManager.stop();\n    await this.serviceManager.stop();\n  }\n\n  setHeaders(headers) {\n    this.options.headers = Object.assign({}, this.options.headers, headers);\n  }\n\n\n  // Authn  V1\n  async signIn(opts: SigninOptions): Promise<AuthTransaction> {\n    return this.signInWithCredentials(opts as SigninWithCredentialsOptions);\n  }\n\n  // Authn  V1\n  async signInWithCredentials(opts: SigninWithCredentialsOptions): Promise<AuthTransaction> {\n    opts = clone(opts || {});\n    const _postToTransaction = (options?) => {\n      delete opts.sendFingerprint;\n      return postToTransaction(this, '/api/v1/authn', opts, options);\n    };\n    if (!opts.sendFingerprint) {\n      return _postToTransaction();\n    }\n    return this.fingerprint()\n    .then(function(fingerprint) {\n      return _postToTransaction({\n        headers: {\n          'X-Device-Fingerprint': fingerprint\n        }\n      });\n    });\n  }\n\n  async signInWithRedirect(opts: SigninWithRedirectOptions = {}) {\n    const { originalUri, ...additionalParams } = opts;\n    if(this._pending.handleLogin) { \n      // Don't trigger second round\n      return;\n    }\n\n    this._pending.handleLogin = true;\n    try {\n      // Trigger default signIn redirect flow\n      if (originalUri) {\n        this.setOriginalUri(originalUri);\n      }\n      const params = Object.assign({\n        // TODO: remove this line when default scopes are changed OKTA-343294\n        scopes: this.options.scopes || ['openid', 'email', 'profile']\n      }, additionalParams);\n      await this.token.getWithRedirect(params);\n    } finally {\n      this._pending.handleLogin = false;\n    }\n  }\n\n  // Ends the current Okta SSO session without redirecting to Okta.\n  closeSession(): Promise<unknown> {\n    return this.session.close() // DELETE /api/v1/sessions/me\n    .then(async () => {\n      // Clear all local tokens\n      this.tokenManager.clear();\n    })\n    .catch(function(e) {\n      if (e.name === 'AuthApiError' && e.errorCode === 'E0000007') {\n        // Session does not exist or has already been closed\n        return null;\n      }\n      throw e;\n    });\n  }\n  \n  // Revokes the access token for the application session\n  async revokeAccessToken(accessToken?: AccessToken): Promise<unknown> {\n    if (!accessToken) {\n      accessToken = (await this.tokenManager.getTokens()).accessToken as AccessToken;\n      const accessTokenKey = this.tokenManager.getStorageKeyByType('accessToken');\n      this.tokenManager.remove(accessTokenKey);\n    }\n    // Access token may have been removed. In this case, we will silently succeed.\n    if (!accessToken) {\n      return Promise.resolve(null);\n    }\n    return this.token.revoke(accessToken);\n  }\n\n  // Revokes the refresh token for the application session\n  async revokeRefreshToken(refreshToken?: RefreshToken): Promise<unknown> {\n    if (!refreshToken) {\n      refreshToken = (await this.tokenManager.getTokens()).refreshToken as RefreshToken;\n      const refreshTokenKey = this.tokenManager.getStorageKeyByType('refreshToken');\n      this.tokenManager.remove(refreshTokenKey);\n    }\n    // Refresh token may have been removed. In this case, we will silently succeed.\n    if (!refreshToken) {\n      return Promise.resolve(null);\n    }\n    return this.token.revoke(refreshToken);\n  }\n\n  getSignOutRedirectUrl(options: SignoutRedirectUrlOptions = {}) {\n    let {\n      idToken,\n      postLogoutRedirectUri,\n      state,\n    } = options;\n    if (!idToken) {\n      idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n    }\n    if (!idToken) {\n      return '';\n    }\n    if (!postLogoutRedirectUri) {\n      postLogoutRedirectUri = this.options.postLogoutRedirectUri;\n    }\n\n    const logoutUrl = getOAuthUrls(this).logoutUrl;\n    const idTokenHint = idToken.idToken; // a string\n    let logoutUri = logoutUrl + '?id_token_hint=' + encodeURIComponent(idTokenHint);\n    if (postLogoutRedirectUri) {\n      logoutUri += '&post_logout_redirect_uri=' + encodeURIComponent(postLogoutRedirectUri);\n    } \n    // State allows option parameters to be passed to logout redirect uri\n    if (state) {\n      logoutUri += '&state=' + encodeURIComponent(state);\n    }\n\n    return logoutUri;\n  }\n\n  // Revokes refreshToken or accessToken, clears all local tokens, then redirects to Okta to end the SSO session.\n  async signOut(options?: SignoutOptions) {\n    options = Object.assign({}, options);\n  \n    // postLogoutRedirectUri must be whitelisted in Okta Admin UI\n    var defaultUri = window.location.origin;\n    var currentUri = window.location.href;\n    var postLogoutRedirectUri = options.postLogoutRedirectUri\n      || this.options.postLogoutRedirectUri\n      || defaultUri;\n  \n    var accessToken = options.accessToken;\n    var refreshToken = options.refreshToken;\n    var revokeAccessToken = options.revokeAccessToken !== false;\n    var revokeRefreshToken = options.revokeRefreshToken !== false;\n  \n    if (revokeRefreshToken && typeof refreshToken === 'undefined') {\n      refreshToken = this.tokenManager.getTokensSync().refreshToken as RefreshToken;\n    }\n\n    if (revokeAccessToken && typeof accessToken === 'undefined') {\n      accessToken = this.tokenManager.getTokensSync().accessToken as AccessToken;\n    }\n  \n    if (!options.idToken) {\n      options.idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n    }\n\n    if (revokeRefreshToken && refreshToken) {\n      await this.revokeRefreshToken(refreshToken);\n    }\n\n    if (revokeAccessToken && accessToken) {\n      await this.revokeAccessToken(accessToken);\n    }\n\n    const logoutUri = this.getSignOutRedirectUrl({ ...options, postLogoutRedirectUri });\n    // No logoutUri? This can happen if the storage was cleared.\n    // Fallback to XHR signOut, then simulate a redirect to the post logout uri\n    if (!logoutUri) {\n      // local tokens are cleared once session is closed\n      return this.closeSession() // can throw if the user cannot be signed out\n      .then(function() {\n        if (postLogoutRedirectUri === currentUri) {\n          window.location.reload(); // force a hard reload if URI is not changing\n        } else {\n          window.location.assign(postLogoutRedirectUri);\n        }\n      });\n    } else {\n      if (options.clearTokensBeforeRedirect) {\n        // Clear all local tokens\n        this.tokenManager.clear();\n      } else {\n        this.tokenManager.addPendingRemoveFlags();\n      }\n      // Flow ends with logout redirect\n      window.location.assign(logoutUri);\n    }\n  }\n\n  webfinger(opts): Promise<object> {\n    var url = '/.well-known/webfinger' + toQueryString(opts);\n    var options = {\n      headers: {\n        'Accept': 'application/jrd+json'\n      }\n    };\n    return get(this, url, options);\n  }\n\n  //\n  // Common Methods from downstream SDKs\n  //\n\n  // Returns true if both accessToken and idToken are not expired\n  // If `autoRenew` option is set, will attempt to renew expired tokens before returning.\n  async isAuthenticated(options: IsAuthenticatedOptions = {}): Promise<boolean> {\n    // TODO: remove dependency on tokenManager options in next major version - OKTA-473815\n    const { autoRenew, autoRemove } = this.tokenManager.getOptions();\n\n    const shouldRenew = options.onExpiredToken ? options.onExpiredToken === 'renew' : autoRenew;\n    const shouldRemove = options.onExpiredToken ? options.onExpiredToken === 'remove' : autoRemove;\n\n    let { accessToken } = this.tokenManager.getTokensSync();\n    if (accessToken && this.tokenManager.hasExpired(accessToken)) {\n      accessToken = undefined;\n      if (shouldRenew) {\n        try {\n          accessToken = await this.tokenManager.renew('accessToken') as AccessToken;\n        } catch {\n          // Renew errors will emit an \"error\" event \n        }\n      } else if (shouldRemove) {\n        this.tokenManager.remove('accessToken');\n      }\n    }\n\n    let { idToken } = this.tokenManager.getTokensSync();\n    if (idToken && this.tokenManager.hasExpired(idToken)) {\n      idToken = undefined;\n      if (shouldRenew) {\n        try {\n          idToken = await this.tokenManager.renew('idToken') as IDToken;\n        } catch {\n          // Renew errors will emit an \"error\" event \n        }\n      } else if (shouldRemove) {\n        this.tokenManager.remove('idToken');\n      }\n    }\n\n    return !!(accessToken && idToken);\n  }\n\n  async getUser<T extends CustomUserClaims = CustomUserClaims>(): Promise<UserClaims<T>> {\n    const { idToken, accessToken } = this.tokenManager.getTokensSync();\n    return this.token.getUserInfo(accessToken, idToken);\n  }\n\n  getIdToken(): string | undefined {\n    const { idToken } = this.tokenManager.getTokensSync();\n    return idToken ? idToken.idToken : undefined;\n  }\n\n  getAccessToken(): string | undefined {\n    const { accessToken } = this.tokenManager.getTokensSync();\n    return accessToken ? accessToken.accessToken : undefined;\n  }\n\n  getRefreshToken(): string | undefined {\n    const { refreshToken } = this.tokenManager.getTokensSync();\n    return refreshToken ? refreshToken.refreshToken : undefined;\n  }\n\n  /**\n   * Store parsed tokens from redirect url\n   */\n  async storeTokensFromRedirect(): Promise<void> {\n    const { tokens } = await this.token.parseFromUrl();\n    this.tokenManager.setTokens(tokens);\n  }\n\n  setOriginalUri(originalUri: string, state?: string): void {\n    // always store in session storage\n    const sessionStorage = browserStorage.getSessionStorage();\n    sessionStorage.setItem(REFERRER_PATH_STORAGE_KEY, originalUri);\n\n    // to support multi-tab flows, set a state in constructor or pass as param\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      sharedStorage.setItem(state, originalUri);\n    }\n  }\n\n  getOriginalUri(state?: string): string | undefined {\n    // Prefer shared storage (if state is available)\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      const originalUri = sharedStorage.getItem(state);\n      if (originalUri) {\n        return originalUri;\n      }\n    }\n\n    // Try to load from session storage\n    const storage = browserStorage.getSessionStorage();\n    return storage ? storage.getItem(REFERRER_PATH_STORAGE_KEY) || undefined : undefined;\n  }\n\n  removeOriginalUri(state?: string): void {\n    // Remove from sessionStorage\n    const storage = browserStorage.getSessionStorage();\n    storage.removeItem(REFERRER_PATH_STORAGE_KEY);\n\n    // Also remove from shared storage\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      sharedStorage.removeItem && sharedStorage.removeItem(state);\n    }\n  }\n\n  isLoginRedirect(): boolean {\n    return isLoginRedirect(this);\n  }\n\n  async handleLoginRedirect(tokens?: Tokens, originalUri?: string): Promise<void> {\n    let state = this.options.state;\n\n    // Store tokens and update AuthState by the emitted events\n    if (tokens) {\n      this.tokenManager.setTokens(tokens);\n      originalUri = originalUri || this.getOriginalUri(this.options.state);\n    } else if (this.isLoginRedirect()) {\n      try {\n        // For redirect flow, get state from the URL and use it to retrieve the originalUri\n        const oAuthResponse = await parseOAuthResponseFromUrl(this, {});\n        state = oAuthResponse.state;\n        originalUri = originalUri || this.getOriginalUri(state);\n        await this.storeTokensFromRedirect();\n      } catch(e) {\n        // auth state should be updated\n        await this.authStateManager.updateAuthState();\n        throw e;\n      }\n    } else {\n      return; // nothing to do\n    }\n    \n    // ensure auth state has been updated\n    await this.authStateManager.updateAuthState();\n\n    // clear originalUri from storage\n    this.removeOriginalUri(state);\n\n    // Redirect to originalUri\n    const { restoreOriginalUri } = this.options;\n    if (restoreOriginalUri) {\n      await restoreOriginalUri(this, originalUri);\n    } else if (originalUri) {\n      window.location.replace(originalUri);\n    }\n  }\n\n  isPKCE(): boolean {\n    return !!this.options.pkce;\n  }\n\n  hasResponseType(responseType: OAuthResponseType): boolean {\n    let hasResponseType = false;\n    if (Array.isArray(this.options.responseType) && this.options.responseType.length) {\n      hasResponseType = this.options.responseType.indexOf(responseType) >= 0;\n    } else {\n      hasResponseType = this.options.responseType === responseType;\n    }\n    return hasResponseType;\n  }\n\n  isAuthorizationCodeFlow(): boolean {\n    return this.hasResponseType('code');\n  }\n\n  // { username, password, (relayState), (context) }\n  // signIn(opts: SignInWithCredentialsOptions): Promise<AuthTransaction> {\n  //   return postToTransaction(this, '/api/v1/authn', opts);\n  // }\n\n  getIssuerOrigin(): string {\n    // Infer the URL from the issuer URL, omitting the /oauth2/{authServerId}\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this.options.issuer!.split('/oauth2/')[0];\n  }\n\n  // { username, (relayState) }\n  forgotPassword(opts): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/password', opts);\n  }\n\n  // { username, (relayState) }\n  unlockAccount(opts: ForgotPasswordOptions): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/unlock', opts);\n  }\n\n  // { recoveryToken }\n  verifyRecoveryToken(opts: VerifyRecoveryTokenOptions): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/token', opts);\n  }\n\n  // Escape hatch method to make arbitrary OKTA API call\n  async invokeApiMethod(options: RequestOptions): Promise<unknown> {\n    if (!options.accessToken) {\n      const accessToken = (await this.tokenManager.getTokens()).accessToken as AccessToken;\n      options.accessToken = accessToken?.accessToken;\n    }\n    return httpRequest(this, options);\n  }\n}\n\n// Hoist feature detection functions to prototype & static type\nOktaAuth.features = OktaAuth.prototype.features = features;\n\n// Also hoist constants for CommonJS users\nObject.assign(OktaAuth, {\n  constants\n});\n\nexport default OktaAuth;"],"names":["CustomError","message","prototype","Error","AuthApiError","err","xhr","errorSummary","name","errorCode","errorLink","errorId","errorCauses","AuthPollStopError","AuthSdkError","msg","OAuthError","summary","error","error_description","isAuthApiError","obj","isOAuthError","a","str","atob","b","btoa","c","crypto","stringToBase64Url","b64","base64ToBase64Url","replace","base64UrlToBase64","b64u","base64UrlToString","length","utf8","decodeURIComponent","escape","e","stringToBuffer","buffer","Uint8Array","i","charCodeAt","base64UrlDecode","base64UrlToBuffer","from","bufferToBase64Url","bin","s","byte","String","fromCharCode","getOidcHash","TextEncoder","encode","webcrypto","subtle","digest","then","arrayBuffer","intBuffer","firstHalf","hash","apply","getNativeConsole","window","console","undefined","getConsole","nativeConsole","log","warn","group","groupEnd","text","deprecate","deprecateWrap","fn","arguments","isoToUTCString","parts","match","isoTime","Date","UTC","isoDate","toUTCString","genRandomString","randomCharset","random","cl","Math","floor","delay","ms","resolve","setTimeout","bind","ctx","additionalArgs","Array","call","args","extend","obj1","objArray","forEach","prop","Object","hasOwnProperty","removeNils","cleaned","value","clone","JSON","parse","omit","newobj","props","p","find","collection","searchParams","item","found","getLink","linkName","altName","_links","link","isString","toString","isObject","isNumber","isFunction","isPromise","finally","isAbsoluteUrl","url","test","toAbsoluteUrl","baseUrl","removeTrailingSlash","toRelativeUrl","substring","toQueryString","key","push","encodeURIComponent","join","path","trimmed","verifyToken","idToken","format","algo","extractable","usages","use","importKey","cryptoKey","jwt","split","payload","b64Signature","signature","verify","STATE_TOKEN_KEY_NAME","DEFAULT_POLLING_DELAY","DEFAULT_MAX_CLOCK_SKEW","DEFAULT_CACHE_DURATION","REDIRECT_OAUTH_PARAMS_NAME","REDIRECT_STATE_COOKIE_NAME","REDIRECT_NONCE_COOKIE_NAME","TOKEN_STORAGE_NAME","CACHE_STORAGE_NAME","PKCE_STORAGE_NAME","TRANSACTION_STORAGE_NAME","SHARED_TRANSACTION_STORAGE_NAME","ORIGINAL_URI_STORAGE_NAME","IDX_RESPONSE_STORAGE_NAME","ACCESS_TOKEN_STORAGE_KEY","ID_TOKEN_STORAGE_KEY","REFRESH_TOKEN_STORAGE_KEY","REFERRER_PATH_STORAGE_KEY","MIN_VERIFIER_LENGTH","MAX_VERIFIER_LENGTH","DEFAULT_CODE_CHALLENGE_METHOD","IDX_API_VERSION","setRequestHeader","authClient","headerName","headerValue","options","headers","httpRequest","sdk","method","saveAuthnState","accessToken","withCredentials","storageUtil","storage","httpCache","storageManager","getHttpCache","cookies","cacheResponse","cacheContents","getStorage","cachedResponse","now","expiresAt","response","oktaUserAgentHeader","_oktaUserAgent","getHttpHeader","ajaxOptions","data","res","httpRequestClient","resp","responseText","stateToken","delete","set","updateStorage","catch","serverErr","status","transformErrorXHR","get","getIssuerOrigin","getOptions","post","postOptions","addStateToken","builtArgs","getStateToken","transactionStatus","resumeTransaction","tx","exists","_get","reject","createTransaction","introspectAuthn","transactionStep","transactionExists","postToTransaction","getPollFn","ref","rememberDevice","autoPush","transactionCallBack","pollLink","pollFn","opts","href","isPolling","retryCount","recursivePoll","pollRes","factorResult","delayFn","delayLength","pow","AuthTransaction","interactionHandle","flattenEmbedded","cancel","link2fn","isArray","lk","hints","allow","factorType","provider","params","profile","updatePhone","links2fns","fns","type","poll","objArr","o","ol","embedded","_embedded","dec2hex","dec","substr","getRandomString","ceil","getRandomValues","generateVerifier","prefix","verifier","computeChallenge","sessionExists","session","getSession","refresh","user","closeSession","refreshSession","setCookieAndRedirect","sessionToken","redirectUrl","location","assign","checkAccountSetupComplete","token","convertTokenParamsToOAuthParams","tokenParams","clientId","responseType","oauthParams","codeChallenge","codeChallengeMethod","display","idp","idpScope","loginHint","maxAge","nonce","prompt","redirectUri","responseMode","state","mayBeArray","scopes","scope","buildAuthorizeParams","oauthQueryParams","extraParams","validateOptions","authorizationCode","interactionCode","codeVerifier","getPostData","code","clientSecret","postToTokenEndpoint","urls","tokenUrl","postRefreshToken","refreshToken","client_id","grant_type","refresh_token","getWellKnown","issuer","authServerUri","getKey","kid","wellKnown","jwksUri","cachedKey","clearStorage","addListener","eventTarget","addEventListener","attachEvent","removeListener","removeEventListener","detachEvent","loadFrame","src","iframe","document","createElement","style","body","appendChild","loadPopup","title","popupTitle","appearance","open","addPostMessageListener","timeout","responseHandler","timeoutId","msgReceivedOrTimeout","origin","clearTimeout","generateState","generateNonce","getIssuer","getOAuthBaseUrl","getOAuthDomain","domain","getOAuthUrls","authorizeUrl","userinfoUrl","logoutUrl","revokeUrl","isWindowsPhone","isBrowser","isIE11OrLess","documentMode","getUserAgent","navigator","userAgent","isFingerprintSupported","agent","isPopupPostMessageSupported","isIE8or9","postMessage","isTokenVerifySupported","hasTextEncoder","isPKCESupported","isHTTPS","protocol","isLocalhost","hostname","getDefaultTokenParams","pkce","ignoreSignature","defaultRedirectUri","isInteractionRequiredError","oauthError","isAuthorizationCodeError","authApiError","errorResponse","responseJSON","isRefreshTokenInvalidError","hasTokensInHash","hasAuthorizationCode","hashOrSearch","hasInteractionCode","hasErrorInUrl","isRedirectUri","uri","authParams","isCodeFlow","getHashOrSearch","codeFlow","useQuery","search","isLoginRedirect","hasCode","isInteractionRequired","createOAuthMeta","oauthMeta","pkceMeta","assertPKCESupport","features","errorMessage","validateCodeChallengeMethod","wellKnownResponse","methods","preparePKCE","PKCE","prepareTokenParams","defaults","isSameRefreshToken","isRefreshTokenError","urlParamsToObject","plus2space","paramSplit","fragment","charAt","param","exec","validateClaims","claims","validationParams","aud","iss","iat","exp","ignoreLifetime","maxClockSkew","isObjectWithProperties","isOAuthTransactionMeta","isPKCETransactionMeta","isIdxTransactionMeta","isCustomAuthTransactionMeta","isAllStringValues","isTransactionMeta","IdxStatus","AuthenticatorKey","IdxFeature","isAuthenticator","id","isToken","isAccessToken","isIDToken","isRefreshToken","validateToken","decodeToken","decodedToken","header","revokeToken","token_type_hint","creds","configuredIssuer","validationOptions","sdkCrypto","valid","at_hash","validateResponse","handleOAuthResponse","interaction_code","exchangeCodeForTokens","tokenDict","expiresIn","expires_in","tokenType","token_type","access_token","id_token","accessJwt","decode","Number","idJwt","idTokenObj","tokens","getToken","popupWindow","sessionTokenOverrides","idpOverrides","requestUrl","endpoint","flowType","iframePromise","iframeEl","contains","parentElement","removeChild","oauthPromise","popupPromise","closePoller","setInterval","closed","clearInterval","close","getWithoutPrompt","renewTokensWithRefresh","refreshTokenObject","renewTokenParams","tokenResponse","tokenManager","updateRefreshToken","removeRefreshToken","throwInvalidTokenError","getSingleToken","originalToken","renewToken","getTokensSync","renewTokens","getUserInfo","accessTokenObject","idTokenObject","getTokens","userInfo","sub","authenticateHeader","getResponseHeader","errorMatches","errorDescriptionMatches","errorDescription","getTokenOptions","handleResponseOptions","transactionManager","clear","getWithPopup","getWithRedirect","meta","save","oauth","_setLocation","removeHash","nativeHistory","parseFromUrl","_getHistory","nativeDoc","_getDocument","nativeLoc","_getLocation","replaceState","pathname","removeSearch","getResponseMode","defaultResponseMode","parseOAuthResponseFromUrl","paramStr","cleanOAuthResponseFromUrl","load","getEnrolledCredentials","authenticatorEnrollments","credentials","enrollement","credentialId","buildCredentialCreationOptions","activationData","publicKey","rp","displayName","challenge","pubKeyCredParams","attestation","authenticatorSelection","excludeCredentials","buildCredentialRequestOptions","challengeData","userVerification","allowCredentials","getAttestation","credential","clientData","clientDataJSON","attestationObject","getAssertion","authenticatorData","signatureData","getPKCEStorage","browserHasLocalStorage","getLocalStorage","testStorage","browserHasSessionStorage","getSessionStorage","testStorageType","storageType","supported","getStorageByType","storageProvider","getCookieStorage","getInMemoryStorage","findStorageType","types","curType","nextType","shift","localStorage","sessionStorage","secure","sameSite","sessionCookie","getItem","setItem","removeItem","useSeparateCookies","k","existingValues","storageKey","valueToStore","inMemoryStore","cookieOptions","expires","Cookies","remove","SdkClock","localOffset","DEFAULT_OPTIONS","autoRenew","autoRemove","syncStorage","clearPendingRemoveTokens","expireEarlySeconds","_storageEventDelay","EVENT_EXPIRED","EVENT_RENEWED","EVENT_ADDED","EVENT_REMOVED","EVENT_ERROR","defaultState","expireTimeouts","renewPromise","TokenManager","emitter","storageOptions","getTokenStorage","clock","create","on","off","setExpireEventTimeoutAll","clearExpireEventTimeoutAll","expireTime","getExpireTime","emit","freshToken","oldToken","newValue","oldValue","oldTokens","getTokensFromStorageValue","newTokens","newToken","emitAdded","emitRemoved","clearExpireEventTimeout","expireEventWait","max","expireEventTimeout","emitExpired","tokenStorage","setExpireEventTimeout","setStorage","getSync","accessTokenCb","idTokenCb","refreshTokenCb","handleTokenCallback","getTokenType","handleAdded","handleRenewed","emitRenewed","handleRemoved","existingTokens","getStorageKeyByType","existingToken","removedToken","renew","setTokens","tokenKey","emitError","pendingRemove","AutoRenewService","renewTimeQueue","onTokenExpiredHandler","firstTime","lastTime","shouldThrottleRenew","canStart","stop","started","SyncStorageService","storageListener","handleCrossTabsStorageChange","resetExpireEventTimeoutAll","emitEventsForCrossTabsStorageUpdate","syncTimeout","ServiceManager","defaultOptions","services","onLeaderDuplicate","onLeader","knownServices","svc","createService","startServices","elector","isLeader","hasLeader","some","srv","requiresLeadership","isLeaderRequired","startElector","stopElector","stopServices","isStarted","start","canUseLeaderElection","channel","broadcastChannelName","BroadcastChannel","createLeaderElection","onduplicate","awaitLeadership","die","service","PromiseQueue","quiet","queue","running","thisObject","run","queueItem","fingerprint","listener","promise","source","INITIAL_AUTH_STATE","DEFAULT_PENDING","updateAuthStatePromise","canceledTimes","EVENT_AUTH_STATE_CHANGE","MAX_PROMISE_CANCEL_TIMES","isSameAuthState","prevState","isAuthenticated","AuthStateManager","_sdk","_pending","_authState","_logOptions","_prevAuthState","_transformQueue","_setLogOptions","event","updateAuthState","transformAuthState","devMode","emitAuthStateChange","authState","finalPromise","origPromise","curPromise","getAuthState","cancelablePromise","PCancelable","_","onCancel","shouldReject","emitAndResolve","isCanceled","handler","SavedObject","storageName","storageString","logServerSideMemoryStorageWarning","StorageManager","storageManagerOptions","sectionName","overrideOptions","storageTypes","idx","getOptionsForSection","transactionStorage","getTransactionStorage","transaction","val","isRawIdxResponse","version","isIdxResponse","rawIdxState","MAX_ENTRY_LIFETIME","pruneSharedStorage","sharedStorage","getSharedTansactionStorage","entries","entry","age","dateCreated","saveTransactionToSharedStorage","loadTransactionFromSharedStorage","clearTransactionFromSharedStorage","TransactionManager","legacyWidgetSupport","saveNonceCookie","saveStateCookie","saveParamsCookie","enableSharedStorage","saveLastResponse","clearSharedStorage","clearIdxResponse","clearLegacyOAuthParams","clearLegacyPKCE","muteWarning","cookieStorage","loadLegacyOAuthParams","loadLegacyPKCE","getLegacyPKCEStorage","getLegacyOAuthParamsStorage","getIdxResponseStorage","storedValue","rawIdxResponse","stateHandle","assertValidConfig","isUrlRegex","RegExp","appJsonContentTypeRegex","readData","toLowerCase","json","formatResult","pair","result","fetchRequest","contentType","fetch","crossFetch","fetchPromise","ok","browserStorage","STORAGE_MANAGER_OPTIONS","cache","getCookieSettings","cookieSettings","getDefaultOptions","mergeOptions","buildOptions","postLogoutRedirectUri","useInteractionCodeFlow","restoreOriginalUri","flow","recoveryToken","activationToken","useGenericRemediator","createTransactionMeta","hasSavedInteractionHandle","savedMeta","getSavedTransactionMeta","isTransactionMetaValid","getTransactionMeta","validExistingMeta","saveTransactionMeta","clearTransactionMeta","keys","isTransactionMetaValidForOptions","isTransactionMetaValidForFlow","shouldValidateFlow","mismatch","getResponse","interact","redirect_uri","code_challenge","code_challenge_method","activation_token","recovery_token","client_secret","max_age","interaction_handle","newMeta","isFieldMutable","field","mutable","divideSingleActionParamsByMutability","action","defaultParamsForAction","neededParamsForAction","immutableParamsForAction","divideActionParamsByMutability","actionList","neededParams","defaultParams","immutableParams","generateDirectFetch","actionDefinition","toPersist","target","accepts","makeIdxResponse","wwwAuthHeader","idxResponse","stepUp","generateIdxAction","generator","generateRemediationFunctions","remediationValue","remediation","SKIP_FIELDS","parseNonRemediations","actions","context","fieldIsObject","rel","_a","fieldValue","info","subField","expandRelatesTo","query","JSONPath","innerValue","convertRemediationAction","remediationActions","actionFn","parseIdxResponse","remediationData","remediations","makeIdxState","requestDidSucceed","neededToProceed","proceed","remediationChoice","paramsFromUser","remediationChoiceObject","findCode","successWithInteractionCode","parsersForVersion","v1","validateVersionConfig","cleanVersion","introspect","savedIdxResponse","loadIdxResponse","Accept","getAllValues","idxRemediation","r","getRequiredValues","required","cur","titleCase","toUpperCase","getAuthenticatorFromRemediation","formatAuthenticator","incoming","authenticator","compareAuthenticators","auth1","auth2","findMatchedOption","authenticators","option","relatesTo","Remediator","values","formatAuthenticators","hasAuthenticatorInList","existing","authenticatorsData","acc","needed","hasData","allValues","getData","_authClient","_context","getName","inputs","getInputs","getAuthenticator","inputsFromRemediation","inputFromRemediation","input","visible","messages","alias","aliases","inputsFromRemediator","authenticatorFromRemediation","form","enrollmentId","Authenticator","VerificationCodeAuthenticator","verificationCode","otp","passcode","idxRemediationValue","OktaVerifyTotp","totp","OktaPassword","password","SecurityQuestionEnrollment","questionKey","answer","question","label","SecurityQuestionVerification","contextualData","enrolledQuestion","WebauthnEnrollment","WebauthnVerification","OKTA_PASSWORD","SECURITY_QUESTION","OKTA_VERIFY","WEBAUTHN","VerifyAuthenticator","nextStep","canVerify","mapCredentials","trimmedValues","valueKey","EnrollAuthenticator","EnrollPoll","startPolling","step","common","currentAuthenticator","SelectEnrollmentChannel","Boolean","getChannels","EnrollmentChannelData","email","phoneNumber","ChallengeAuthenticator","ChallengePoll","ResetAuthenticator","EnrollProfile","userProfileFromValues","userProfile","userProfileFromRemediation","canRemediate","curr","profileAttributes","attributeNames","attributeValues","attributeName","errorRemediation","errors","Identify","identifier","ReEnrollAuthenticator","newPassword","challengeType","RedirectIdp","SelectAuthenticator","matchedOption","selectedAuthenticator","selectedOption","SelectAuthenticatorAuthenticate","isRecoveryFlow","hasPasswordInOptions","SelectAuthenticatorEnroll","SelectAuthenticatorUnlockAccount","authenticatorMap","methodTypeOption","methodTypeValue","methodType","SelectEnrollProfile","AuthenticatorData","formatAuthenticatorData","getAuthenticatorData","mapAuthenticatorDataFromValues","getMethodTypes","AuthenticatorVerificationData","shouldProceedWithEmailAuthenticator","AuthenticatorEnrollmentData","Skip","skip","unwrapFormValue","_Object$entries2","formKeys","unwrappedForm","hasValidInputValue","requiredTracker","isRequired","optionSchema","idSchema","GenericRemediator","produces","rest","isTerminalResponse","canSkipFn","canResendFn","actionName","getMessagesFromIdxRemediationValue","messagesFromForm","optionValues","messagesFromOptions","getMessagesFromResponse","globalMessages","fieldMessages","seen","filtered","i18n","getEnabledFeatures","PASSWORD_RECOVERY","REGISTRATION","SOCIAL_IDP","ACCOUNT_UNLOCK","getAvailableSteps","remediatorMap","remediators","map","remediatorClass","remediationName","T","getRemediatorClass","remediator","getNextStep","filterValuesForRemediation","valuesForRemediation","getRemediator","idxRemediations","remediatorCandidates","isRemeditionInFlow","canSkip","canResend","handleIdxError","terminal","getActionFromValues","resend","removeActionFromValues","removeActionFromOptions","remediate","actionFromValues","actionFromOptions","valuesWithoutExecutedAction","optionsWithoutExecutedAction","canceled","remediationAction","getValuesAfterProceed","gr","AuthenticationFlow","PasswordRecoveryFlow","RegistrationFlow","AccountUnlockFlow","getFlowSpecification","oktaAuth","initializeValues","knownOptions","initializeData","PENDING","getFlow","setFlow","flowSpec","getDataFromIntrospect","interactResponse","getDataFromRemediate","autoRemediate","shouldRemediate","idxResponseFromRemediation","finalizeData","shouldSaveResponse","shouldClearTransaction","enabledFeatures","availableSteps","TERMINAL","hasActions","hasErrors","class","isTerminalSuccess","CANCELED","SUCCESS","handleError","FAILURE","saveIdxResponse","authenticate","EmailVerifyCallbackError","isEmailVerifyCallbackError","isEmailVerifyCallback","urlPath","parseEmailVerifyCallback","handleEmailVerifyCallback","canProceed","availablePollingRemeditaions","startTransaction","register","recoverPassword","handleInteractionCodeRedirect","savedState","unlockAccount","OktaUserAgent","environments","env","maybeAddNodeEnvironment","process","versions","node","OktaAuth","resume","handleLogin","_tokenQueue","useQueue","getWithRedirectFn","getWithRedirectApi","parseFromUrlFn","parseFromUrlApi","history","revoke","toWrap","boundStartTransaction","http","Emitter","authStateManager","serviceManager","signInWithCredentials","_postToTransaction","sendFingerprint","originalUri","additionalParams","setOriginalUri","accessTokenKey","refreshTokenKey","idTokenHint","logoutUri","defaultUri","currentUri","revokeAccessToken","revokeRefreshToken","getSignOutRedirectUrl","reload","clearTokensBeforeRedirect","addPendingRemoveFlags","shouldRenew","onExpiredToken","shouldRemove","hasExpired","getOriginalUriStorage","getOriginalUri","oAuthResponse","storeTokensFromRedirect","removeOriginalUri","hasResponseType","webauthn","constants"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAYqBA;;;AACnB,uBAAYC,OAAZ;;;AAEE,8BAAMA,OAAN;AACA,0DAA4B,0DAAWC,SAAvC;;AACD;;oBALsCC;;;;ICGpBC;;;AAQnB,wBAAYC,GAAZ,EAA2BC,GAA3B;;;AACE,QAAML,OAAO,GAAGI,GAAG,CAACE,YAApB;AACA,8BAAMN,OAAN;AAEA,UAAKO,IAAL,GAAY,cAAZ;AACA,UAAKD,YAAL,GAAoBF,GAAG,CAACE,YAAxB;AACA,UAAKE,SAAL,GAAiBJ,GAAG,CAACI,SAArB;AACA,UAAKC,SAAL,GAAiBL,GAAG,CAACK,SAArB;AACA,UAAKC,OAAL,GAAeN,GAAG,CAACM,OAAnB;AACA,UAAKC,WAAL,GAAmBP,GAAG,CAACO,WAAvB;AAEA,QAAIN,GAAJ,EAAS;AACP,YAAKA,GAAL,GAAWA,GAAX;AACD;;AACF;;EAtBuCN;;;;ICDrBa;;;AACnB;;AACE,QAAMZ,OAAO,GAAG,iCAAhB;6BACMA;AACP;;EAJ4CD;;;;ICC1Bc;;;AAQnB,wBAAYC,GAAZ,EAAyBT,GAAzB;;;AACE,8BAAMS,GAAN;AACA,UAAKP,IAAL,GAAY,cAAZ;AACA,UAAKC,SAAL,GAAiB,UAAjB;AACA,UAAKF,YAAL,GAAoBQ,GAApB;AACA,UAAKL,SAAL,GAAiB,UAAjB;AACA,UAAKC,OAAL,GAAe,UAAf;AACA,UAAKC,WAAL,GAAmB,EAAnB;AACA,QAAIN,GAAJ,EAAS;AACP,YAAKA,GAAL,GAAWA,GAAX;AACD;;AACF;;EAnBuCN;;;;ICArBgB;;;AAQnB,sBAAYP,SAAZ,EAA+BQ,OAA/B;;;AACE,8BAAMA,OAAN;AAEA,UAAKT,IAAL,GAAY,YAAZ;AACA,UAAKC,SAAL,GAAiBA,SAAjB;AACA,UAAKF,YAAL,GAAoBU,OAApB;AAGA,UAAKC,KAAL,GAAaT,SAAb;AACA,UAAKU,iBAAL,GAAyBF,OAAzB;;AACD;;EAlBqCjB;;ACGxC,SAASoB,cAAT,CAAwBC,GAAxB;AACE,SAAQA,GAAG,YAAYjB,YAAvB;AACD;AAED,SAASkB,YAAT,CAAsBD,GAAtB;AACE,SAAQA,GAAG,YAAYL,UAAvB;AACD;;ACVD,IAAMO,CAAC,GAAG,SAAJA,CAAI,CAASC,GAAT;AAAgB,SAAOC,IAAI,CAACD,GAAD,CAAX;AAAmB,CAA7C;AACA,IAAME,CAAC,GAAG,SAAJA,CAAI,CAAUF,GAAV;AAAiB,SAAOG,IAAI,CAACH,GAAD,CAAX;AAAmB,CAA9C;AACA,IAAMI,CAAC,GAAG,OAAOC,MAAP,KAAkB,WAAlB,GAAgC,IAAhC,GAAuCA,MAAjD;;SCAgBC,kBAAkBN;AAChC,MAAIO,GAAG,GAAGJ,CAAI,CAACH,GAAD,CAAd;AACA,SAAOQ,iBAAiB,CAACD,GAAD,CAAxB;AACD;SAGeC,kBAAkBD;AAChC,SAAOA,GAAG,CAACE,OAAJ,CAAY,KAAZ,EAAmB,GAAnB,EAAwBA,OAAxB,CAAgC,KAAhC,EAAuC,GAAvC,EAA4CA,OAA5C,CAAoD,KAApD,EAA2D,EAA3D,CAAP;AACD;SAGeC,kBAAkBC;AAChC,SAAOA,IAAI,CAACF,OAAL,CAAa,IAAb,EAAmB,GAAnB,EAAwBA,OAAxB,CAAgC,IAAhC,EAAsC,GAAtC,CAAP;AACD;SAEeG,kBAAkBD;AAChC,MAAIJ,GAAG,GAAGG,iBAAiB,CAACC,IAAD,CAA3B;AACA,UAAQJ,GAAG,CAACM,MAAJ,GAAa,CAArB;AACE,SAAK,CAAL;AACE;AACF,SAAK,CAAL;AACEN,MAAAA,GAAG,IAAI,IAAP;AACA;AACF,SAAK,CAAL;AACEA,MAAAA,GAAG,IAAI,GAAP;AACA;AACF;AACE,YAAM,IAAIjB,YAAJ,CAAiB,uBAAjB,CAAN;AAVJ;AAYA,MAAIwB,IAAI,GAAGb,CAAI,CAACM,GAAD,CAAf;AACA,MAAI;AACF,WAAOQ,kBAAkB,CAACC,MAAM,CAACF,IAAD,CAAP,CAAzB;AACD,GAFD,CAEE,OAAOG,CAAP,EAAU;AACV,WAAOH,IAAP;AACD;AACF;SAEeI,eAAelB;AAC7B,MAAImB,MAAM,GAAG,IAAIC,UAAJ,CAAepB,GAAG,CAACa,MAAnB,CAAb;AACA,OAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGrB,GAAG,CAACa,MAAxB,EAAgCQ,CAAC,EAAjC,EAAqC;AACnCF,IAAAA,MAAM,CAACE,CAAD,CAAN,GAAYrB,GAAG,CAACsB,UAAJ,CAAeD,CAAf,CAAZ;AACD;AACD,SAAOF,MAAP;AACD;SAEeI,gBAAgBvB;AAC9B,SAAOC,CAAI,CAACS,iBAAiB,CAACV,GAAD,CAAlB,CAAX;AACD;SAGewB,kBAAkBb;AAChC,SAAOS,UAAU,CAACK,IAAX,CAAgBF,eAAe,CAACZ,IAAD,CAA/B,EAAuC,UAACP,CAAD;AAAA,WAAeA,CAAC,CAACkB,UAAF,CAAa,CAAb,CAAf;AAAA,GAAvC,CAAP;AACD;SAGeI,kBAAkBC;;AAChC,SAAOxB,CAAI,CAAC,uCAAIiB,UAAJ,CAAeO,GAAf,kBAA2B,UAACC,CAAD,EAAIC,IAAJ;AAAA,WAAaD,CAAC,GAAGE,MAAM,CAACC,YAAP,CAAoBF,IAApB,CAAjB;AAAA,GAA3B,EAAuE,EAAvE,CAAD,CAAX;AACD;;SCzDeG,YAAYhC;AAC1B,MAAImB,MAAM,GAAG,IAAIc,WAAJ,GAAkBC,MAAlB,CAAyBlC,GAAzB,CAAb;AACA,SAAOmC,CAAS,CAACC,MAAV,CAAiBC,MAAjB,CAAwB,SAAxB,EAAmClB,MAAnC,EAA2CmB,IAA3C,CAAgD,UAASC,WAAT;AACrD,QAAIC,SAAS,GAAG,IAAIpB,UAAJ,CAAemB,WAAf,CAAhB;AACA,QAAIE,SAAS,GAAG,uBAAAD,SAAS,MAAT,CAAAA,SAAS,EAAO,CAAP,EAAU,EAAV,CAAzB;AACA,QAAIE,IAAI,GAAGZ,MAAM,CAACC,YAAP,CAAoBY,KAApB,CAA0B,IAA1B,EAAgCF,SAAhC,CAAX;AACA,QAAI9B,IAAI,GAAGL,iBAAiB,CAACoC,IAAD,CAA5B;AACA,WAAO/B,IAAP;AACD,GANM,CAAP;AAOD;;SCZeiC;AACd,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjC,WAAOA,MAAM,CAACC,OAAd;AACD,GAFD,MAEO,IAAI,OAAOA,OAAP,KAAmB,WAAvB,EAAoC;AACzC,WAAOA,OAAP;AACD,GAFM,MAEA;AACL,WAAOC,SAAP;AACD;AACF;SAEeC;AACd,MAAIC,aAAa,GAAGL,gBAAgB,EAApC;AACA,MAAIK,aAAa,IAAIA,aAAa,CAACC,GAAnC,EAAwC;AACtC,WAAOD,aAAP;AACD;AACD,SAAO;AACLC,IAAAA,GAAG,EAAE,iBADA;AAELC,IAAAA,IAAI,EAAE,kBAFD;AAGLC,IAAAA,KAAK,EAAE,mBAHF;AAILC,IAAAA,QAAQ,EAAE;AAJL,GAAP;AAMD;SAEeF,KAAKG;AAEnBN,EAAAA,UAAU,GAAGG,IAAb,CAAkB,2BAA2BG,IAA7C;AAED;SAEeC,UAAUD;AAExBN,EAAAA,UAAU,GAAGG,IAAb,CAAkB,kCAAkCG,IAApD;AAED;SAEeE,cAAcF,MAAMG;AAClC,SAAO;AACLF,IAAAA,SAAS,CAACD,IAAD,CAAT;AACA,WAAOG,EAAE,CAACd,KAAH,CAAS,IAAT,EAAee,SAAf,CAAP;AACD,GAHD;AAID;;SCzCeC,eAAe3D;AAC7B,MAAI4D,KAAK,GAAG5D,GAAG,CAAC6D,KAAJ,CAAU,MAAV,CAAZ;AAAA,MACIC,OAAO,GAAGC,IAAI,CAACC,GAAL,CAASJ,KAAK,CAAC,CAAD,CAAd,EAAmBA,KAAK,CAAC,CAAD,CAAL,GAAW,CAA9B,EAAiCA,KAAK,CAAC,CAAD,CAAtC,EAA2CA,KAAK,CAAC,CAAD,CAAhD,EAAqDA,KAAK,CAAC,CAAD,CAA1D,EAA+DA,KAAK,CAAC,CAAD,CAApE,CADd;AAAA,MAEIK,OAAO,GAAG,IAAIF,IAAJ,CAASD,OAAT,CAFd;AAIA,SAAOG,OAAO,CAACC,WAAR,EAAP;AACD;SAEeC,gBAAgBtD;AAC9B,MAAIuD,aAAa,GAAG,+DAApB;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,OAAK,IAAIjE,CAAC,GAAG,CAAR,EAAWkE,EAAE,GAAGF,aAAa,CAACvD,MAAnC,EAA2CT,CAAC,GAAGS,MAA/C,EAAuD,EAAET,CAAzD,EAA4D;AAC1DiE,IAAAA,MAAM,IAAID,aAAa,CAACG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACF,MAAL,KAAgBC,EAA3B,CAAD,CAAvB;AACD;AACD,SAAOD,MAAP;AACD;SAEeI,MAAMC;AACpB,SAAO,aAAY,UAASC,OAAT;AACjBC,IAAAA,UAAU,CAACD,OAAD,EAAUD,EAAV,CAAV;AACD,GAFM,CAAP;AAGD;;SCrBeG,KAAKpB,IAAIqB;AACvB,MAAIC,cAAc,GAAG,uBAAAC,KAAK,CAACtG,SAAN,EAAsBuG,IAAtB,CAA2BvB,SAA3B,EAAsC,CAAtC,CAArB;AACA,SAAO;AACL,QAAIwB,IAAI,GAAG,uBAAAF,KAAK,CAACtG,SAAN,EAAsBuG,IAAtB,CAA2BvB,SAA3B,CAAX;AACAwB,IAAAA,IAAI,GAAG,wBAAAH,cAAc,MAAd,CAAAA,cAAc,EAAQG,IAAR,CAArB;AACA,WAAOzB,EAAE,CAACd,KAAH,CAASmC,GAAT,EAAcI,IAAd,CAAP;AACD,GAJD;AAKD;SAGeC;AAEd,MAAIC,IAAI,GAAG1B,SAAS,CAAC,CAAD,CAApB;AAEA,MAAI2B,QAAQ,GAAG,2BAASJ,IAAT,CAAcvB,SAAd,EAAyB,CAAzB,CAAf;AACA2B,EAAAA,QAAQ,CAACC,OAAT,CAAiB,UAASzF,GAAT;AACf,SAAK,IAAI0F,IAAT,IAAiB1F,GAAjB,EAAsB;AAEpB,UAAI2F,MAAM,CAAC9G,SAAP,CAAiB+G,cAAjB,CAAgCR,IAAhC,CAAqCpF,GAArC,EAA0C0F,IAA1C,KAAmD1F,GAAG,CAAC0F,IAAD,CAAH,KAAcxC,SAArE,EAAgF;AAC9EqC,QAAAA,IAAI,CAACG,IAAD,CAAJ,GAAa1F,GAAG,CAAC0F,IAAD,CAAhB;AACD;AACF;AACF,GAPD;AAQA,SAAOH,IAAP;AACD;SAEeM,WAAW7F;AACzB,MAAI8F,OAAO,GAAG,EAAd;AACA,OAAK,IAAIJ,IAAT,IAAiB1F,GAAjB,EAAsB;AACpB,QAAI2F,MAAM,CAAC9G,SAAP,CAAiB+G,cAAjB,CAAgCR,IAAhC,CAAqCpF,GAArC,EAA0C0F,IAA1C,CAAJ,EAAqD;AACnD,UAAIK,KAAK,GAAG/F,GAAG,CAAC0F,IAAD,CAAf;AACA,UAAIK,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK7C,SAAhC,EAA2C;AACzC4C,QAAAA,OAAO,CAACJ,IAAD,CAAP,GAAgBK,KAAhB;AACD;AACF;AACF;AACD,SAAOD,OAAP;AACD;SAEeE,MAAMhG;AACpB,MAAIA,GAAJ,EAAS;AACP,QAAIG,GAAG,GAAG,gBAAeH,GAAf,CAAV;AACA,QAAIG,GAAJ,EAAS;AACP,aAAO8F,IAAI,CAACC,KAAL,CAAW/F,GAAX,CAAP;AACD;AACF;AACD,SAAOH,GAAP;AACD;SAGemG,KAAKnG;AAEnB,MAAIoG,MAAM,GAAG,EAAb;oCAF2BC;AAAAA,IAAAA;;AAG3B,OAAK,IAAIC,CAAT,IAActG,GAAd,EAAmB;AACjB,QAAI2F,MAAM,CAAC9G,SAAP,CAAiB+G,cAAjB,CAAgCR,IAAhC,CAAqCpF,GAArC,EAA0CsG,CAA1C,KAAgD,yBAAAD,KAAK,MAAL,CAAAA,KAAK,EAASC,CAAT,CAAL,IAAoB,CAAC,CAAzE,EAA4E;AAC1EF,MAAAA,MAAM,CAACE,CAAD,CAAN,GAAYtG,GAAG,CAACsG,CAAD,CAAf;AACD;AACF;AACD,SAAON,KAAK,CAACI,MAAD,CAAZ;AACD;SAEeG,KAAKC,YAAYC;AAC/B,MAAIlG,CAAC,GAAGiG,UAAU,CAACxF,MAAnB;AACA,SAAOT,CAAC,EAAR,EAAY;AACV,QAAImG,IAAI,GAAGF,UAAU,CAACjG,CAAD,CAArB;AACA,QAAIoG,KAAK,GAAG,IAAZ;AACA,SAAK,IAAIjB,IAAT,IAAiBe,YAAjB,EAA+B;AAC7B,UAAI,CAACd,MAAM,CAAC9G,SAAP,CAAiB+G,cAAjB,CAAgCR,IAAhC,CAAqCqB,YAArC,EAAmDf,IAAnD,CAAL,EAA+D;AAC7D;AACD;AACD,UAAIgB,IAAI,CAAChB,IAAD,CAAJ,KAAee,YAAY,CAACf,IAAD,CAA/B,EAAuC;AACrCiB,QAAAA,KAAK,GAAG,KAAR;AACA;AACD;AACF;AACD,QAAIA,KAAJ,EAAW;AACT,aAAOD,IAAP;AACD;AACF;AACF;SAEeE,QAAQ5G,KAAK6G,UAAUC;AACrC,MAAI,CAAC9G,GAAD,IAAQ,CAACA,GAAG,CAAC+G,MAAjB,EAAyB;AACvB;AACD;AAED,MAAIC,IAAI,GAAGhB,KAAK,CAAChG,GAAG,CAAC+G,MAAJ,CAAWF,QAAX,CAAD,CAAhB;AAGA,MAAIG,IAAI,IAAIA,IAAI,CAAC7H,IAAb,IAAqB2H,OAAzB,EAAkC;AAChC,QAAIE,IAAI,CAAC7H,IAAL,KAAc2H,OAAlB,EAA2B;AACzB,aAAOE,IAAP;AACD;AACF,GAJD,MAIO;AACL,WAAOA,IAAP;AACD;AACF;;SChGeC,SAASjH;AACvB,SAAO2F,MAAM,CAAC9G,SAAP,CAAiBqI,QAAjB,CAA0B9B,IAA1B,CAA+BpF,GAA/B,MAAwC,iBAA/C;AACD;SAEemH,SAASnH;AACvB,SAAO2F,MAAM,CAAC9G,SAAP,CAAiBqI,QAAjB,CAA0B9B,IAA1B,CAA+BpF,GAA/B,MAAwC,iBAA/C;AACD;SAEeoH,SAASpH;AACvB,SAAO2F,MAAM,CAAC9G,SAAP,CAAiBqI,QAAjB,CAA0B9B,IAA1B,CAA+BpF,GAA/B,MAAwC,iBAA/C;AACD;SAEeqH,WAAWzD;AACzB,SAAO,CAAC,CAACA,EAAF,IAAQ,GAAGsD,QAAH,CAAY9B,IAAZ,CAAiBxB,EAAjB,MAAyB,mBAAxC;AACD;SAEe0D,UAAUtH;AACxB,SAAOA,GAAG,IAAIA,GAAG,CAACuH,OAAX,IAAuB,OAAOvH,GAAG,CAACuH,OAAX,KAAuB,UAArD;AACD;;SClBeC,cAAcC;AAC5B,SAAO,qBAAqBC,IAArB,CAA0BD,GAA1B,CAAP;AACD;SAEeE;;MAAcF,0EAAM;MAAIG;AACtC,MAAIJ,aAAa,CAACC,GAAD,CAAjB,EAAwB;AACtB,WAAOA,GAAP;AACD;AACDG,EAAAA,OAAO,GAAGC,mBAAmB,CAACD,OAAD,CAA7B;AACA,SAAOH,GAAG,CAAC,CAAD,CAAH,KAAW,GAAX,gDAAoBG,OAApB,kBAA8BH,GAA9B,kDAAyCG,OAAzC,wBAAoDH,GAApD,CAAP;AACD;SAEeK;MAAcL,0EAAM;MAAIG;AACtC,MAAIJ,aAAa,CAACC,GAAD,CAAjB,EAAwB;AACtBA,IAAAA,GAAG,GAAGA,GAAG,CAACM,SAAJ,CAAcH,OAAO,CAAC5G,MAAtB,CAAN;AACD;AAED,SAAOyG,GAAG,CAAC,CAAD,CAAH,KAAW,GAAX,GAAiBA,GAAjB,cAA2BA,GAA3B,CAAP;AACD;SAEeO,cAAchI;AAC5B,MAAIG,GAAG,GAAG,EAAV;AACA,MAAIH,GAAG,KAAK,IAAZ,EAAkB;AAChB,SAAK,IAAIiI,GAAT,IAAgBjI,GAAhB,EAAqB;AACnB,UAAI2F,MAAM,CAAC9G,SAAP,CAAiB+G,cAAjB,CAAgCR,IAAhC,CAAqCpF,GAArC,EAA0CiI,GAA1C,KACAjI,GAAG,CAACiI,GAAD,CAAH,KAAa/E,SADb,IAEAlD,GAAG,CAACiI,GAAD,CAAH,KAAa,IAFjB,EAEuB;AACrB9H,QAAAA,GAAG,CAAC+H,IAAJ,CAASD,GAAG,GAAG,GAAN,GAAYE,kBAAkB,CAACnI,GAAG,CAACiI,GAAD,CAAJ,CAAvC;AACD;AACF;AACF;AACD,MAAI9H,GAAG,CAACa,MAAR,EAAgB;AACd,WAAO,MAAMb,GAAG,CAACiI,IAAJ,CAAS,GAAT,CAAb;AACD,GAFD,MAEO;AACL,WAAO,EAAP;AACD;AACF;SAEeP,oBAAoBQ;AAClC,MAAI,CAACA,IAAL,EAAW;AACT;AACD;AAED,MAAIC,OAAO,GAAGD,IAAI,CAACzH,OAAL,CAAa,aAAb,EAA2B,EAA3B,CAAd;AAEA0H,EAAAA,OAAO,GAAGA,OAAO,CAAC1H,OAAR,CAAgB,MAAhB,EAAwB,EAAxB,CAAV;AAEA,SAAO0H,OAAP;AACD;;SC5CeC,cAAYC,SAASP;AACnCA,EAAAA,GAAG,GAAGjC,KAAK,CAACiC,GAAD,CAAX;AAEA,MAAIQ,MAAM,GAAG,KAAb;AACA,MAAIC,IAAI,GAAG;AACTvJ,IAAAA,IAAI,EAAE,mBADG;AAET0D,IAAAA,IAAI,EAAE;AAAE1D,MAAAA,IAAI,EAAE;AAAR;AAFG,GAAX;AAIA,MAAIwJ,WAAW,GAAG,IAAlB;AACA,MAAIC,MAAM,GAAG,CAAC,QAAD,CAAb;AAKA,SAAOX,GAAG,CAACY,GAAX;AAIA,SAAOvG,CAAS,CAACC,MAAV,CAAiBuG,SAAjB,CACLL,MADK,EAELR,GAFK,EAGLS,IAHK,EAILC,WAJK,EAKLC,MALK,EAONnG,IAPM,CAOD,UAASsG,SAAT;AACJ,QAAIC,GAAG,GAAGR,OAAO,CAACS,KAAR,CAAc,GAAd,CAAV;AACA,QAAIC,OAAO,GAAG7H,cAAc,CAAC2H,GAAG,CAAC,CAAD,CAAH,GAAS,GAAT,GAAeA,GAAG,CAAC,CAAD,CAAnB,CAA5B;AACA,QAAIG,YAAY,GAAGzH,eAAe,CAACsH,GAAG,CAAC,CAAD,CAAJ,CAAlC;AACA,QAAII,SAAS,GAAG/H,cAAc,CAAC8H,YAAD,CAA9B;AAEA,WAAO7G,CAAS,CAACC,MAAV,CAAiB8G,MAAjB,CACLX,IADK,EAELK,SAFK,EAGLK,SAHK,EAILF,OAJK,CAAP;AAMD,GAnBM,CAAP;AAoBD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IC1CYI,oBAAoB,GAAG;IACvBC,qBAAqB,GAAG;IACxBC,sBAAsB,GAAG;IACzBC,sBAAsB,GAAG;IACzBC,0BAA0B,GAAG;IAC7BC,0BAA0B,GAAG;IAC7BC,0BAA0B,GAAG;IAC7BC,kBAAkB,GAAG;IACrBC,kBAAkB,GAAG;IACrBC,iBAAiB,GAAG;IACpBC,wBAAwB,GAAG;IAC3BC,+BAA+B,GAAG;IAClCC,yBAAyB,GAAG;IAC5BC,yBAAyB,GAAG;IAC5BC,wBAAwB,GAAG;IAC3BC,oBAAoB,GAAI;IACxBC,yBAAyB,GAAI;IAC7BC,yBAAyB,GAAG;IAI5BC,mBAAmB,GAAG;IACtBC,mBAAmB,GAAG;IACtBC,6BAA6B,GAAG;IAEhCC,eAAe,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;SCvBfC,iBAAiBC,YAA+BC,YAAYC;AAC1EF,EAAAA,UAAU,CAACG,OAAX,CAAmBC,OAAnB,GAA6BJ,UAAU,CAACG,OAAX,CAAmBC,OAAnB,IAA8B,EAA3D;AACAJ,EAAAA,UAAU,CAACG,OAAX,CAAmBC,OAAnB,CAA2BH,UAA3B,IAAyCC,WAAzC;AACD;;SCQeG,YAAYC,KAA4BH;AACtDA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,MAAIvD,GAAG,GAAGuD,OAAO,CAACvD,GAAlB;AAAA,MACI2D,MAAM,GAAGJ,OAAO,CAACI,MADrB;AAAA,MAEI/F,IAAI,GAAG2F,OAAO,CAAC3F,IAFnB;AAAA,MAGIgG,cAAc,GAAGL,OAAO,CAACK,cAH7B;AAAA,MAIIC,WAAW,GAAGN,OAAO,CAACM,WAJ1B;AAAA,MAKIC,eAAe,GAAGP,OAAO,CAACO,eAAR,KAA4B,IALlD;AAMIC,EAAAA,WAAW,GAAGL,GAAG,CAACH,OAAJ,CAAYQ,WAN9B;AAAA,MAOIC,OAAO,GAAGD,WAAY,CAACC,OAP3B;AAAA,MAQIC,SAAS,GAAGP,GAAG,CAACQ,cAAJ,CAAmBC,YAAnB,CAAgCT,GAAG,CAACH,OAAJ,CAAYa,OAA5C,CARhB;AAUA,MAAIb,OAAO,CAACc,aAAZ,EAA2B;AACzB,QAAIC,aAAa,GAAGL,SAAS,CAACM,UAAV,EAApB;AACA,QAAIC,cAAc,GAAGF,aAAa,CAACtE,GAAD,CAAlC;AACA,QAAIwE,cAAc,IAAI/H,IAAI,CAACgI,GAAL,KAAW,IAAX,GAAkBD,cAAc,CAACE,SAAvD,EAAkE;AAChE,aAAO,SAAQrH,OAAR,CAAgBmH,cAAc,CAACG,QAA/B,CAAP;AACD;AACF;AAED,MAAIC,mBAAmB,GAAGlB,GAAG,CAACmB,cAAJ,CAAmBC,aAAnB,EAA1B;AACA,MAAItB,OAAO;AACT,cAAU;AACV,oBAAgB;KACboB,oBAHL;AAKA,iBAAcpB,OAAd,EAAuBE,GAAG,CAACH,OAAJ,CAAYC,OAAnC,EAA4CD,OAAO,CAACC,OAApD;AACAA,EAAAA,OAAO,GAAGpF,UAAU,CAACoF,OAAD,CAApB;AAEA,MAAIK,WAAW,IAAIrE,QAAQ,CAACqE,WAAD,CAA3B,EAA0C;AACxCL,IAAAA,OAAO,CAAC,eAAD,CAAP,GAA2B,YAAYK,WAAvC;AACD;AAED,MAAIkB,WAAW,GAAiB;AAC9BvB,IAAAA,OAAO,EAAPA,OAD8B;AAE9BwB,IAAAA,IAAI,EAAEpH,IAAI,IAAInC,SAFgB;AAG9BqI,IAAAA,eAAe,EAAfA;AAH8B,GAAhC;AAMA,MAAIvM,GAAJ,EAAS0N,GAAT;AACA,SAAOvB,GAAG,CAACH,OAAJ,CAAY2B,iBAAZ,CAA+BvB,MAA/B,EAAwC3D,GAAxC,EAA8C+E,WAA9C,EACJ/J,IADI,CACC,UAASmK,IAAT;AACJF,IAAAA,GAAG,GAAGE,IAAI,CAACC,YAAX;AACA,QAAIH,GAAG,IAAIzF,QAAQ,CAACyF,GAAD,CAAnB,EAA0B;AACxBA,MAAAA,GAAG,GAAGzG,IAAI,CAACC,KAAL,CAAWwG,GAAX,CAAN;AACA,UAAIA,GAAG,IAAI,QAAOA,GAAP,MAAe,QAAtB,IAAkC,CAACA,GAAG,CAACzB,OAA3C,EAAoD;AAClDyB,QAAAA,GAAG,CAACzB,OAAJ,GAAc2B,IAAI,CAAC3B,OAAnB;AACD;AACF;AAED,QAAII,cAAJ,EAAoB;AAClB,UAAI,CAACqB,GAAG,CAACI,UAAT,EAAqB;AACnBrB,QAAAA,OAAO,CAACsB,MAAR,CAAezD,oBAAf;AACD;AACF;AAED,QAAIoD,GAAG,IAAIA,GAAG,CAACI,UAAX,IAAyBJ,GAAG,CAACP,SAAjC,EAA4C;AAC1CV,MAAAA,OAAO,CAACuB,GAAR,CAAY1D,oBAAZ,EAAkCoD,GAAG,CAACI,UAAtC,EAAkDJ,GAAG,CAACP,SAAtD,EAAiEhB,GAAG,CAACH,OAAJ,CAAYa,OAA7E;AACD;AAED,QAAIa,GAAG,IAAI1B,OAAO,CAACc,aAAnB,EAAkC;AAChCJ,MAAAA,SAAS,CAACuB,aAAV,CAAwBxF,GAAxB,EAA8B;AAC5B0E,QAAAA,SAAS,EAAEzH,IAAI,CAACC,KAAL,CAAWT,IAAI,CAACgI,GAAL,KAAW,IAAtB,IAA8BzC,sBADb;AAE5B2C,QAAAA,QAAQ,EAAEM;AAFkB,OAA9B;AAID;AAED,WAAOA,GAAP;AACD,GA5BI,EA6BJQ,KA7BI,CA6BE,UAASN,IAAT;AACL,QAAIO,SAAS,GAAGP,IAAI,CAACC,YAAL,IAAqB,EAArC;AACA,QAAI5F,QAAQ,CAACkG,SAAD,CAAZ,EAAyB;AACvB,UAAI;AACFA,QAAAA,SAAS,GAAGlH,IAAI,CAACC,KAAL,CAAWiH,SAAX,CAAZ;AACD,OAFD,CAEE,OAAO/L,CAAP,EAAU;AACV+L,QAAAA,SAAS,GAAG;AACVjO,UAAAA,YAAY,EAAE;AADJ,SAAZ;AAGD;AACF;AAED,QAAI0N,IAAI,CAACQ,MAAL,IAAe,GAAnB,EAAwB;AACtBD,MAAAA,SAAS,CAACjO,YAAV,GAAyB,eAAzB;AACD;AAED,QAAIiM,GAAG,CAACH,OAAJ,CAAYqC,iBAAhB,EAAmC;AACjCT,MAAAA,IAAI,GAAGzB,GAAG,CAACH,OAAJ,CAAYqC,iBAAZ,CAA8BrH,KAAK,CAAC4G,IAAD,CAAnC,CAAP;AACD;AAED,QAAIO,SAAS,CAACtN,KAAV,IAAmBsN,SAAS,CAACrN,iBAAjC,EAAoD;AAClDd,MAAAA,GAAG,GAAG,IAAIW,UAAJ,CAAewN,SAAS,CAACtN,KAAzB,EAAgCsN,SAAS,CAACrN,iBAA1C,CAAN;AACD,KAFD,MAEO;AACLd,MAAAA,GAAG,GAAG,IAAID,YAAJ,CAAiBoO,SAAjB,EAA4BP,IAA5B,CAAN;AACD;AAED,QAAI5N,GAAG,CAACI,SAAJ,KAAkB,UAAtB,EAAkC;AAChCqM,MAAAA,OAAO,CAACsB,MAAR,CAAezD,oBAAf;AACD;AAED,UAAMtK,GAAN;AACD,GA5DI,CAAP;AA6DD;SAEesO,IAAInC,KAA4B1D,KAAauD;AAC3DvD,EAAAA,GAAG,GAAGD,aAAa,CAACC,GAAD,CAAb,GAAqBA,GAArB,GAA2B0D,GAAG,CAACoC,eAAJ,KAAwB9F,GAAzD;AACA,MAAI+F,UAAU,GAAG;AACf/F,IAAAA,GAAG,EAAEA,GADU;AAEf2D,IAAAA,MAAM,EAAE;AAFO,GAAjB;AAIA,iBAAcoC,UAAd,EAA0BxC,OAA1B;AACA,SAAOE,WAAW,CAACC,GAAD,EAAMqC,UAAN,CAAlB;AACD;SAEeC,KAAKtC,KAA4B1D,KAAapC,MAAoB2F;AAChFvD,EAAAA,GAAG,GAAGD,aAAa,CAACC,GAAD,CAAb,GAAqBA,GAArB,GAA2B0D,GAAG,CAACoC,eAAJ,KAAwB9F,GAAzD;AACA,MAAIiG,WAAW,GAAG;AAChBjG,IAAAA,GAAG,EAAEA,GADW;AAEhB2D,IAAAA,MAAM,EAAE,MAFQ;AAGhB/F,IAAAA,IAAI,EAAEA,IAHU;AAIhBgG,IAAAA,cAAc,EAAE;AAJA,GAAlB;AAMA,iBAAcqC,WAAd,EAA2B1C,OAA3B;AACA,SAAOE,WAAW,CAACC,GAAD,EAAMuC,WAAN,CAAlB;AACD;;SCpIeC,cAAcjB,KAAK1B;AACjC,MAAI4C,SAAS,GAAG,EAAhB;AACA,iBAAcA,SAAd,EAAyB5C,OAAzB;AAGA,MAAI,CAAC4C,SAAS,CAACd,UAAX,IAAyBJ,GAAG,CAACI,UAAjC,EAA6C;AAC3Cc,IAAAA,SAAS,CAACd,UAAV,GAAuBJ,GAAG,CAACI,UAA3B;AACD;AAED,SAAOc,SAAP;AACD;SAEeC,cAAcnB;AAC5B,SAAOiB,aAAa,CAACjB,GAAD,CAApB;AACD;;SCXeoB,kBAAkB3C,KAAK9F;AACrCA,EAAAA,IAAI,GAAGsI,aAAa,CAACxC,GAAD,EAAM9F,IAAN,CAApB;AACA,SAAOoI,IAAI,CAACtC,GAAD,EAAMA,GAAG,CAACoC,eAAJ,KAAwB,eAA9B,EAA+ClI,IAA/C,EAAqD;AAAEkG,IAAAA,eAAe,EAAE;AAAnB,GAArD,CAAX;AACD;SAEewC,kBAAkB5C,KAAK9F;AACrC,MAAI,CAACA,IAAD,IAAS,CAACA,IAAI,CAACyH,UAAnB,EAA+B;AAC7B,QAAIA,UAAU,GAAG3B,GAAG,CAAC6C,EAAJ,CAAOC,MAAP,CAAcC,IAAd,CAAmB5E,oBAAnB,CAAjB;AACA,QAAIwD,UAAJ,EAAgB;AACdzH,MAAAA,IAAI,GAAG;AACLyH,QAAAA,UAAU,EAAEA;AADP,OAAP;AAGD,KAJD,MAIO;AACL,aAAO,SAAQqB,MAAR,CAAe,IAAI1O,YAAJ,CAAiB,0BAAjB,CAAf,CAAP;AACD;AACF;AACD,SAAO0L,GAAG,CAAC6C,EAAJ,CAAOZ,MAAP,CAAc/H,IAAd,EACJ5C,IADI,CACC,UAASiK,GAAT;AACJ,WAAOvB,GAAG,CAAC6C,EAAJ,CAAOI,iBAAP,CAAyB1B,GAAzB,CAAP;AACD,GAHI,CAAP;AAID;SAEe2B,gBAAiBlD,KAAK9F;AACpC,MAAI,CAACA,IAAD,IAAS,CAACA,IAAI,CAACyH,UAAnB,EAA+B;AAC7B,QAAIA,UAAU,GAAG3B,GAAG,CAAC6C,EAAJ,CAAOC,MAAP,CAAcC,IAAd,CAAmB5E,oBAAnB,CAAjB;AACA,QAAIwD,UAAJ,EAAgB;AACdzH,MAAAA,IAAI,GAAG;AACLyH,QAAAA,UAAU,EAAEA;AADP,OAAP;AAGD,KAJD,MAIO;AACL,aAAO,SAAQqB,MAAR,CAAe,IAAI1O,YAAJ,CAAiB,4BAAjB,CAAf,CAAP;AACD;AACF;AACD,SAAO6O,eAAe,CAACnD,GAAD,EAAM9F,IAAN,CAAf,CACJ5C,IADI,CACC,UAAUiK,GAAV;AACJ,WAAOvB,GAAG,CAAC6C,EAAJ,CAAOI,iBAAP,CAAyB1B,GAAzB,CAAP;AACD,GAHI,CAAP;AAID;SAEe4B,gBAAgBnD,KAAK9F;AACnCA,EAAAA,IAAI,GAAGsI,aAAa,CAACxC,GAAD,EAAM9F,IAAN,CAApB;AAEA,SAAOoI,IAAI,CAACtC,GAAD,EAAMA,GAAG,CAACoC,eAAJ,KAAwB,0BAA9B,EAA0DlI,IAA1D,EAAgE;AAAEkG,IAAAA,eAAe,EAAE;AAAnB,GAAhE,CAAX;AACD;SAEegD,kBAAkBpD;AAEhC,SAAO,CAAC,CAACA,GAAG,CAAC6C,EAAJ,CAAOC,MAAP,CAAcC,IAAd,CAAmB5E,oBAAnB,CAAT;AACD;SAEekF,kBAAkBrD,KAAK1D,KAAKpC,MAAM2F;AAChDA,EAAAA,OAAO,GAAG,eAAc;AAAEO,IAAAA,eAAe,EAAE;AAAnB,GAAd,EAAyCP,OAAzC,CAAV;AACA,SAAOyC,IAAI,CAACtC,GAAD,EAAM1D,GAAN,EAAWpC,IAAX,EAAiB2F,OAAjB,CAAJ,CACJvI,IADI,CACC,UAASiK,GAAT;AACJ,WAAOvB,GAAG,CAAC6C,EAAJ,CAAOI,iBAAP,CAAyB1B,GAAzB,CAAP;AACD,GAHI,CAAP;AAID;;SC/Ce+B,UAAUtD,KAAKuB,KAAuBgC;AACpD,SAAO,UAAU1D,OAAV;AACL,QAAIpG,OAAJ;AACA,QAAI+J,cAAJ;AACA,QAAIC,QAAJ;AACA,QAAIC,mBAAJ;AAEA,QAAIzH,QAAQ,CAAC4D,OAAD,CAAZ,EAAuB;AACrBpG,MAAAA,OAAK,GAAGoG,OAAR;AACD,KAFD,MAEO,IAAI7D,QAAQ,CAAC6D,OAAD,CAAZ,EAAuB;AAC5BA,MAAAA,OAAO,GAAGA,OAAV;AACApG,MAAAA,OAAK,GAAGoG,OAAO,CAACpG,KAAhB;AACA+J,MAAAA,cAAc,GAAG3D,OAAO,CAAC2D,cAAzB;AACAC,MAAAA,QAAQ,GAAG5D,OAAO,CAAC4D,QAAnB;AACAC,MAAAA,mBAAmB,GAAG7D,OAAO,CAAC6D,mBAA9B;AACD;AAED,QAAI,CAACjK,OAAD,IAAUA,OAAK,KAAK,CAAxB,EAA2B;AACzBA,MAAAA,OAAK,GAAG2E,qBAAR;AACD;AAGD,QAAIuF,QAAQ,GAAGlI,OAAO,CAAC8F,GAAD,EAAM,MAAN,EAAc,MAAd,CAAtB;AAEA,aAASqC,MAAT;AACE,UAAIC,IAAI,GAAG,EAAX;AACA,UAAI,OAAOJ,QAAP,KAAoB,UAAxB,EAAoC;AAClC,YAAI;AACFI,UAAAA,IAAI,CAACJ,QAAL,GAAgB,CAAC,CAACA,QAAQ,EAA1B;AACD,SAFD,CAGA,OAAOxN,CAAP,EAAU;AACR,iBAAO,SAAQ+M,MAAR,CAAe,IAAI1O,YAAJ,CAAiB,gCAAjB,CAAf,CAAP;AACD;AACF,OAPD,MAQK,IAAImP,QAAQ,KAAK1L,SAAb,IAA0B0L,QAAQ,KAAK,IAA3C,EAAiD;AACpDI,QAAAA,IAAI,CAACJ,QAAL,GAAgB,CAAC,CAACA,QAAlB;AACD;AACD,UAAI,OAAOD,cAAP,KAA0B,UAA9B,EAA0C;AACxC,YAAI;AACFK,UAAAA,IAAI,CAACL,cAAL,GAAsB,CAAC,CAACA,cAAc,EAAtC;AACD,SAFD,CAGA,OAAOvN,CAAP,EAAU;AACR,iBAAO,SAAQ+M,MAAR,CAAe,IAAI1O,YAAJ,CAAiB,sCAAjB,CAAf,CAAP;AACD;AACF,OAPD,MAQK,IAAIkP,cAAc,KAAKzL,SAAnB,IAAgCyL,cAAc,KAAK,IAAvD,EAA6D;AAChEK,QAAAA,IAAI,CAACL,cAAL,GAAsB,CAAC,CAACA,cAAxB;AACD;AAED,UAAIM,IAAI,GAAGH,QAAQ,CAACG,IAAT,GAAgBjH,aAAa,CAACgH,IAAD,CAAxC;AACA,aAAOvB,IAAI,CAACtC,GAAD,EAAM8D,IAAN,EAAYpB,aAAa,CAACnB,GAAD,CAAzB,EAAgC;AACzCrB,QAAAA,cAAc,EAAE,KADyB;AAEzCE,QAAAA,eAAe,EAAE;AAFwB,OAAhC,CAAX;AAID;AAEDmD,IAAAA,GAAG,CAACQ,SAAJ,GAAgB,IAAhB;AAEA,QAAIC,UAAU,GAAG,CAAjB;AACA,QAAIC,aAAa,GAAG,SAAhBA,aAAgB;AAElB,UAAI,CAACV,GAAG,CAACQ,SAAT,EAAoB;AAClB,eAAO,SAAQf,MAAR,CAAe,IAAI3O,iBAAJ,EAAf,CAAP;AACD;AACD,aAAOuP,MAAM,GACVtM,IADI,CACC,UAAU4M,OAAV;AAEJF,QAAAA,UAAU,GAAG,CAAb;AAGA,YAAIE,OAAO,CAACC,YAAR,IAAwBD,OAAO,CAACC,YAAR,KAAyB,SAArD,EAAgE;AAG9D,cAAI,CAACZ,GAAG,CAACQ,SAAT,EAAoB;AAClB,kBAAM,IAAI1P,iBAAJ,EAAN;AACD;AAED,cAAI,OAAOqP,mBAAP,KAA+B,UAAnC,EAA+C;AAC7CA,YAAAA,mBAAmB,CAACQ,OAAD,CAAnB;AACD,WAT6D;AAY9D,iBAAOE,KAAO,CAAC3K,OAAD,CAAP,CAAenC,IAAf,CAAoB2M,aAApB,CAAP;AAED,SAdD,MAcO;AAGLV,UAAAA,GAAG,CAACQ,SAAJ,GAAgB,KAAhB;AACA,iBAAO/D,GAAG,CAAC6C,EAAJ,CAAOI,iBAAP,CAAyBiB,OAAzB,CAAP;AACD;AACF,OA1BI,EA2BJnC,KA3BI,CA2BE,UAASlO,GAAT;AAEL,YAAIA,GAAG,CAACC,GAAJ,KACCD,GAAG,CAACC,GAAJ,CAAQmO,MAAR,KAAmB,CAAnB,IAAwBpO,GAAG,CAACC,GAAJ,CAAQmO,MAAR,KAAmB,GAD5C,KAEA+B,UAAU,IAAI,CAFlB,EAEqB;AACnB,cAAIK,WAAW,GAAG9K,IAAI,CAAC+K,GAAL,CAAS,CAAT,EAAYN,UAAZ,IAA0B,IAA5C;AACAA,UAAAA,UAAU;AACV,iBAAOI,KAAO,CAACC,WAAD,CAAP,CACJ/M,IADI,CACC2M,aADD,CAAP;AAED;AACD,cAAMpQ,GAAN;AACD,OAtCI,CAAP;AAuCD,KA5CD;AA6CA,WAAOoQ,aAAa,GACjBlC,KADI,CACE,UAASlO,GAAT;AACL0P,MAAAA,GAAG,CAACQ,SAAJ,GAAgB,KAAhB;AACA,YAAMlQ,GAAN;AACD,KAJI,CAAP;AAKD,GA5GD;AA6GD;;ICrFY0Q,eAAb,GA0BE,yBAAYvE,GAAZ;MAAiBuB,0EAA+B;;AAC9C,OAAKD,IAAL,GAAYvJ,SAAZ;AACA,OAAKkK,MAAL,GAAclK,SAAd;AACA,MAAIwJ,GAAJ,EAAS;AACP,SAAKD,IAAL,GAAYC,GAAZ;AAEA,QAAI,KAAKD,IAAL,CAAUkD,iBAAd,EAAiC;AAC/B,WAAKvC,MAAL,GAAcV,GAAG,CAACU,MAAlB;AACA;AACD,KANM;AASP,mBAAc,IAAd,EAAoBwC,eAAe,CAACzE,GAAD,EAAMuB,GAAN,EAAWA,GAAX,EAAgB,EAAhB,CAAnC;AACA,WAAO,KAAKI,UAAZ,CAVO;AAgBP,QAAIJ,GAAG,CAACU,MAAJ,KAAe,oBAAf,IAAuC,CAACV,GAAG,CAAC3F,MAAhD,EAAwD;AACtD,WAAK8I,MAAL,GAAc;AACZ,eAAO,SAAQ/K,OAAR,CAAgBqG,GAAG,CAAC6C,EAAJ,CAAOI,iBAAP,EAAhB,CAAP;AACD,OAFD;AAGD;AACF;AACF;AAGH,SAAS0B,OAAT,CAAiB3E,GAAjB,EAAsBuB,GAAtB,EAA2B1M,GAA3B,EAAgCgH,IAAhC,EAAsC0H,GAAtC;AACE,MAAIvJ,KAAK,CAAC4K,OAAN,CAAc/I,IAAd,CAAJ,EAAyB;AACvB,WAAO,UAAS7H,IAAT,EAAe6P,IAAf;AACL,UAAI,CAAC7P,IAAL,EAAW;AACT,cAAM,IAAIM,YAAJ,CAAiB,0BAAjB,CAAN;AACD;AAED,UAAIuQ,EAAE,GAAGzJ,IAAI,CAACS,IAAD,EAAO;AAAC7H,QAAAA,IAAI,EAAEA;AAAP,OAAP,CAAb;AACA,UAAI,CAAC6Q,EAAL,EAAS;AACP,cAAM,IAAIvQ,YAAJ,CAAiB,6BAAjB,CAAN;AACD;AAED,aAAOqQ,OAAO,CAAC3E,GAAD,EAAMuB,GAAN,EAAW1M,GAAX,EAAgBgQ,EAAhB,EAAoBtB,GAApB,CAAP,CAAgCM,IAAhC,CAAP;AACD,KAXD;AAaD,GAdD,MAcO,IAAIhI,IAAI,CAACiJ,KAAL,IACPjJ,IAAI,CAACiJ,KAAL,CAAWC,KADJ,IAEPlJ,IAAI,CAACiJ,KAAL,CAAWC,KAAX,CAAiBlP,MAAjB,KAA4B,CAFzB,EAE4B;AACjC,QAAIoK,MAAM,GAAGpE,IAAI,CAACiJ,KAAL,CAAWC,KAAX,CAAiB,CAAjB,CAAb;AACA,YAAQ9E,MAAR;AAEE,WAAK,KAAL;AACE,eAAO;AACL,iBAAOkC,GAAG,CAACnC,GAAD,EAAMnE,IAAI,CAACiI,IAAX,EAAiB;AAAE1D,YAAAA,eAAe,EAAE;AAAnB,WAAjB,CAAV;AACD,SAFD;AAIF,WAAK,MAAL;AAEE,eAAO,UAASyD,IAAT;AACL,cAAIN,GAAG,IAAIA,GAAG,CAACQ,SAAf,EAA0B;AACxBR,YAAAA,GAAG,CAACQ,SAAJ,GAAgB,KAAhB;AACD;AAED,cAAIzC,IAAI,GAAGkB,aAAa,CAACjB,GAAD,EAAMsC,IAAN,CAAxB;AAEA,cAAItC,GAAG,CAACU,MAAJ,KAAe,YAAf,IAA+BV,GAAG,CAACU,MAAJ,KAAe,eAAlD,EAAmE;AAEjE,2BAAcX,IAAd,EAAoB;AAClB0D,cAAAA,UAAU,EAAEnQ,GAAG,CAACmQ,UADE;AAElBC,cAAAA,QAAQ,EAAEpQ,GAAG,CAACoQ;AAFI,aAApB;AAID;AAED,cAAIC,MAAM,GAAG,EAAb;AACA,cAAIzB,QAAQ,GAAGnC,IAAI,CAACmC,QAApB;AACA,cAAIA,QAAQ,KAAK1L,SAAjB,EAA4B;AAC1B,gBAAI,OAAO0L,QAAP,KAAoB,UAAxB,EAAoC;AAClC,kBAAI;AACFyB,gBAAAA,MAAM,CAACzB,QAAP,GAAkB,CAAC,CAACA,QAAQ,EAA5B;AACD,eAFD,CAGA,OAAOxN,CAAP,EAAU;AACR,uBAAO,SAAQ+M,MAAR,CAAe,IAAI1O,YAAJ,CAAiB,gCAAjB,CAAf,CAAP;AACD;AACF,aAPD,MAQK,IAAImP,QAAQ,KAAK,IAAjB,EAAuB;AAC1ByB,cAAAA,MAAM,CAACzB,QAAP,GAAkB,CAAC,CAACA,QAApB;AACD;AACDnC,YAAAA,IAAI,GAAGtG,IAAI,CAACsG,IAAD,EAAO,UAAP,CAAX;AACD;AAED,cAAIkC,cAAc,GAAGlC,IAAI,CAACkC,cAA1B;AACA,cAAIA,cAAc,KAAKzL,SAAvB,EAAkC;AAChC,gBAAI,OAAOyL,cAAP,KAA0B,UAA9B,EAA0C;AACxC,kBAAI;AACF0B,gBAAAA,MAAM,CAAC1B,cAAP,GAAwB,CAAC,CAACA,cAAc,EAAxC;AACD,eAFD,CAGA,OAAOvN,CAAP,EAAU;AACR,uBAAO,SAAQ+M,MAAR,CAAe,IAAI1O,YAAJ,CAAiB,sCAAjB,CAAf,CAAP;AACD;AACF,aAPD,MAQK,IAAIkP,cAAc,KAAK,IAAvB,EAA6B;AAChC0B,cAAAA,MAAM,CAAC1B,cAAP,GAAwB,CAAC,CAACA,cAA1B;AACD;AACDlC,YAAAA,IAAI,GAAGtG,IAAI,CAACsG,IAAD,EAAO,gBAAP,CAAX;AAED,WAdD,MAcO,IAAIA,IAAI,CAAC6D,OAAL,IACD7D,IAAI,CAAC6D,OAAL,CAAaC,WAAb,KAA6BrN,SADhC,EAC2C;AAChD,gBAAIuJ,IAAI,CAAC6D,OAAL,CAAaC,WAAjB,EAA8B;AAC5BF,cAAAA,MAAM,CAACE,WAAP,GAAqB,IAArB;AACD;AACD9D,YAAAA,IAAI,CAAC6D,OAAL,GAAenK,IAAI,CAACsG,IAAI,CAAC6D,OAAN,EAAe,aAAf,CAAnB;AACD;AACD,cAAIrB,IAAI,GAAGjI,IAAI,CAACiI,IAAL,GAAYjH,aAAa,CAACqI,MAAD,CAApC;AACA,iBAAO7B,iBAAiB,CAACrD,GAAD,EAAM8D,IAAN,EAAYxC,IAAZ,CAAxB;AACD,SAxDD;AATJ;AAmED;AACF;AAED,SAAS+D,SAAT,CAAmBrF,GAAnB,EAAwBuB,GAAxB,EAA6B1M,GAA7B,EAAkC0O,GAAlC;AACE,MAAI+B,GAAG,GAAG,EAAV;AACA,OAAK,IAAI5J,QAAT,IAAqB7G,GAAG,CAAC+G,MAAzB,EAAiC;AAC/B,QAAI,CAACpB,MAAM,CAAC9G,SAAP,CAAiB+G,cAAjB,CAAgCR,IAAhC,CAAqCpF,GAAG,CAAC+G,MAAzC,EAAiDF,QAAjD,CAAL,EAAiE;AAC/D;AACD;AAED,QAAIG,IAAI,GAAGhH,GAAG,CAAC+G,MAAJ,CAAWF,QAAX,CAAX;AAEA,QAAIA,QAAQ,KAAK,MAAjB,EAAyB;AACvBA,MAAAA,QAAQ,GAAGG,IAAI,CAAC7H,IAAhB;AACD;AAED,QAAI6H,IAAI,CAAC0J,IAAT,EAAe;AACbD,MAAAA,GAAG,CAAC5J,QAAD,CAAH,GAAgBG,IAAhB;AACA;AACD;AAED,YAAQH,QAAR;AAGE,WAAK,MAAL;AACE4J,QAAAA,GAAG,CAACE,IAAJ,GAAWlC,SAAS,CAACtD,GAAD,EAAMuB,GAAN,EAAWgC,GAAX,CAApB;AACA;AAEF;AACE,YAAI9K,EAAE,GAAGkM,OAAO,CAAC3E,GAAD,EAAMuB,GAAN,EAAW1M,GAAX,EAAgBgH,IAAhB,EAAsB0H,GAAtB,CAAhB;AACA,YAAI9K,EAAJ,EAAQ;AACN6M,UAAAA,GAAG,CAAC5J,QAAD,CAAH,GAAgBjD,EAAhB;AACD;AAXL;AAaD;AACD,SAAO6M,GAAP;AACD;AAGD,SAASb,eAAT,CAAyBzE,GAAzB,EAA8BuB,GAA9B,EAAmC1M,GAAnC,EAAwC0O,GAAxC;AACE1O,EAAAA,GAAG,GAAGA,GAAG,IAAI0M,GAAb;AACA1M,EAAAA,GAAG,GAAGgG,KAAK,CAAChG,GAAD,CAAX;AAEA,MAAImF,KAAK,CAAC4K,OAAN,CAAc/P,GAAd,CAAJ,EAAwB;AACtB,QAAI4Q,MAAM,GAAG,EAAb;AACA,SAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAG9Q,GAAG,CAACgB,MAAzB,EAAiC6P,CAAC,GAAGC,EAArC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5CD,MAAAA,MAAM,CAAC1I,IAAP,CAAY0H,eAAe,CAACzE,GAAD,EAAMuB,GAAN,EAAW1M,GAAG,CAAC6Q,CAAD,CAAd,EAAmBnC,GAAnB,CAA3B;AACD;AACD,WAAOkC,MAAP;AACD;AAED,MAAIG,QAAQ,GAAG/Q,GAAG,CAACgR,SAAJ,IAAiB,EAAhC;AAEA,OAAK,IAAI/I,GAAT,IAAgB8I,QAAhB,EAA0B;AACxB,QAAI,CAACpL,MAAM,CAAC9G,SAAP,CAAiB+G,cAAjB,CAAgCR,IAAhC,CAAqC2L,QAArC,EAA+C9I,GAA/C,CAAL,EAA0D;AACxD;AACD,KAHuB;AAMxB,QAAId,QAAQ,CAAC4J,QAAQ,CAAC9I,GAAD,CAAT,CAAR,IAA2B9C,KAAK,CAAC4K,OAAN,CAAcgB,QAAQ,CAAC9I,GAAD,CAAtB,CAA/B,EAA6D;AAC3D8I,MAAAA,QAAQ,CAAC9I,GAAD,CAAR,GAAgB2H,eAAe,CAACzE,GAAD,EAAMuB,GAAN,EAAWqE,QAAQ,CAAC9I,GAAD,CAAnB,EAA0ByG,GAA1B,CAA/B;AACD;AACF;AAGD,MAAI+B,GAAG,GAAGD,SAAS,CAACrF,GAAD,EAAMuB,GAAN,EAAW1M,GAAX,EAAgB0O,GAAhB,CAAnB;AACA,iBAAcqC,QAAd,EAAwBN,GAAxB;AAEAzQ,EAAAA,GAAG,GAAGmG,IAAI,CAACnG,GAAD,EAAM,WAAN,EAAmB,QAAnB,CAAV;AACA,iBAAcA,GAAd,EAAmB+Q,QAAnB;AACA,SAAO/Q,GAAP;AACD;;ACvPD,SAASiR,OAAT,CAAkBC,GAAlB;AACE,SAAO,CAAC,MAAMA,GAAG,CAAChK,QAAJ,CAAa,EAAb,CAAP,EAAyBiK,MAAzB,CAAgC,CAAC,CAAjC,CAAP;AACD;AAED,SAASC,eAAT,CAAyBpQ,MAAzB;AACE,MAAId,CAAC,GAAG,IAAIqB,UAAJ,CAAemD,IAAI,CAAC2M,IAAL,CAAUrQ,MAAM,GAAG,CAAnB,CAAf,CAAR;AACAsB,EAAAA,CAAS,CAACgP,eAAV,CAA0BpR,CAA1B;AACA,MAAIC,GAAG,GAAG,YAAWD,CAAX,EAAc+Q,OAAd,EAAuB7I,IAAvB,CAA4B,EAA5B,CAAV;AACA,SAAO,uBAAAjI,GAAG,MAAH,CAAAA,GAAG,EAAO,CAAP,EAAUa,MAAV,CAAV;AACD;AAED,SAASuQ,gBAAT,CAA0BC,MAA1B;;AACE,MAAIC,QAAQ,GAAGD,MAAM,IAAI,EAAzB;AACA,MAAIC,QAAQ,CAACzQ,MAAT,GAAkBwJ,mBAAtB,EAA2C;AACzCiH,IAAAA,QAAQ,GAAGA,QAAQ,GAAGL,eAAe,CAAC5G,mBAAmB,GAAGiH,QAAQ,CAACzQ,MAAhC,CAArC;AACD;AACD,SAAO,kCAAAmH,kBAAkB,CAACsJ,QAAD,CAAlB,iBAAmC,CAAnC,EAAsChH,mBAAtC,CAAP;AACD;AAED,SAASiH,gBAAT,CAA0BvR,GAA1B;AACE,MAAImB,MAAM,GAAG,IAAIc,WAAJ,GAAkBC,MAAlB,CAAyBlC,GAAzB,CAAb;AACA,SAAOmC,CAAS,CAACC,MAAV,CAAiBC,MAAjB,CAAwB,SAAxB,EAAmClB,MAAnC,EAA2CmB,IAA3C,CAAgD,UAASC,WAAT;AACrD,QAAIG,IAAI,GAAGZ,MAAM,CAACC,YAAP,CAAoBY,KAApB,CAA0B,IAA1B,EAAgC,IAAIvB,UAAJ,CAAemB,WAAf,CAAhC,CAAX;AACA,QAAI5B,IAAI,GAAGL,iBAAiB,CAACoC,IAAD,CAA5B;AACA,WAAO/B,IAAP;AACD,GAJM,CAAP;AAKD;AAED,WAAe;AACb4J,EAAAA,6BAA6B,EAA7BA,6BADa;AAEb6G,EAAAA,gBAAgB,EAAhBA,gBAFa;AAGbG,EAAAA,gBAAgB,EAAhBA;AAHa,CAAf;;AC7BA,SAASC,aAAT,CAAuBxG,GAAvB;AACE,SAAOA,GAAG,CAACyG,OAAJ,CAAYtE,GAAZ,GACJ7K,IADI,CACC,UAASiK,GAAT;AACJ,QAAIA,GAAG,CAACU,MAAJ,KAAe,QAAnB,EAA6B;AAC3B,aAAO,IAAP;AACD;AACD,WAAO,KAAP;AACD,GANI,EAOJF,KAPI,CAOE;AACL,WAAO,KAAP;AACD,GATI,CAAP;AAUD;AAED,SAAS2E,UAAT,CAAoB1G,GAApB;AACE,SAAOmC,GAAG,CAACnC,GAAD,EAAM,qBAAN,EAA6B;AAAEI,IAAAA,eAAe,EAAE;AAAnB,GAA7B,CAAH,CACN9I,IADM,CACD,UAASmP,OAAT;AACJ,QAAIlF,GAAG,GAAGvG,IAAI,CAACyL,OAAD,EAAU,QAAV,CAAd;AAEAlF,IAAAA,GAAG,CAACoF,OAAJ,GAAc;AACZ,aAAOrE,IAAI,CAACtC,GAAD,EAAMvE,OAAO,CAACgL,OAAD,EAAU,SAAV,CAAP,CAA4B3C,IAAlC,EAAwC,EAAxC,EAA4C;AAAE1D,QAAAA,eAAe,EAAE;AAAnB,OAA5C,CAAX;AACD,KAFD;AAIAmB,IAAAA,GAAG,CAACqF,IAAJ,GAAW;AACT,aAAOzE,GAAG,CAACnC,GAAD,EAAMvE,OAAO,CAACgL,OAAD,EAAU,MAAV,CAAP,CAAyB3C,IAA/B,EAAqC;AAAE1D,QAAAA,eAAe,EAAE;AAAnB,OAArC,CAAV;AACD,KAFD;AAIA,WAAOmB,GAAP;AACD,GAbM,EAcNQ,KAdM,CAcA;AAEL,WAAO;AAACE,MAAAA,MAAM,EAAE;AAAT,KAAP;AACD,GAjBM,CAAP;AAkBD;AAED,SAAS4E,YAAT,CAAsB7G,GAAtB;AACE,SAAOD,WAAW,CAACC,GAAD,EAAM;AACtB1D,IAAAA,GAAG,EAAE0D,GAAG,CAACoC,eAAJ,KAAwB,qBADP;AAEtBnC,IAAAA,MAAM,EAAE,QAFc;AAGtBG,IAAAA,eAAe,EAAE;AAHK,GAAN,CAAlB;AAKD;AAED,SAAS0G,cAAT,CAAwB9G,GAAxB;AACE,SAAOsC,IAAI,CAACtC,GAAD,EAAM,uCAAN,EAA+C,EAA/C,EAAmD;AAAEI,IAAAA,eAAe,EAAE;AAAnB,GAAnD,CAAX;AACD;AAED,SAAS2G,oBAAT,CAA8B/G,GAA9B,EAAmCgH,YAAnC,EAAiDC,WAAjD;AACEA,EAAAA,WAAW,GAAGA,WAAW,IAAIpP,MAAM,CAACqP,QAAP,CAAgBpD,IAA7C;AACAjM,EAAAA,MAAM,CAACqP,QAAP,CAAgBC,MAAhB,CAAuBnH,GAAG,CAACoC,eAAJ,KAAwB,8BAAxB,GACrBvF,aAAa,CAAC;AACZuK,IAAAA,yBAAyB,EAAE,IADf;AAEZC,IAAAA,KAAK,EAAEL,YAFK;AAGZC,IAAAA,WAAW,EAAEA;AAHD,GAAD,CADf;AAMD;;SCpDeK,gCAAgCC;;AAE9C,MAAI,CAACA,WAAW,CAACC,QAAjB,EAA2B;AACzB,UAAM,IAAIlT,YAAJ,CAAiB,yEAAjB,CAAN;AACD;AAED,MAAIwH,QAAQ,CAACyL,WAAW,CAACE,YAAb,CAAR,IAAsC,oCAAAF,WAAW,CAACE,YAAZ,iBAAiC,GAAjC,MAA0C,CAAC,CAArF,EAAwF;AACtF,UAAM,IAAInT,YAAJ,CAAiB,0DAAjB,CAAN;AACD;AAGD,MAAIoT,WAAW,GAAgB;AAC7B,iBAAaH,WAAW,CAACC,QADI;AAE7B,sBAAkBD,WAAW,CAACI,aAFD;AAG7B,6BAAyBJ,WAAW,CAACK,mBAHR;AAI7B,eAAWL,WAAW,CAACM,OAJM;AAK7B,WAAON,WAAW,CAACO,GALU;AAM7B,iBAAaP,WAAW,CAACQ,QANI;AAO7B,kBAAcR,WAAW,CAACS,SAPG;AAQ7B,eAAWT,WAAW,CAACU,MARM;AAS7B,aAASV,WAAW,CAACW,KATQ;AAU7B,cAAUX,WAAW,CAACY,MAVO;AAW7B,oBAAgBZ,WAAW,CAACa,WAXC;AAY7B,qBAAiBb,WAAW,CAACc,YAZA;AAa7B,qBAAiBd,WAAW,CAACE,YAbA;AAc7B,oBAAgBF,WAAW,CAACP,YAdC;AAe7B,aAASO,WAAW,CAACe;AAfQ,GAA/B;AAiBAZ,EAAAA,WAAW,GAAGhN,UAAU,CAACgN,WAAD,CAAxB;AAEA,GAAC,WAAD,EAAc,eAAd,EAA+BpN,OAA/B,CAAuC,UAAUiO,UAAV;AACrC,QAAIvO,KAAK,CAAC4K,OAAN,CAAc8C,WAAW,CAACa,UAAD,CAAzB,CAAJ,EAA4C;AAC1Cb,MAAAA,WAAW,CAACa,UAAD,CAAX,GAA0Bb,WAAW,CAACa,UAAD,CAAX,CAAwBtL,IAAxB,CAA6B,GAA7B,CAA1B;AACD;AACF,GAJD;AAMA,MAAI,qCAAAsK,WAAW,CAACE,YAAZ,kBAAkC,UAAlC,MAAkD,CAAC,CAAnD,IACF,qCAAAF,WAAW,CAACiB,MAAZ,kBAA4B,QAA5B,MAA0C,CAAC,CAD7C,EACgD;AAC9C,UAAM,IAAIlU,YAAJ,CAAiB,mFAAjB,CAAN;AACD,GAHD,MAGO;AACLoT,IAAAA,WAAW,CAACe,KAAZ,GAAoBlB,WAAW,CAACiB,MAAZ,CAAoBvL,IAApB,CAAyB,GAAzB,CAApB;AACD;AAED,SAAOyK,WAAP;AACD;SAEegB,qBAAqBnB;AACnC,MAAIoB,gBAAgB,GAAGrB,+BAA+B,CAACC,WAAD,CAAtD;AACA,SAAO1K,aAAa,mCACf8L,mBACCpB,WAAW,CAACqB,WAAZ,uBAAgCrB,WAAW,CAACqB,aAF9B,CAApB;AAID;;ACpDD,SAASC,eAAT,CAAyBhJ,OAAzB;AAEE,MAAI,CAACA,OAAO,CAAC2H,QAAb,EAAuB;AACrB,UAAM,IAAIlT,YAAJ,CAAiB,yEAAjB,CAAN;AACD;AAED,MAAI,CAACuL,OAAO,CAACuI,WAAb,EAA0B;AACxB,UAAM,IAAI9T,YAAJ,CAAiB,oEAAjB,CAAN;AACD;AAED,MAAI,CAACuL,OAAO,CAACiJ,iBAAT,IAA8B,CAACjJ,OAAO,CAACkJ,eAA3C,EAA4D;AAC1D,UAAM,IAAIzU,YAAJ,CAAiB,2EAAjB,CAAN;AACD;AAED,MAAI,CAACuL,OAAO,CAACmJ,YAAb,EAA2B;AACzB,UAAM,IAAI1U,YAAJ,CAAiB,+EAAjB,CAAN;AACD;AACF;AAED,SAAS2U,WAAT,CAAqBjJ,GAArB,EAA0BH,OAA1B;;AAEE,MAAIqF,MAAM,GAAgBxK,UAAU,CAAC;AACnC,iBAAamF,OAAO,CAAC2H,QADc;AAEnC,oBAAgB3H,OAAO,CAACuI,WAFW;AAGnC,kBAAcvI,OAAO,CAACkJ,eAAR,GAA0B,kBAA1B,GAA+C,oBAH1B;AAInC,qBAAiBlJ,OAAO,CAACmJ;AAJU,GAAD,CAApC;AAOA,MAAInJ,OAAO,CAACkJ,eAAZ,EAA6B;AAC3B7D,IAAAA,MAAM,CAAC,kBAAD,CAAN,GAA6BrF,OAAO,CAACkJ,eAArC;AACD,GAFD,MAEO,IAAIlJ,OAAO,CAACiJ,iBAAZ,EAA+B;AACpC5D,IAAAA,MAAM,CAACgE,IAAP,GAAcrJ,OAAO,CAACiJ,iBAAtB;AACD;AAED,MAAQK,YAAR,GAAyBnJ,GAAG,CAACH,OAA7B,CAAQsJ,YAAR;AACA,MAAIA,YAAJ,EAAkB;AAChBjE,IAAAA,MAAM,CAAC,eAAD,CAAN,GAA0BiE,YAA1B;AACD;AAGD,SAAO,kCAAAtM,aAAa,CAACqI,MAAD,CAAb,iBAA4B,CAA5B,CAAP;AACD;SAGekE,oBAAoBpJ,KAAKH,SAAsBwJ;AAC7DR,EAAAA,eAAe,CAAChJ,OAAD,CAAf;AACA,MAAIyB,IAAI,GAAG2H,WAAW,CAACjJ,GAAD,EAAMH,OAAN,CAAtB;AAEA,MAAMC,OAAO,GAAG;AACd,oBAAgB;AADF,GAAhB;AAIA,SAAOC,WAAW,CAACC,GAAD,EAAM;AACtB1D,IAAAA,GAAG,EAAE+M,IAAI,CAACC,QADY;AAEtBrJ,IAAAA,MAAM,EAAE,MAFc;AAGtB/F,IAAAA,IAAI,EAAEoH,IAHgB;AAItBxB,IAAAA,OAAO,EAAPA;AAJsB,GAAN,CAAlB;AAMD;SAEeyJ,iBACdvJ,KACAH,SACA2J;;AAEA,SAAOzJ,WAAW,CAACC,GAAD,EAAM;AACtB1D,IAAAA,GAAG,EAAEkN,YAAY,CAACF,QADI;AAEtBrJ,IAAAA,MAAM,EAAE,MAFc;AAGtBH,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAHa;AAOtB5F,IAAAA,IAAI,EAAE,iDAAe;AACnBuP,MAAAA,SAAS,EAAE5J,OAAO,CAAC2H,QADA;AAEnBkC,MAAAA,UAAU,EAAE,eAFO;AAGnBjB,MAAAA,KAAK,EAAEe,YAAY,CAAChB,MAAb,CAAoBvL,IAApB,CAAyB,GAAzB,CAHY;AAInB0M,MAAAA,aAAa,EAAEH,YAAY,CAACA,YAJT;AAAA,KAAf,mBAKC;;UAAWxV;UAAM4G;AAEtB,aAAO5G,IAAI,GAAG,GAAP,GAAagJ,kBAAkB,CAACpC,KAAD,CAAtC;AACD,KARK,EAQHqC,IARG,CAQE,GARF;AAPgB,GAAN,CAAlB;AAiBD;;SCnFe2M,aAAa5J,KAA4B6J;AACvD,MAAIC,aAAa,GAAID,MAAM,IAAI7J,GAAG,CAACH,OAAJ,CAAYgK,MAA3C;AACA,SAAO1H,GAAG,CAACnC,GAAD,EAAM8J,aAAa,GAAG,mCAAtB,EAA2D;AACnEnJ,IAAAA,aAAa,EAAE;AADoD,GAA3D,CAAV;AAGD;SAEeoJ,OAAO/J,KAA4B6J,QAAgBG;AACjE,MAAIzJ,SAAS,GAAGP,GAAG,CAACQ,cAAJ,CAAmBC,YAAnB,CAAgCT,GAAG,CAACH,OAAJ,CAAYa,OAA5C,CAAhB;AAEA,SAAOkJ,YAAY,CAAC5J,GAAD,EAAM6J,MAAN,CAAZ,CACNvS,IADM,CACD,UAAS2S,SAAT;AACJ,QAAIC,OAAO,GAAGD,SAAS,CAAC,UAAD,CAAvB;AAGA,QAAIrJ,aAAa,GAAGL,SAAS,CAACM,UAAV,EAApB;AACA,QAAIC,cAAc,GAAGF,aAAa,CAACsJ,OAAD,CAAlC;AACA,QAAIpJ,cAAc,IAAI/H,IAAI,CAACgI,GAAL,KAAW,IAAX,GAAkBD,cAAc,CAACE,SAAvD,EAAkE;AAChE,UAAImJ,SAAS,GAAG/O,IAAI,uBAAC0F,cAAc,CAACG,QAAhB,GAA+B;AACjD+I,QAAAA,GAAG,EAAEA;AAD4C,OAA/B,CAApB;AAIA,UAAIG,SAAJ,EAAe;AACb,eAAOA,SAAP;AACD;AACF;AAGD5J,IAAAA,SAAS,CAAC6J,YAAV,CAAuBF,OAAvB;AAGA,WAAO/H,GAAG,CAACnC,GAAD,EAAMkK,OAAN,EAAe;AACvBvJ,MAAAA,aAAa,EAAE;AADQ,KAAf,CAAH,CAGNrJ,IAHM,CAGD,UAASiK,GAAT;AACJ,UAAIzE,GAAG,GAAG1B,IAAI,uBAACmG,GAAD,GAAW;AACvByI,QAAAA,GAAG,EAAEA;AADkB,OAAX,CAAd;AAIA,UAAIlN,GAAJ,EAAS;AACP,eAAOA,GAAP;AACD;AAED,YAAM,IAAIxI,YAAJ,CAAiB,iBAAiB0V,GAAjB,GAAuB,uCAAxC,CAAN;AACD,KAbM,CAAP;AAcD,GAnCM,CAAP;AAoCD;;SC9CeK,YAAYC,aAAatW,MAAMyE;AAC7C,MAAI6R,WAAW,CAACC,gBAAhB,EAAkC;AAChCD,IAAAA,WAAW,CAACC,gBAAZ,CAA6BvW,IAA7B,EAAmCyE,EAAnC;AACD,GAFD,MAEO;AACL6R,IAAAA,WAAW,CAACE,WAAZ,CAAwB,OAAOxW,IAA/B,EAAqCyE,EAArC;AACD;AACF;SAEegS,eAAeH,aAAatW,MAAMyE;AAChD,MAAI6R,WAAW,CAACI,mBAAhB,EAAqC;AACnCJ,IAAAA,WAAW,CAACI,mBAAZ,CAAgC1W,IAAhC,EAAsCyE,EAAtC;AACD,GAFD,MAEO;AACL6R,IAAAA,WAAW,CAACK,WAAZ,CAAwB,OAAO3W,IAA/B,EAAqCyE,EAArC;AACD;AACF;SAEemS,UAAUC;AACxB,MAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAF,EAAAA,MAAM,CAACG,KAAP,CAAapD,OAAb,GAAuB,MAAvB;AACAiD,EAAAA,MAAM,CAACD,GAAP,GAAaA,GAAb;AAEA,SAAOE,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BL,MAA1B,CAAP;AACD;SAEeM,UAAUP,KAAKhL;AAC7B,MAAIwL,KAAK,GAAGxL,OAAO,CAACyL,UAAR,IAAsB,gDAAlC;AACA,MAAIC,UAAU,GAAG,gDACf,0CADF;AAEA,SAAO1T,MAAM,CAAC2T,IAAP,CAAYX,GAAZ,EAAiBQ,KAAjB,EAAwBE,UAAxB,CAAP;AACD;SAEeE,uBAAuBzL,KAA+B0L,SAASpD;AAC7E,MAAIqD,eAAJ;AACA,MAAIC,SAAJ;AACA,MAAIC,oBAAoB,GAAG,aAAY,UAAUlS,OAAV,EAAmBqJ,MAAnB;AAErC2I,IAAAA,eAAe,GAAG,SAASA,eAAT,CAAyB1V,CAAzB;AAChB,UAAI,CAACA,CAAC,CAACqL,IAAH,IAAWrL,CAAC,CAACqL,IAAF,CAAOgH,KAAP,KAAiBA,KAAhC,EAAuC;AAErC;AACD;AAMD,UAAIrS,CAAC,CAAC6V,MAAF,KAAa9L,GAAG,CAACoC,eAAJ,EAAjB,EAAwC;AACtC,eAAOY,MAAM,CAAC,IAAI1O,YAAJ,CAAiB,iDAAjB,CAAD,CAAb;AACD;AACDqF,MAAAA,OAAO,CAAC1D,CAAC,CAACqL,IAAH,CAAP;AACD,KAdD;AAgBA+I,IAAAA,WAAW,CAACxS,MAAD,EAAS,SAAT,EAAoB8T,eAApB,CAAX;AAEAC,IAAAA,SAAS,GAAGhS,UAAU,CAAC;AACrBoJ,MAAAA,MAAM,CAAC,IAAI1O,YAAJ,CAAiB,sBAAjB,CAAD,CAAN;AACD,KAFqB,EAEnBoX,OAAO,IAAI,MAFQ,CAAtB;AAGD,GAvB0B,CAA3B;AAyBA,SAAOG,oBAAoB,CACxBzP,OADI,CACI;AACP2P,IAAAA,YAAY,CAACH,SAAD,CAAZ;AACAnB,IAAAA,cAAc,CAAC5S,MAAD,EAAS,SAAT,EAAoB8T,eAApB,CAAd;AACD,GAJI,CAAP;AAKD;;SChEeK;AACd,SAAO7S,eAAe,CAAC,EAAD,CAAtB;AACD;SAEe8S;AACd,SAAO9S,eAAe,CAAC,EAAD,CAAtB;AACD;AAED,SAAS+S,SAAT,CAAmBlM,GAAnB;MAAkDH,8EAAsB;AACtE,MAAMgK,MAAM,GAAGnN,mBAAmB,CAACmD,OAAO,CAACgK,MAAT,CAAnB,IAAuC7J,GAAG,CAACH,OAAJ,CAAYgK,MAAlE;AACA,SAAOA,MAAP;AACD;SAEesC,gBAAgBnM;MAA+BH,8EAAsB;AACnF,MAAMgK,MAAM,GAAGqC,SAAS,CAAClM,GAAD,EAAMH,OAAN,CAAxB;AACA,MAAMpD,OAAO,GAAG,yBAAAoN,MAAM,MAAN,CAAAA,MAAM,EAAS,SAAT,CAAN,GAA4B,CAA5B,GAAgCA,MAAhC,GAAyCA,MAAM,GAAG,SAAlE;AACA,SAAOpN,OAAP;AACD;SAEe2P,eAAepM;MAA+BH,8EAAsB;AAClF,MAAMgK,MAAM,GAAGqC,SAAS,CAAClM,GAAD,EAAMH,OAAN,CAAxB;AACA,MAAMwM,MAAM,GAAGxC,MAAM,CAAC/L,KAAP,CAAa,SAAb,EAAwB,CAAxB,CAAf;AACA,SAAOuO,MAAP;AACD;SAEeC,aAAatM,KAA+BH;AAC1D,MAAInH,SAAS,CAAC7C,MAAV,GAAmB,CAAvB,EAA0B;AACxB,UAAM,IAAIvB,YAAJ,CAAiB,sEAAjB,CAAN;AACD;AACDuL,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AAGA,MAAI0M,YAAY,GAAG7P,mBAAmB,CAACmD,OAAO,CAAC0M,YAAT,CAAnB,IAA6CvM,GAAG,CAACH,OAAJ,CAAY0M,YAA5E;AACA,MAAI1C,MAAM,GAAGqC,SAAS,CAAClM,GAAD,EAAMH,OAAN,CAAtB;AACA,MAAI2M,WAAW,GAAG9P,mBAAmB,CAACmD,OAAO,CAAC2M,WAAT,CAAnB,IAA4CxM,GAAG,CAACH,OAAJ,CAAY2M,WAA1E;AACA,MAAIlD,QAAQ,GAAG5M,mBAAmB,CAACmD,OAAO,CAACyJ,QAAT,CAAnB,IAAyCtJ,GAAG,CAACH,OAAJ,CAAYyJ,QAApE;AACA,MAAImD,SAAS,GAAG/P,mBAAmB,CAACmD,OAAO,CAAC4M,SAAT,CAAnB,IAA0CzM,GAAG,CAACH,OAAJ,CAAY4M,SAAtE;AACA,MAAIC,SAAS,GAAGhQ,mBAAmB,CAACmD,OAAO,CAAC6M,SAAT,CAAnB,IAA0C1M,GAAG,CAACH,OAAJ,CAAY6M,SAAtE;AAEA,MAAIjQ,OAAO,GAAG0P,eAAe,CAACnM,GAAD,EAAMH,OAAN,CAA7B;AAEA0M,EAAAA,YAAY,GAAGA,YAAY,IAAI9P,OAAO,GAAG,eAAzC;AACA+P,EAAAA,WAAW,GAAGA,WAAW,IAAI/P,OAAO,GAAG,cAAvC;AACA6M,EAAAA,QAAQ,GAAGA,QAAQ,IAAI7M,OAAO,GAAG,WAAjC;AACAiQ,EAAAA,SAAS,GAAGA,SAAS,IAAIjQ,OAAO,GAAG,YAAnC;AACAgQ,EAAAA,SAAS,GAAGA,SAAS,IAAIhQ,OAAO,GAAG,YAAnC;AAEA,SAAO;AACLoN,IAAAA,MAAM,EAAEA,MADH;AAEL0C,IAAAA,YAAY,EAAEA,YAFT;AAGLC,IAAAA,WAAW,EAAEA,WAHR;AAILlD,IAAAA,QAAQ,EAAEA,QAJL;AAKLoD,IAAAA,SAAS,EAAEA,SALN;AAMLD,IAAAA,SAAS,EAAEA;AANN,GAAP;AAQD;;ACvDD,IAAME,cAAc,GAAG,mCAAvB;SAEgBC;AACd,SAAO,OAAO7B,QAAP,KAAoB,WAApB,IAAmC,OAAOlT,MAAP,KAAkB,WAA5D;AACD;SAEegV;AACd,MAAI,CAACD,SAAS,EAAd,EAAkB;AAChB,WAAO,KAAP;AACD;AACD,MAAME,YAAY,GAAI/B,QAAgB,CAAC+B,YAAvC;AACA,SAAO,CAAC,CAACA,YAAF,IAAkBA,YAAY,IAAI,EAAzC;AACD;SAEeC;AACd,SAAOC,SAAS,CAACC,SAAjB;AACD;SAEeC;AACd,MAAMC,KAAK,GAAGJ,YAAY,EAA1B;AACA,SAAOI,KAAK,IAAI,CAACR,cAAc,CAACpQ,IAAf,CAAoB4Q,KAApB,CAAjB;AACD;SAEeC;AACd,MAAI,CAACR,SAAS,EAAd,EAAkB;AAChB,WAAO,KAAP;AACD;AACD,MAAME,YAAY,GAAI/B,QAAgB,CAAC+B,YAAvC;AACA,MAAIO,QAAQ,GAAGP,YAAY,IAAIA,YAAY,GAAG,EAA9C;AACA,MAAI,OAAOjV,MAAM,CAACyV,WAAd,KAA8B,WAA9B,IAA6C,CAACD,QAAlD,EAA4D;AAC1D,WAAO,IAAP;AACD;AACD,SAAO,KAAP;AACD;SAEeE;AACd,SAAO,OAAOpW,CAAP,KAAqB,WAArB,IACFA,CAAS,KAAK,IADZ,IAEF,OAAOA,CAAS,CAACC,MAAjB,KAA4B,WAF1B,IAGF,OAAOhB,UAAP,KAAsB,WAH3B;AAID;SAEeoX;AACd,SAAO,OAAOvW,WAAP,KAAuB,WAA9B;AACD;SAEewW;AACd,SAAOF,sBAAsB,MAAMC,cAAc,EAAjD;AACD;SAEeE;AACd,MAAI,CAACd,SAAS,EAAd,EAAkB;AAChB,WAAO,KAAP;AACD;AACD,SAAO/U,MAAM,CAACqP,QAAP,CAAgByG,QAAhB,KAA6B,QAApC;AACD;SAEeC;AAEd,SAAOhB,SAAS,MAAM/U,MAAM,CAACqP,QAAP,CAAgB2G,QAAhB,KAA6B,WAAnD;AACD;;;;;;;;;;;;;;;;SC1DeC,sBAAsB9N;AACpC,qBASIA,GAAG,CAACH,OATR;AAAA,MACEkO,IADF,gBACEA,IADF;AAAA,MAEEvG,QAFF,gBAEEA,QAFF;AAAA,MAGEY,WAHF,gBAGEA,WAHF;AAAA,MAIEX,YAJF,gBAIEA,YAJF;AAAA,MAKEY,YALF,gBAKEA,YALF;AAAA,MAMEG,MANF,gBAMEA,MANF;AAAA,MAOEF,KAPF,gBAOEA,KAPF;AAAA,MAQE0F,eARF,gBAQEA,eARF;AAUA,MAAMC,kBAAkB,GAAGrB,SAAS,KAAK/U,MAAM,CAACqP,QAAP,CAAgBpD,IAArB,GAA4B/L,SAAhE;AACA,SAAO2C,UAAU,CAAC;AAChBqT,IAAAA,IAAI,EAAJA,IADgB;AAEhBvG,IAAAA,QAAQ,EAARA,QAFgB;AAGhBY,IAAAA,WAAW,EAAEA,WAAW,IAAI6F,kBAHZ;AAIhBxG,IAAAA,YAAY,EAAEA,YAAY,IAAI,CAAC,OAAD,EAAU,UAAV,CAJd;AAKhBY,IAAAA,YAAY,EAAZA,YALgB;AAMhBC,IAAAA,KAAK,EAAEA,KAAK,IAAI0D,aAAa,EANb;AAOhB9D,IAAAA,KAAK,EAAE+D,aAAa,EAPJ;AAQhBzD,IAAAA,MAAM,EAAEA,MAAM,IAAI,CAAC,QAAD,EAAW,OAAX,CARF;AAShBwF,IAAAA,eAAe,EAAfA;AATgB,GAAD,CAAjB;AAWD;;SC1BeE,2BAA2BxZ;AACzC,MAAIA,KAAK,CAACV,IAAN,KAAe,YAAnB,EAAiC;AAC/B,WAAO,KAAP;AACD;AACD,MAAMma,UAAU,GAAGzZ,KAAnB;AACA,SAAQyZ,UAAU,CAACla,SAAX,KAAyB,sBAAjC;AACD;SAEema,yBAAyBpO,KAA+BtL;AACtE,MAAIA,KAAK,CAACV,IAAN,KAAe,cAAnB,EAAmC;AACjC,WAAO,KAAP;AACD;AACD,MAAMqa,YAAY,GAAG3Z,KAArB;AAEA,MAAM4Z,aAAa,GAAGD,YAAY,CAACva,GAAnC;AACA,MAAMya,YAAY,GAAGD,aAAa,SAAb,IAAAA,aAAa,WAAb,SAAA,GAAAA,aAAa,CAAEC,YAApC;AACA,SAAOvO,GAAG,CAACH,OAAJ,CAAYkO,IAAZ,IAAqB,CAAAQ,YAAY,SAAZ,IAAAA,YAAY,WAAZ,SAAA,GAAAA,YAAY,CAAE7Z,KAAd,MAAkC,eAA9D;AACD;SAEe8Z,2BAA2B9Z;AAEzC,SAAOI,YAAY,CAACJ,KAAD,CAAZ,IACLA,KAAK,CAACT,SAAN,KAAoB,eADf,IAELS,KAAK,CAACX,YAAN,KAAuB,0CAFzB;AAGD;;SCxBe0a,gBAAgB/W;AAC9B,SAAO,wBAAwB6E,IAAxB,CAA6B7E,IAA7B,CAAP;AACD;SAGegX,qBAAqBC;AACnC,SAAO,WAAWpS,IAAX,CAAgBoS,YAAhB,CAAP;AACD;SAGeC,mBAAmBD;AACjC,SAAO,uBAAuBpS,IAAvB,CAA4BoS,YAA5B,CAAP;AACD;SAEeE,cAAcF;AAC5B,SAAO,YAAYpS,IAAZ,CAAiBoS,YAAjB,KAAkC,uBAAuBpS,IAAvB,CAA4BoS,YAA5B,CAAzC;AACD;SAEeG,cAAcC,KAAa/O;AACzC,MAAIgP,UAAU,GAAGhP,GAAG,CAACH,OAArB;AACA,MAAI,CAACkP,GAAD,IAAQ,CAACC,UAAU,CAAC5G,WAAxB,EAAqC;AACnC,WAAO,KAAP;AACD;AACD,SAAO,yBAAA2G,GAAG,MAAH,CAAAA,GAAG,EAASC,UAAU,CAAC5G,WAApB,CAAH,KAAwC,CAA/C;AACD;SAEe6G,WAAWpP;AACzB,SAAOA,OAAO,CAACkO,IAAR,IAAgBlO,OAAO,CAAC4H,YAAR,KAAyB,MAAzC,IAAmD5H,OAAO,CAACwI,YAAR,KAAyB,OAAnF;AACD;SAEe6G,gBAAgBrP;AAC9B,MAAIsP,QAAQ,GAAGF,UAAU,CAACpP,OAAD,CAAzB;AACA,MAAIuP,QAAQ,GAAGD,QAAQ,IAAItP,OAAO,CAACwI,YAAR,KAAyB,UAApD;AACA,SAAO+G,QAAQ,GAAGvX,MAAM,CAACqP,QAAP,CAAgBmI,MAAnB,GAA4BxX,MAAM,CAACqP,QAAP,CAAgBxP,IAA3D;AACD;SAMe4X,gBAAiBtP;AAE/B,MAAI,CAAC8O,aAAa,CAACjX,MAAM,CAACqP,QAAP,CAAgBpD,IAAjB,EAAuB9D,GAAvB,CAAlB,EAA8C;AAC5C,WAAO,KAAP;AACD;AAGD,MAAImP,QAAQ,GAAGF,UAAU,CAACjP,GAAG,CAACH,OAAL,CAAzB;AACA,MAAI8O,YAAY,GAAGO,eAAe,CAAClP,GAAG,CAACH,OAAL,CAAlC;AAEA,MAAIgP,aAAa,CAACF,YAAD,CAAjB,EAAiC;AAC/B,WAAO,IAAP;AACD;AAED,MAAIQ,QAAJ,EAAc;AACZ,QAAII,OAAO,GAAIb,oBAAoB,CAACC,YAAD,CAApB,IAAsCC,kBAAkB,CAACD,YAAD,CAAvE;AACA,WAAOY,OAAP;AACD;AAGD,SAAOd,eAAe,CAAC5W,MAAM,CAACqP,QAAP,CAAgBxP,IAAjB,CAAtB;AACD;SAMe8X,sBAAuBxP,KAA+B2O;AACpE,MAAI,CAACA,YAAL,EAAmB;AAEjB,QAAI,CAACW,eAAe,CAACtP,GAAD,CAApB,EAA0B;AACxB,aAAO,KAAP;AACD;AAED2O,IAAAA,YAAY,GAAGO,eAAe,CAAClP,GAAG,CAACH,OAAL,CAA9B;AACD;AACD,SAAO,gCAAgCtD,IAAhC,CAAqCoS,YAArC,CAAP;AACD;;SCzFec,gBACdzP,KACAuH;AAEA,MAAMsC,MAAM,GAAG7J,GAAG,CAACH,OAAJ,CAAYgK,MAA3B;AACA,MAAMR,IAAI,GAAGiD,YAAY,CAACtM,GAAD,EAAMuH,WAAN,CAAzB;AACA,MAAMmI,SAAS,GAAyB;AACtC7F,IAAAA,MAAM,EAANA,MADsC;AAEtCR,IAAAA,IAAI,EAAJA,IAFsC;AAGtC7B,IAAAA,QAAQ,EAAED,WAAW,CAACC,QAHgB;AAItCY,IAAAA,WAAW,EAAEb,WAAW,CAACa,WAJa;AAKtCX,IAAAA,YAAY,EAAEF,WAAW,CAACE,YALY;AAMtCY,IAAAA,YAAY,EAAEd,WAAW,CAACc,YANY;AAOtCG,IAAAA,MAAM,EAAEjB,WAAW,CAACiB,MAPkB;AAQtCF,IAAAA,KAAK,EAAEf,WAAW,CAACe,KARmB;AAStCJ,IAAAA,KAAK,EAAEX,WAAW,CAACW,KATmB;AAUtC8F,IAAAA,eAAe,EAAEzG,WAAW,CAACyG;AAVS,GAAxC;AAaA,MAAIzG,WAAW,CAACwG,IAAZ,KAAqB,KAAzB,EAAgC;AAE9B,WAAO2B,SAAP;AACD;AAED,MAAMC,QAAQ,qCACTD;AACH1G,IAAAA,YAAY,EAAEzB,WAAW,CAACyB;AAC1BpB,IAAAA,mBAAmB,EAAEL,WAAW,CAACK;AACjCD,IAAAA,aAAa,EAAEJ,WAAW,CAACI;IAJ7B;AAOA,SAAOgI,QAAP;AACD;;SChBeC,kBAAkB5P;AAChC,MAAI,CAACA,GAAG,CAAC6P,QAAJ,CAAapC,eAAb,EAAL,EAAqC;AACnC,QAAIqC,YAAY,GAAG,qFAAnB;AACA,QAAI,CAAC9P,GAAG,CAAC6P,QAAJ,CAAanC,OAAb,EAAL,EAA6B;AAE3BoC,MAAAA,YAAY,IAAI,kGAAhB;AACD;AACD,QAAI,CAAC9P,GAAG,CAAC6P,QAAJ,CAAarC,cAAb,EAAL,EAAoC;AAElCsC,MAAAA,YAAY,IAAI,wGAAhB;AACD;AACD,UAAM,IAAIxb,YAAJ,CAAiBwb,YAAjB,CAAN;AACD;AACF;SAEqBC,2BAAtB;AAAA;AAAA;;6EAAO,iBAA2C/P,GAA3C,EAAuE4H,mBAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAELA,YAAAA,mBAAmB,GAAGA,mBAAmB,IAAI5H,GAAG,CAACH,OAAJ,CAAY+H,mBAAnC,IAA0DrI,6BAAhF,CAFK;AAAA;AAAA,mBAK2BqK,YAAY,CAAC5J,GAAD,CALvC;AAAA;AAKCgQ,YAAAA,iBALD;AAMDC,YAAAA,OANC,GAMSD,iBAAiB,CAAC,kCAAD,CAAjB,IAAyD,EANlE;AAAA,kBAOD,yBAAAC,OAAO,MAAP,CAAAA,OAAO,EAASrI,mBAAT,CAAP,KAAyC,CAAC,CAPzC;AAAA;AAAA;AAAA;AAAA,kBAQG,IAAItT,YAAJ,CAAiB,+BAAjB,CARH;AAAA;AAAA,6CAUEsT,mBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;SAaesI,WAAtB;AAAA;AAAA;;6DAAO,kBACLlQ,GADK,EAELuH,WAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAQDA,WARC,EAKHyB,YALG,gBAKHA,YALG,EAMHrB,aANG,gBAMHA,aANG,EAOHC,mBAPG,gBAOHA,mBAPG;AAWLD,YAAAA,aAAa,GAAGA,aAAa,IAAI3H,GAAG,CAACH,OAAJ,CAAY8H,aAA7C;AAXK,gBAYAA,aAZA;AAAA;AAAA;AAAA;AAaHiI,YAAAA,iBAAiB,CAAC5P,GAAD,CAAjB;AACAgJ,YAAAA,YAAY,GAAGA,YAAY,IAAImH,IAAI,CAAC/J,gBAAL,EAA/B;AAdG;AAAA,mBAemB+J,IAAI,CAAC5J,gBAAL,CAAsByC,YAAtB,CAfnB;AAAA;AAeHrB,YAAAA,aAfG;AAAA;AAAA;AAAA,mBAiBuBoI,2BAA2B,CAAC/P,GAAD,EAAM4H,mBAAN,CAjBlD;AAAA;AAiBLA,YAAAA,mBAjBK;AAoBLL,YAAAA,WAAW,qCACNA;AACHE,cAAAA,YAAY,EAAE;AACduB,cAAAA,YAAY,EAAZA;AACArB,cAAAA,aAAa,EAAbA;AACAC,cAAAA,mBAAmB,EAAnBA;cALF;AApBK,8CA4BEL,WA5BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;SAgCe6I,kBAAtB;AAAA;AAAA;;oEAAO,kBACLpQ,GADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAELuH,YAAAA,WAFK,8DAEsB,EAFtB;AAKC8I,YAAAA,QALD,GAKYvC,qBAAqB,CAAC9N,GAAD,CALjC;AAMLuH,YAAAA,WAAW,qCAAQ8I,WAAa9I,YAAhC;AANK,kBAQDA,WAAW,CAACwG,IAAZ,KAAqB,KARpB;AAAA;AAAA;AAAA;AAAA,8CAUIxG,WAVJ;AAAA;AAAA,8CAaE2I,WAAW,CAAClQ,GAAD,EAAMuH,WAAN,CAbb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;SC7ES+I,mBAAmBvb,GAAiBG;AAClD,SAAQH,CAAC,CAACyU,YAAF,KAAmBtU,CAAC,CAACsU,YAA7B;AACD;SAEe+G,oBAAoB1c;AAClC,MAAI,CAACe,cAAc,CAACf,GAAD,CAAnB,EAA0B;AACxB,WAAO,KAAP;AACD;AAED,MAAI,CAACA,GAAG,CAACC,GAAL,IAAY,CAACD,GAAG,CAACC,GAAJ,CAAQya,YAAzB,EAAuC;AACrC,WAAO,KAAP;AACD;AAED,MAAQA,YAAR,GAAyB1a,GAAG,CAACC,GAA7B,CAAQya,YAAR;AACA,MAAIA,YAAY,CAAC7Z,KAAb,KAAuB,eAA3B,EAA4C;AAC1C,WAAO,IAAP;AACD;AAED,SAAO,KAAP;AACD;;SCRe8b,kBAAkB7B;AAEhC,MAAI8B,UAAU,GAAG,KAAjB;AACA,MAAIC,UAAU,GAAG,oBAAjB;AACA,MAAIC,QAAQ,GAAGhC,YAAY,IAAI,EAA/B;AAGA,MAAIgC,QAAQ,CAACC,MAAT,CAAgB,CAAhB,MAAuB,GAAvB,IAA8BD,QAAQ,CAACC,MAAT,CAAgB,CAAhB,MAAuB,GAAzD,EAA8D;AAC5DD,IAAAA,QAAQ,GAAGA,QAAQ,CAAC/T,SAAT,CAAmB,CAAnB,CAAX;AACD;AAGD,MAAI+T,QAAQ,CAACC,MAAT,CAAgB,CAAhB,MAAuB,GAAvB,IAA8BD,QAAQ,CAACC,MAAT,CAAgB,CAAhB,MAAuB,GAAzD,EAA8D;AAC5DD,IAAAA,QAAQ,GAAGA,QAAQ,CAAC/T,SAAT,CAAmB,CAAnB,CAAX;AACD;AAGD,MAAI/H,GAAG,GAAG,EAAV;AAGA,MAAIgc,KAAJ;AACA,SAAO,IAAP,EAAa;AACXA,IAAAA,KAAK,GAAGH,UAAU,CAACI,IAAX,CAAgBH,QAAhB,CAAR;AACA,QAAI,CAACE,KAAL,EAAY;AAAE;AAAQ;AAEtB,QAAI/T,GAAG,GAAG+T,KAAK,CAAC,CAAD,CAAf;AACA,QAAIjW,KAAK,GAAGiW,KAAK,CAAC,CAAD,CAAjB,CALW;AAQX,QAAI/T,GAAG,KAAK,UAAR,IAAsBA,GAAG,KAAK,cAA9B,IAAgDA,GAAG,KAAK,MAA5D,EAAoE;AAClEjI,MAAAA,GAAG,CAACiI,GAAD,CAAH,GAAWlC,KAAX;AACD,KAFD,MAEO;AACL/F,MAAAA,GAAG,CAACiI,GAAD,CAAH,GAAW/G,kBAAkB,CAAC6E,KAAK,CAACnF,OAAN,CAAcgb,UAAd,EAA0B,GAA1B,CAAD,CAA7B;AACD;AACF;AACD,SAAO5b,GAAP;AACD;;SChCekc,eAAe/Q,KAA+BgR,QAAoBC;AAChF,MAAIC,GAAG,GAAGD,gBAAgB,CAACzJ,QAA3B;AACA,MAAI2J,GAAG,GAAGF,gBAAgB,CAACpH,MAA3B;AACA,MAAI3B,KAAK,GAAG+I,gBAAgB,CAAC/I,KAA7B;AAEA,MAAI,CAAC8I,MAAD,IAAW,CAACG,GAAZ,IAAmB,CAACD,GAAxB,EAA6B;AAC3B,UAAM,IAAI5c,YAAJ,CAAiB,kDAAjB,CAAN;AACD;AAED,MAAI4T,KAAK,IAAI8I,MAAM,CAAC9I,KAAP,KAAiBA,KAA9B,EAAqC;AACnC,UAAM,IAAI5T,YAAJ,CAAiB,wDAAjB,CAAN;AACD;AAED,MAAIyM,GAAG,GAAGxH,IAAI,CAACC,KAAL,CAAWT,IAAI,CAACgI,GAAL,KAAW,IAAtB,CAAV;AAEA,MAAIiQ,MAAM,CAACG,GAAP,KAAeA,GAAnB,EAAwB;AACtB,UAAM,IAAI7c,YAAJ,CAAiB,iBAAiB0c,MAAM,CAACG,GAAxB,GAA8B,IAA9B,GACrB,kBADqB,GACAA,GADA,GACM,GADvB,CAAN;AAED;AAED,MAAIH,MAAM,CAACE,GAAP,KAAeA,GAAnB,EAAwB;AACtB,UAAM,IAAI5c,YAAJ,CAAiB,mBAAmB0c,MAAM,CAACE,GAA1B,GAAgC,IAAhC,GACrB,kBADqB,GACAA,GADA,GACM,GADvB,CAAN;AAED;AAED,MAAIF,MAAM,CAACI,GAAP,GAAcJ,MAAM,CAACK,GAAzB,EAA+B;AAC7B,UAAM,IAAI/c,YAAJ,CAAiB,sCAAjB,CAAN;AACD;AAED,MAAI,CAAC0L,GAAG,CAACH,OAAJ,CAAYyR,cAAjB,EAAiC;AAC/B,QAAKvQ,GAAG,GAAGf,GAAG,CAACH,OAAJ,CAAY0R,YAAnB,GAAoCP,MAAM,CAACK,GAA/C,EAAqD;AACnD,YAAM,IAAI/c,YAAJ,CAAiB,wCAAjB,CAAN;AACD;AAED,QAAI0c,MAAM,CAACI,GAAP,GAAerQ,GAAG,GAAGf,GAAG,CAACH,OAAJ,CAAY0R,YAArC,EAAqD;AACnD,YAAM,IAAIjd,YAAJ,CAAiB,kCAAjB,CAAN;AACD;AACF;AACF;;ACuBD,SAASkd,sBAAT,CAAgC3c,GAAhC;AACE,MAAI,CAACA,GAAD,IAAQ,QAAOA,GAAP,MAAe,QAAvB,IAAmC,eAAcA,GAAd,EAAmBgB,MAAnB,KAA8B,CAArE,EAAwE;AACtE,WAAO,KAAP;AACD;AACD,SAAO,IAAP;AACD;SAEe4b,uBAAuB5c;AACrC,MAAI,CAAC2c,sBAAsB,CAAC3c,GAAD,CAA3B,EAAkC;AAChC,WAAO,KAAP;AACD;AACD,SAAO,CAAC,CAACA,GAAG,CAACuT,WAAN,IAAqB,CAAC,CAACvT,GAAG,CAAC4S,YAAlC;AACD;SAEeiK,sBAAsB7c;AACpC,MAAI,CAAC4c,sBAAsB,CAAC5c,GAAD,CAA3B,EAAkC;AAChC,WAAO,KAAP;AACD;AACD,SAAO,CAAC,CAAEA,GAAW,CAACmU,YAAtB;AACD;SAEe2I,qBAAqB9c;AACnC,MAAI,CAAC6c,qBAAqB,CAAC7c,GAAD,CAA1B,EAAiC;AAC/B,WAAO,KAAP;AACD;AACD,SAAO,CAAC,CAAEA,GAAW,CAAC2P,iBAAtB;AACD;SAEeoN,4BAA4B/c;;AAC1C,MAAI,CAAC2c,sBAAsB,CAAC3c,GAAD,CAA3B,EAAkC;AAChC,WAAO,KAAP;AACD;AACD,MAAMgd,iBAAiB,GAAG,gDAAchd,GAAd,kBAAwB,UAAC+F,KAAD;AAAA,WAAY,OAAOA,KAAP,KAAiB,QAA7B;AAAA,GAAxB,MAAoE7C,SAA9F;AACA,SAAO8Z,iBAAP;AACD;SAEeC,kBAAkBjd;AAChC,MAAI4c,sBAAsB,CAAC5c,GAAD,CAAtB,IAA+B+c,2BAA2B,CAAC/c,GAAD,CAA9D,EAAqE;AACnE,WAAO,IAAP;AACD;AACD,SAAO,KAAP;AACD;;ICtGWkd;AAAZ,WAAYA;AACVA,EAAAA,oBAAA,YAAA;AACAA,EAAAA,oBAAA,YAAA;AACAA,EAAAA,oBAAA,YAAA;AACAA,EAAAA,qBAAA,aAAA;AACAA,EAAAA,qBAAA,aAAA;AACD,CAND,EAAYA,SAAS,KAATA,SAAS,KAAA,CAArB;IAQYC;AAAZ,WAAYA;AACVA,EAAAA,iCAAA,kBAAA;AACAA,EAAAA,8BAAA,eAAA;AACAA,EAAAA,gCAAA,iBAAA;AACAA,EAAAA,wCAAA,eAAA;AACAA,EAAAA,qCAAA,sBAAA;AACAA,EAAAA,+BAAA,gBAAA;AACAA,EAAAA,4BAAA,aAAA;AACD,CARD,EAAYA,gBAAgB,KAAhBA,gBAAgB,KAAA,CAA5B;IAmDYC;AAAZ,WAAYA;AACVA,EAAAA,+BAAA,qBAAA;AACAA,EAAAA,0BAAA,mBAAA;AACAA,EAAAA,wBAAA,iBAAA;AACAA,EAAAA,4BAAA,mBAAA;AACD,CALD,EAAYA,UAAU,KAAVA,UAAU,KAAA,CAAtB;SA8CgBC,gBAAgBrd;AAC9B,SAAOA,GAAG,KAAKA,GAAG,CAACiI,GAAJ,IAAWjI,GAAG,CAACsd,EAApB,CAAV;AACD;;SC/EeC,QAAQvd;AACtB,MAAIA,GAAG,KACFA,GAAG,CAACsL,WAAJ,IAAmBtL,GAAG,CAACwI,OAAvB,IAAkCxI,GAAG,CAAC2U,YADpC,CAAH,IAEAxP,KAAK,CAAC4K,OAAN,CAAc/P,GAAG,CAAC2T,MAAlB,CAFJ,EAE+B;AAC7B,WAAO,IAAP;AACD;AACD,SAAO,KAAP;AACD;SAEe6J,cAAcxd;AAC5B,SAAOA,GAAG,IAAIA,GAAG,CAACsL,WAAlB;AACD;SAEemS,UAAUzd;AACxB,SAAOA,GAAG,IAAIA,GAAG,CAACwI,OAAlB;AACD;SAEekV,eAAe1d;AAC7B,SAAOA,GAAG,IAAIA,GAAG,CAAC2U,YAAlB;AACD;;SC5DegJ,cAAcnL,OAAc9B;AAC1C,MAAI,CAAC+M,SAAS,CAACjL,KAAD,CAAV,IAAqB,CAACgL,aAAa,CAAChL,KAAD,CAAnC,IAA8C,CAACkL,cAAc,CAAClL,KAAD,CAAjE,EAA0E;AACxE,UAAM,IAAI/S,YAAJ,CACJ,+GADI,CAAN;AAGD;AAED,MAAIiR,IAAI,KAAK,aAAT,IAA0B,CAAC8M,aAAa,CAAChL,KAAD,CAA5C,EAAqD;AACnD,UAAM,IAAI/S,YAAJ,CAAiB,qBAAjB,CAAN;AACD;AACD,MAAIiR,IAAI,KAAK,SAAT,IAAsB,CAAC+M,SAAS,CAACjL,KAAD,CAApC,EAA6C;AAC3C,UAAM,IAAI/S,YAAJ,CAAiB,iBAAjB,CAAN;AACD;AAED,MAAIiR,IAAI,KAAK,cAAT,IAA2B,CAACgN,cAAc,CAAClL,KAAD,CAA9C,EAAuD;AACrD,UAAM,IAAI/S,YAAJ,CAAiB,sBAAjB,CAAN;AACD;AACF;;SCNeme,YAAYpL;AAC1B,MAAIxJ,GAAG,GAAGwJ,KAAK,CAACvJ,KAAN,CAAY,GAAZ,CAAV;AACA,MAAI4U,YAAJ;AAEA,MAAI;AACFA,IAAAA,YAAY,GAAG;AACbC,MAAAA,MAAM,EAAE7X,IAAI,CAACC,KAAL,CAAWnF,iBAAiB,CAACiI,GAAG,CAAC,CAAD,CAAJ,CAA5B,CADK;AAEbE,MAAAA,OAAO,EAAEjD,IAAI,CAACC,KAAL,CAAWnF,iBAAiB,CAACiI,GAAG,CAAC,CAAD,CAAJ,CAA5B,CAFI;AAGbI,MAAAA,SAAS,EAAEJ,GAAG,CAAC,CAAD;AAHD,KAAf;AAKD,GAND,CAME,OAAO5H,CAAP,EAAU;AACV,UAAM,IAAI3B,YAAJ,CAAiB,iBAAjB,CAAN;AACD;AAED,SAAOoe,YAAP;AACD;;SCFqBE,WAAtB;AAAA;AAAA;;6DAAO,iBAA2B5S,GAA3B,EAAuDqH,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACDlH,YAAAA,WADC,GACa,EADb;AAEDqJ,YAAAA,YAFC,GAEc,EAFd;AAGL,gBAAInC,KAAJ,EAAW;AACPlH,cAAAA,WAAW,GAAIkH,KAAqB,CAAClH,WAArC;AACAqJ,cAAAA,YAAY,GAAInC,KAAsB,CAACmC,YAAvC;AACH;AANI,kBAOF,CAACrJ,WAAD,IAAgB,CAACqJ,YAPf;AAAA;AAAA;AAAA;AAAA,kBAQG,IAAIlV,YAAJ,CAAiB,oDAAjB,CARH;AAAA;AAUDkT,YAAAA,QAVC,GAUUxH,GAAG,CAACH,OAAJ,CAAY2H,QAVtB;AAWD2B,YAAAA,YAXC,GAWcnJ,GAAG,CAACH,OAAJ,CAAYsJ,YAX1B;AAAA,gBAYA3B,QAZA;AAAA;AAAA;AAAA;AAAA,kBAaG,IAAIlT,YAAJ,CAAiB,4EAAjB,CAbH;AAAA;AAgBDoY,YAAAA,SAhBC,GAgBWJ,YAAY,CAACtM,GAAD,CAAZ,CAAkB0M,SAhB7B;AAiBDxS,YAAAA,IAjBC,GAiBM,kCAAA2C,aAAa,CAAC;AAEvBgW,cAAAA,eAAe,EAAErJ,YAAY,GAAG,eAAH,GAAqB,cAF3B;AAGvBnC,cAAAA,KAAK,EAAEmC,YAAY,IAAIrJ;AAHA,aAAD,CAAb,iBAIF,CAJE,CAjBN;AAsBD2S,YAAAA,KAtBC,GAsBO3J,YAAY,GAAGhU,CAAI,+CAAIqS,QAAJ,wBAAgB2B,YAAhB,EAAP,GAAyChU,CAAI,CAACqS,QAAD,CAtBhE;AAAA,8CAuBElF,IAAI,CAACtC,GAAD,EAAM0M,SAAN,EAAiBxS,IAAjB,EAAuB;AAChC4F,cAAAA,OAAO,EAAE;AACP,gCAAgB,mCADT;AAEP,iCAAiB,WAAWgT;AAFrB;AADuB,aAAvB,CAvBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;SCPe1V,WAAtB;AAAA;AAAA;;6DAAO,iBAA2B4C,GAA3B,EAAuDqH,KAAvD,EAAuE4J,gBAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACD,CAAC5J,KAAD,IAAU,CAACA,KAAK,CAAChK,OADhB;AAAA;AAAA;AAAA;AAAA,kBAEG,IAAI/I,YAAJ,CAAiB,+BAAjB,CAFH;AAAA;AAMDuJ,YAAAA,GANC,GAMK4U,WAAW,CAACpL,KAAK,CAAChK,OAAP,CANhB;AAUC0V,YAAAA,gBAVD,GAUoB,CAAA9B,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,SAAA,GAAAA,gBAAgB,CAAEpH,MAAlB,KAA4B7J,GAAG,CAACH,OAAJ,CAAYgK,MAV5D;AAAA;AAAA,mBAWoBD,YAAY,CAAC5J,GAAD,EAAM+S,gBAAN,CAXhC;AAAA;AAAA;AAWGlJ,YAAAA,MAXH,uBAWGA,MAXH;AAaDmJ,YAAAA,iBAbC,GAasC,eAAc;AAEvDxL,cAAAA,QAAQ,EAAExH,GAAG,CAACH,OAAJ,CAAY2H,QAFiC;AAGvDwG,cAAAA,eAAe,EAAEhO,GAAG,CAACH,OAAJ,CAAYmO;AAH0B,aAAd,EAIxCiD,gBAJwC,EAItB;AAEnBpH,cAAAA,MAAM,EAANA;AAFmB,aAJsB,CAbtC;AAuBLkH,YAAAA,cAAc,CAAC/Q,GAAD,EAAMnC,GAAG,CAACE,OAAV,EAAmBiV,iBAAnB,CAAd,CAvBK;AAAA,kBA2BDA,iBAAiB,CAAChF,eAAlB,IAAqC,IAArC,IAA6C,CAAChO,GAAG,CAAC6P,QAAJ,CAAatC,sBAAb,EA3B7C;AAAA;AAAA;AAAA;AAAA,6CA4BIlG,KA5BJ;AAAA;AAAA;AAAA,mBAgCa0C,MAAM,CAAC/J,GAAD,EAAMqH,KAAK,CAACwC,MAAZ,EAAoBhM,GAAG,CAAC8U,MAAJ,CAAW3I,GAA/B,CAhCnB;AAAA;AAgCClN,YAAAA,GAhCD;AAAA;AAAA,mBAiCemW,aAAA,CAAsB5L,KAAK,CAAChK,OAA5B,EAAqCP,GAArC,CAjCf;AAAA;AAiCCoW,YAAAA,KAjCD;AAAA,gBAkCAA,KAlCA;AAAA;AAAA;AAAA;AAAA,kBAmCG,IAAI5e,YAAJ,CAAiB,kCAAjB,CAnCH;AAAA;AAAA,kBAqCD2c,gBAAgB,IAAIA,gBAAgB,CAAC9Q,WAArC,IAAoDkH,KAAK,CAAC2J,MAAN,CAAamC,OArChE;AAAA;AAAA;AAAA;AAAA;AAAA,mBAsCgBF,WAAA,CAAsBhC,gBAAgB,CAAC9Q,WAAvC,CAtChB;AAAA;AAsCGzI,YAAAA,IAtCH;AAAA,kBAuCCA,IAAI,KAAK2P,KAAK,CAAC2J,MAAN,CAAamC,OAvCvB;AAAA;AAAA;AAAA;AAAA,kBAwCK,IAAI7e,YAAJ,CAAiB,gCAAjB,CAxCL;AAAA;AAAA,6CA2CE+S,KA3CF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;ACWP,SAAS+L,gBAAT,CAA0B7R,GAA1B,EAA8CmG,WAA9C;AACE,MAAInG,GAAG,CAAC,OAAD,CAAH,IAAgBA,GAAG,CAAC,mBAAD,CAAvB,EAA8C;AAC5C,UAAM,IAAI/M,UAAJ,CAAe+M,GAAG,CAAC,OAAD,CAAlB,EAA6BA,GAAG,CAAC,mBAAD,CAAhC,CAAN;AACD;AAED,MAAIA,GAAG,CAAC+G,KAAJ,KAAcZ,WAAW,CAACY,KAA9B,EAAqC;AACnC,UAAM,IAAIhU,YAAJ,CAAiB,wDAAjB,CAAN;AACD;AACF;SAEqB+e,mBAAtB;AAAA;AAAA;;qEAAO,iBACLrT,GADK,EAELuH,WAFK,EAGLhG,GAHK,EAIL8H,IAJK;AAAA;AAAA;AAAA;AAAA;AAAA;AAMD0E,YAAAA,IANC,GAMM/N,GAAG,CAACH,OAAJ,CAAYkO,IAAZ,KAAqB,KAN3B;AAAA,kBAUDA,IAAI,KAAKxM,GAAG,CAAC2H,IAAJ,IAAY3H,GAAG,CAAC+R,gBAArB,CAVH;AAAA;AAAA;AAAA;AAAA,6CAWItT,GAAG,CAACqH,KAAJ,CAAUkM,qBAAV,CAAgC,eAAc,EAAd,EAAkBhM,WAAlB,EAA+B;AACpEuB,cAAAA,iBAAiB,EAAEvH,GAAG,CAAC2H,IAD6C;AAEpEH,cAAAA,eAAe,EAAExH,GAAG,CAAC+R;AAF+C,aAA/B,CAAhC,EAGHjK,IAHG,CAXJ;AAAA;AAiBL9B,YAAAA,WAAW,GAAGA,WAAW,IAAIuG,qBAAqB,CAAC9N,GAAD,CAAlD;AACAqJ,YAAAA,IAAI,GAAGA,IAAI,IAAIiD,YAAY,CAACtM,GAAD,EAAMuH,WAAN,CAA3B;AAEIE,YAAAA,YApBC,GAoBcF,WAAW,CAACE,YAAZ,IAA4B,EApB1C;AAqBL,gBAAI,CAACzN,KAAK,CAAC4K,OAAN,CAAc6C,YAAd,CAAL,EAAkC;AAChCA,cAAAA,YAAY,GAAG,CAACA,YAAD,CAAf;AACD;AAGD,gBAAIlG,GAAG,CAACkH,KAAR,EAAe;AACbD,cAAAA,MAAM,GAAGjH,GAAG,CAACkH,KAAJ,CAAU3K,KAAV,CAAgB,GAAhB,CAAT;AACD,aAFD,MAEO;AACL0K,cAAAA,MAAM,GAAG3N,KAAK,CAAC0M,WAAW,CAACiB,MAAb,CAAd;AACD;AACGhB,YAAAA,QA/BC,GA+BUD,WAAW,CAACC,QAAZ,IAAwBxH,GAAG,CAACH,OAAJ,CAAY2H,QA/B9C;AAkCL4L,YAAAA,gBAAgB,CAAC7R,GAAD,EAAMgG,WAAN,CAAhB;AAEIiM,YAAAA,SApCC,GAoCW,EApCX;AAqCDC,YAAAA,SArCC,GAqCWlS,GAAG,CAACmS,UArCf;AAsCDC,YAAAA,SAtCC,GAsCWpS,GAAG,CAACqS,UAtCf;AAuCDzT,YAAAA,WAvCC,GAuCaoB,GAAG,CAACsS,YAvCjB;AAwCDxW,YAAAA,OAxCC,GAwCSkE,GAAG,CAACuS,QAxCb;AAyCDtK,YAAAA,YAzCC,GAyCcjI,GAAG,CAACoI,aAzClB;AA0CD5I,YAAAA,GA1CC,GA0CKxH,IAAI,CAACC,KAAL,CAAWT,IAAI,CAACgI,GAAL,KAAW,IAAtB,CA1CL;AA4CL,gBAAIZ,WAAJ,EAAiB;AACX4T,cAAAA,SADW,GACC/T,GAAG,CAACqH,KAAJ,CAAU2M,MAAV,CAAiB7T,WAAjB,CADD;AAEfqT,cAAAA,SAAS,CAACrT,WAAV,GAAwB;AACtBA,gBAAAA,WAAW,EAAEA,WADS;AAEtB6Q,gBAAAA,MAAM,EAAE+C,SAAS,CAAChW,OAFI;AAGtBiD,gBAAAA,SAAS,EAAEiT,MAAM,CAACR,SAAD,CAAN,GAAoB1S,GAHT;AAItB4S,gBAAAA,SAAS,EAAEA,SAJW;AAKtBnL,gBAAAA,MAAM,EAAEA,MALc;AAMtB+D,gBAAAA,YAAY,EAAElD,IAAI,CAACkD,YANG;AAOtBC,gBAAAA,WAAW,EAAEnD,IAAI,CAACmD;AAPI,eAAxB;AASD;AAED,gBAAIhD,YAAJ,EAAkB;AAChBgK,cAAAA,SAAS,CAAChK,YAAV,GAAyB;AACvBA,gBAAAA,YAAY,EAAEA,YADS;AAIvBxI,gBAAAA,SAAS,EAAEiT,MAAM,CAACR,SAAD,CAAN,GAAoB1S,GAJR;AAKvByH,gBAAAA,MAAM,EAAEA,MALe;AAMvBc,gBAAAA,QAAQ,EAAED,IAAI,CAACC,QANQ;AAOvBiD,gBAAAA,YAAY,EAAElD,IAAI,CAACkD,YAPI;AAQvB1C,gBAAAA,MAAM,EAAER,IAAI,CAACQ;AARU,eAAzB;AAUD;AApEI,iBAsEDxM,OAtEC;AAAA;AAAA;AAAA;AAuEC6W,YAAAA,KAvED,GAuESlU,GAAG,CAACqH,KAAJ,CAAU2M,MAAV,CAAiB3W,OAAjB,CAvET;AAwEC8W,YAAAA,UAxED,GAwEuB;AACxB9W,cAAAA,OAAO,EAAEA,OADe;AAExB2T,cAAAA,MAAM,EAAEkD,KAAK,CAACnW,OAFU;AAGxBiD,cAAAA,SAAS,EAAEkT,KAAK,CAACnW,OAAN,CAAcsT,GAAd,GAAqB6C,KAAK,CAACnW,OAAN,CAAcqT,GAAnC,GAA0CrQ,GAH7B;AAIxByH,cAAAA,MAAM,EAAEA,MAJgB;AAKxB+D,cAAAA,YAAY,EAAElD,IAAI,CAACkD,YALK;AAMxB1C,cAAAA,MAAM,EAAER,IAAI,CAACQ,MANW;AAOxBrC,cAAAA,QAAQ,EAAEA;AAPc,aAxEvB;AAkFCyJ,YAAAA,gBAlFD,GAkFuC;AACxCzJ,cAAAA,QAAQ,EAAEA,QAD8B;AAExCqC,cAAAA,MAAM,EAAER,IAAI,CAACQ,MAF2B;AAGxC3B,cAAAA,KAAK,EAAEX,WAAW,CAACW,KAHqB;AAIxC/H,cAAAA,WAAW,EAAEA;AAJ2B,aAlFvC;AAyFH,gBAAIoH,WAAW,CAACyG,eAAZ,KAAgCjW,SAApC,EAA+C;AAC7CkZ,cAAAA,gBAAgB,CAACjD,eAAjB,GAAmCzG,WAAW,CAACyG,eAA/C;AACD;AA3FE;AAAA,mBA6FG5Q,WAAW,CAAC4C,GAAD,EAAMmU,UAAN,EAAkBlD,gBAAlB,CA7Fd;AAAA;AA8FHuC,YAAAA,SAAS,CAACnW,OAAV,GAAoB8W,UAApB;AA9FG;AAAA,kBAkGD,yBAAA1M,YAAY,MAAZ,CAAAA,YAAY,EAAS,OAAT,CAAZ,KAAkC,CAAC,CAAnC,IAAwC,CAAC+L,SAAS,CAACrT,WAlGlD;AAAA;AAAA;AAAA;AAAA,kBAoGG,IAAI7L,YAAJ,CAAiB,+GAAjB,CApGH;AAAA;AAAA,kBAsGD,yBAAAmT,YAAY,MAAZ,CAAAA,YAAY,EAAS,UAAT,CAAZ,KAAqC,CAAC,CAAtC,IAA2C,CAAC+L,SAAS,CAACnW,OAtGrD;AAAA;AAAA;AAAA;AAAA,kBAwGG,IAAI/I,YAAJ,CAAiB,8GAAjB,CAxGH;AAAA;AAAA,6CA2GE;AACL8f,cAAAA,MAAM,EAAEZ,SADH;AAELlL,cAAAA,KAAK,EAAE/G,GAAG,CAAC+G,KAFN;AAGLY,cAAAA,IAAI,EAAE3H,GAAG,CAAC2H;AAHL,aA3GF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;SCwCSmL,SAASrU,KAA4BH;AACnD,MAAInH,SAAS,CAAC7C,MAAV,GAAmB,CAAvB,EAA0B;AACxB,WAAO,SAAQmN,MAAR,CAAe,IAAI1O,YAAJ,CAAiB,kEAAjB,CAAf,CAAP;AACD;AAEDuL,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AAIA,MAAMyU,WAAW,GAAGzU,OAAO,CAACyU,WAA5B;AACAzU,EAAAA,OAAO,CAACyU,WAAR,GAAsBvc,SAAtB;AAEA,SAAOqY,kBAAkB,CAACpQ,GAAD,EAAMH,OAAN,CAAlB,CACJvI,IADI,CACC,UAAUiQ,WAAV;AAGJ,QAAIgN,qBAAqB,GAAG;AAC1BpM,MAAAA,MAAM,EAAE,MADkB;AAE1BE,MAAAA,YAAY,EAAE,mBAFY;AAG1BR,MAAAA,OAAO,EAAE;AAHiB,KAA5B;AAMA,QAAI2M,YAAY,GAAG;AACjB3M,MAAAA,OAAO,EAAE;AADQ,KAAnB;AAIA,QAAIhI,OAAO,CAACmH,YAAZ,EAA0B;AACxB,qBAAcO,WAAd,EAA2BgN,qBAA3B;AACD,KAFD,MAEO,IAAI1U,OAAO,CAACiI,GAAZ,EAAiB;AACtB,qBAAcP,WAAd,EAA2BiN,YAA3B;AACD;AAGD,QAAIC,UAAJ,EACEC,QADF,EAEErL,IAFF;AAKAA,IAAAA,IAAI,GAAGiD,YAAY,CAACtM,GAAD,EAAMuH,WAAN,CAAnB;AACAmN,IAAAA,QAAQ,GAAG7U,OAAO,CAACmJ,YAAR,GAAuBK,IAAI,CAACC,QAA5B,GAAuCD,IAAI,CAACkD,YAAvD;AACAkI,IAAAA,UAAU,GAAGC,QAAQ,GAAGhM,oBAAoB,CAACnB,WAAD,CAA5C;AAGA,QAAIoN,QAAJ;AACA,QAAIpN,WAAW,CAACP,YAAZ,IAA4BO,WAAW,CAACM,OAAZ,KAAwB,IAAxD,EAA8D;AAC5D8M,MAAAA,QAAQ,GAAG,QAAX;AACD,KAFD,MAEO,IAAIpN,WAAW,CAACM,OAAZ,KAAwB,OAA5B,EAAqC;AAC1C8M,MAAAA,QAAQ,GAAG,OAAX;AACD,KAFM,MAEA;AACLA,MAAAA,QAAQ,GAAG,UAAX;AACD;AAGD,YAAQA,QAAR;AACE,WAAK,QAAL;AACE,YAAIC,aAAa,GAAGnJ,sBAAsB,CAACzL,GAAD,EAAMH,OAAO,CAAC6L,OAAd,EAAuBnE,WAAW,CAACe,KAAnC,CAA1C;AACA,YAAIuM,QAAQ,GAAGjK,SAAS,CAAC6J,UAAD,CAAxB;AACA,eAAOG,aAAa,CACjBtd,IADI,CACC,UAAUiK,GAAV;AACJ,iBAAO8R,mBAAmB,CAACrT,GAAD,EAAMuH,WAAN,EAAmBhG,GAAnB,EAAyC8H,IAAzC,CAA1B;AACD,SAHI,EAIJjN,OAJI,CAII;;AACP,cAAI2O,QAAQ,CAACG,IAAT,CAAc4J,QAAd,CAAuBD,QAAvB,CAAJ,EAAsC;AACpC,kBAAAA,QAAQ,CAACE,aAAT,UAAA,iBAAA,SAAA,MAAwBC,YAAYH,SAApC;AACD;AACF,SARI,CAAP;AAUF,WAAK,OAAL;AACE,YAAII,YAAJ,CADF;AAKE,YAAI1N,WAAW,CAACc,YAAZ,KAA6B,mBAAjC,EAAsD;AACpD,cAAI,CAACrI,GAAG,CAAC6P,QAAJ,CAAazC,2BAAb,EAAL,EAAiD;AAC/C,kBAAM,IAAI9Y,YAAJ,CAAiB,qDAAjB,CAAN;AACD;AACD2gB,UAAAA,YAAY,GAAGxJ,sBAAsB,CAACzL,GAAD,EAAMH,OAAO,CAAC6L,OAAd,EAAuBnE,WAAW,CAACe,KAAnC,CAArC;AACD,SAVH;AAcE,YAAIgM,WAAJ,EAAiB;AACfA,UAAAA,WAAW,CAACpN,QAAZ,CAAqBC,MAArB,CAA4BsN,UAA5B;AACD,SAhBH;AAmBE,YAAIS,YAAY,GAAG,aAAY,UAAUvb,OAAV,EAAmBqJ,MAAnB;AAC7B,cAAImS,WAAW,GAAGC,WAAW,CAAC;AAC5B,gBAAI,CAACd,WAAD,IAAgBA,WAAW,CAACe,MAAhC,EAAwC;AACtCC,cAAAA,aAAa,CAACH,WAAD,CAAb;AACAnS,cAAAA,MAAM,CAAC,IAAI1O,YAAJ,CAAiB,qCAAjB,CAAD,CAAN;AACD;AACF,WAL4B,EAK1B,GAL0B,CAA7B;AAQA2gB,UAAAA,YAAY,CACT3d,IADH,CACQ,UAAUiK,GAAV;AACJ+T,YAAAA,aAAa,CAACH,WAAD,CAAb;AACAxb,YAAAA,OAAO,CAAC4H,GAAD,CAAP;AACD,WAJH,EAKGQ,KALH,CAKS,UAAUlO,GAAV;AACLyhB,YAAAA,aAAa,CAACH,WAAD,CAAb;AACAnS,YAAAA,MAAM,CAACnP,GAAD,CAAN;AACD,WARH;AASD,SAlBkB,CAAnB;AAoBA,eAAOqhB,YAAY,CAChB5d,IADI,CACC,UAAUiK,GAAV;AACJ,iBAAO8R,mBAAmB,CAACrT,GAAD,EAAMuH,WAAN,EAAmBhG,GAAnB,EAAyC8H,IAAzC,CAA1B;AACD,SAHI,EAIJjN,OAJI,CAII;AACP,cAAIkY,WAAW,IAAI,CAACA,WAAW,CAACe,MAAhC,EAAwC;AACtCf,YAAAA,WAAW,CAACiB,KAAZ;AACD;AACF,SARI,CAAP;AAUF;AACE,cAAM,IAAIjhB,YAAJ,CAAiB,8CAAjB,CAAN;AAhEJ;AAkED,GA3GI,CAAP;AA4GD;;SC1LekhB,iBAAiBxV,KAA4BH;AAC3D,MAAInH,SAAS,CAAC7C,MAAV,GAAmB,CAAvB,EAA0B;AACxB,WAAO,SAAQmN,MAAR,CAAe,IAAI1O,YAAJ,CAAiB,0EAAjB,CAAf,CAAP;AACD;AAEDuL,EAAAA,OAAO,GAAGhF,KAAK,CAACgF,OAAD,CAAL,IAAkB,EAA5B;AACA,iBAAcA,OAAd,EAAuB;AACrBsI,IAAAA,MAAM,EAAE,MADa;AAErBE,IAAAA,YAAY,EAAE,mBAFO;AAGrBR,IAAAA,OAAO,EAAE;AAHY,GAAvB;AAKA,SAAOwM,QAAQ,CAACrU,GAAD,EAAMH,OAAN,CAAf;AACD;;SCTqB4V,sBAAtB;AAAA;AAAA;;wEAAO,iBACLzV,GADK,EAELuH,WAFK,EAGLmO,kBAHK;AAAA;AAAA;AAAA;AAAA;AAAA;AAKGlO,YAAAA,QALH,GAKgBxH,GAAG,CAACH,OALpB,CAKG2H,QALH;AAAA,gBAMAA,QANA;AAAA;AAAA;AAAA;AAAA,kBAOG,IAAIlT,YAAJ,CAAiB,0EAAjB,CAPH;AAAA;AAAA;AAWGqhB,YAAAA,gBAXH,GAWmC,eAAc,EAAd,EAAkBpO,WAAlB,EAA+B;AACnEC,cAAAA,QAAQ,EAARA;AADmE,aAA/B,CAXnC;AAAA;AAAA,mBAcyB+B,gBAAgB,CAACvJ,GAAD,EAAM2V,gBAAN,EAAwBD,kBAAxB,CAdzC;AAAA;AAcGE,YAAAA,aAdH;AAeGvM,YAAAA,IAfH,GAeUiD,YAAY,CAACtM,GAAD,EAAMuH,WAAN,CAftB;AAAA;AAAA,mBAgBsB8L,mBAAmB,CAACrT,GAAD,EAAM2V,gBAAN,EAAwBC,aAAxB,EAAuCvM,IAAvC,CAhBzC;AAAA;AAAA;AAgBK+K,YAAAA,MAhBL,yBAgBKA,MAhBL;AAmBK5K,YAAAA,YAnBL,GAmBsB4K,MAnBtB,CAmBK5K,YAnBL;AAoBH,gBAAIA,YAAY,IAAI,CAAC8G,kBAAkB,CAAC9G,YAAD,EAAekM,kBAAf,CAAvC,EAA2E;AACzE1V,cAAAA,GAAG,CAAC6V,YAAJ,CAAiBC,kBAAjB,CAAoCtM,YAApC;AACD;AAtBE,6CAwBI4K,MAxBJ;AAAA;AAAA;AAAA;AA2BH,gBAAI5F,0BAA0B,aAA9B,EAAqC;AAEnCxO,cAAAA,GAAG,CAAC6V,YAAJ,CAAiBE,kBAAjB;AACD;AA9BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;ACHP,SAASC,sBAAT;AACE,QAAM,IAAI1hB,YAAJ,CACJ,oFADI,CAAN;AAGD;AAGD,SAAS2hB,cAAT,CAAwBC,aAAxB,EAA8C9B,MAA9C;AACE,MAAI9B,SAAS,CAAC4D,aAAD,CAAb,EAA8B;AAC5B,WAAO9B,MAAM,CAAC/W,OAAd;AACD;AACD,MAAIgV,aAAa,CAAC6D,aAAD,CAAjB,EAAkC;AAChC,WAAO9B,MAAM,CAACjU,WAAd;AACD;AACD6V,EAAAA,sBAAsB;AACvB;SAGqBG,UAAtB;AAAA;AAAA;;4DAAO,iBAA0BnW,GAA1B,EAAsDqH,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,gBAAI,CAACiL,SAAS,CAACjL,KAAD,CAAV,IAAqB,CAACgL,aAAa,CAAChL,KAAD,CAAvC,EAAgD;AAC9C2O,cAAAA,sBAAsB;AACvB;AAEG5B,YAAAA,MALC,GAKQpU,GAAG,CAAC6V,YAAJ,CAAiBO,aAAjB,EALR;AAAA,iBAMDhC,MAAM,CAAC5K,YANN;AAAA;AAAA;AAAA;AAAA;AAAA,mBAOYiM,sBAAsB,CAACzV,GAAD,EAAM;AACzCwI,cAAAA,MAAM,EAAEnB,KAAK,CAACmB;AAD2B,aAAN,EAElC4L,MAAM,CAAC5K,YAF2B,CAPlC;AAAA;AAOH4K,YAAAA,MAPG;AAAA,6CAUI6B,cAAc,CAAC5O,KAAD,EAAQ+M,MAAR,CAVlB;AAAA;AAcL,gBAAIpU,GAAG,CAACH,OAAJ,CAAYkO,IAAhB,EAAsB;AACpBtG,cAAAA,YAAY,GAAG,MAAf;AACD,aAFD,MAEO,IAAI4K,aAAa,CAAChL,KAAD,CAAjB,EAA0B;AAC/BI,cAAAA,YAAY,GAAG,OAAf;AACD,aAFM,MAEA;AACLA,cAAAA,YAAY,GAAG,UAAf;AACD;AAEOe,YAAAA,MAtBH,GAsBiDnB,KAtBjD,CAsBGmB,MAtBH,EAsBW+D,YAtBX,GAsBiDlF,KAtBjD,CAsBWkF,YAtBX,EAsByBC,WAtBzB,GAsBiDnF,KAtBjD,CAsByBmF,WAtBzB,EAsBsC3C,MAtBtC,GAsBiDxC,KAtBjD,CAsBsCwC,MAtBtC;AAAA,6CAuBE2L,gBAAgB,CAACxV,GAAD,EAAM;AAC3ByH,cAAAA,YAAY,EAAZA,YAD2B;AAE3Be,cAAAA,MAAM,EAANA,MAF2B;AAG3B+D,cAAAA,YAAY,EAAZA,YAH2B;AAI3BC,cAAAA,WAAW,EAAXA,WAJ2B;AAK3B3C,cAAAA,MAAM,EAANA;AAL2B,aAAN,CAAhB,CAOJvS,IAPI,CAOC,UAAUiK,GAAV;AACJ,qBAAO0U,cAAc,CAAC5O,KAAD,EAAQ9F,GAAG,CAAC6S,MAAZ,CAArB;AACD,aATI,CAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;SCfeiC,WAAtB;AAAA;AAAA;;6DAAO,iBAA2BrW,GAA3B,EAAgCH,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AACCuU,YAAAA,MADD,GACUpU,GAAG,CAAC6V,YAAJ,CAAiBO,aAAjB,EADV;AAAA,iBAEDhC,MAAM,CAAC5K,YAFN;AAAA;AAAA;AAAA;AAAA,6CAGIiM,sBAAsB,CAACzV,GAAD,EAAMH,OAAO,IAAI,EAAjB,EAAqBuU,MAAM,CAAC5K,YAA5B,CAH1B;AAAA;AAAA,kBAMD,CAAC4K,MAAM,CAACjU,WAAR,IAAuB,CAACiU,MAAM,CAAC/W,OAN9B;AAAA;AAAA;AAAA;AAAA,kBAOG,IAAI/I,YAAJ,CAAiB,yDAAjB,CAPH;AAAA;AAUC6L,YAAAA,WAVD,GAUeiU,MAAM,CAACjU,WAAP,IAAsB,EAVrC;AAWC9C,YAAAA,OAXD,GAWW+W,MAAM,CAAC/W,OAAP,IAAkB,EAX7B;AAYCmL,YAAAA,MAZD,GAYUrI,WAAW,CAACqI,MAAZ,IAAsBnL,OAAO,CAACmL,MAZxC;AAAA,gBAaAA,MAbA;AAAA;AAAA;AAAA;AAAA,kBAcG,IAAIlU,YAAJ,CAAiB,oDAAjB,CAdH;AAAA;AAgBCiY,YAAAA,YAhBD,GAgBgBpM,WAAW,CAACoM,YAAZ,IAA4BlP,OAAO,CAACkP,YAhBpD;AAAA,gBAiBAA,YAjBA;AAAA;AAAA;AAAA;AAAA,kBAkBG,IAAIjY,YAAJ,CAAiB,0DAAjB,CAlBH;AAAA;AAoBCkY,YAAAA,WApBD,GAoBerM,WAAW,CAACqM,WAAZ,IAA2BxM,GAAG,CAACH,OAAJ,CAAY2M,WApBtD;AAqBC3C,YAAAA,MArBD,GAqBUxM,OAAO,CAACwM,MAAR,IAAkB7J,GAAG,CAACH,OAAJ,CAAYgK,MArBxC;AAwBLhK,YAAAA,OAAO,GAAG,eAAc;AACtB2I,cAAAA,MAAM,EAANA,MADsB;AAEtB+D,cAAAA,YAAY,EAAZA,YAFsB;AAGtBC,cAAAA,WAAW,EAAXA,WAHsB;AAItB3C,cAAAA,MAAM,EAANA;AAJsB,aAAd,EAKPhK,OALO,CAAV;AAOA,gBAAIG,GAAG,CAACH,OAAJ,CAAYkO,IAAhB,EAAsB;AACpBlO,cAAAA,OAAO,CAAC4H,YAAR,GAAuB,MAAvB;AACD,aAFD,MAEO;AAAA,sCACoBqG,qBAAqB,CAAC9N,GAAD,CADzC,EACGyH,YADH,yBACGA,YADH;AAEL5H,cAAAA,OAAO,CAAC4H,YAAR,GAAuBA,YAAvB;AACD;AApCI,6CAsCE+N,gBAAgB,CAACxV,GAAD,EAAMH,OAAN,CAAhB,CACJvI,IADI,CACC,UAAAiK,GAAG;AAAA,qBAAIA,GAAG,CAAC6S,MAAR;AAAA,aADJ,CAtCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;SCFekC,WAAtB;AAAA;AAAA;;6DAAO,iBACLtW,GADK,EACAuW,iBADA,EAELC,aAFK;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKAD,iBALA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAMwBvW,GAAG,CAAC6V,YAAJ,CAAiBY,SAAjB,EANxB;AAAA;AAMHF,YAAAA,iBANG,iBAMsDpW,WANtD;AAAA;AAAA,gBAQAqW,aARA;AAAA;AAAA;AAAA;AAAA;AAAA,mBASoBxW,GAAG,CAAC6V,YAAJ,CAAiBY,SAAjB,EATpB;AAAA;AASHD,YAAAA,aATG,iBASkDnZ,OATlD;AAAA;AAAA,kBAYD,CAACkZ,iBAAD,IAAsB,CAAClE,aAAa,CAACkE,iBAAD,CAZnC;AAAA;AAAA;AAAA;AAAA,6CAaI,SAAQvT,MAAR,CAAe,IAAI1O,YAAJ,CAAiB,6CAAjB,CAAf,CAbJ;AAAA;AAAA,kBAgBD,CAACkiB,aAAD,IAAkB,CAAClE,SAAS,CAACkE,aAAD,CAhB3B;AAAA;AAAA;AAAA;AAAA,6CAiBI,SAAQxT,MAAR,CAAe,IAAI1O,YAAJ,CAAiB,yCAAjB,CAAf,CAjBJ;AAAA;AAAA,6CAoBEyL,WAAW,CAACC,GAAD,EAAM;AACtB1D,cAAAA,GAAG,EAAEia,iBAAiB,CAAC/J,WADD;AAEtBvM,cAAAA,MAAM,EAAE,KAFc;AAGtBE,cAAAA,WAAW,EAAEoW,iBAAiB,CAACpW;AAHT,aAAN,CAAX,CAKJ7I,IALI,CAKC,UAAAof,QAAQ;AAEZ,kBAAIA,QAAQ,CAACC,GAAT,KAAiBH,aAAa,CAACxF,MAAd,CAAqB2F,GAA1C,EAA+C;AAC7C,uBAAOD,QAAP;AACD;AACD,qBAAO,SAAQ1T,MAAR,CAAe,IAAI1O,YAAJ,CAAiB,wDAAjB,CAAf,CAAP;AACD,aAXI,EAYJyN,KAZI,CAYE,UAAUlO,GAAV;AACL,kBAAIA,GAAG,CAACC,GAAJ,KAAYD,GAAG,CAACC,GAAJ,CAAQmO,MAAR,KAAmB,GAAnB,IAA0BpO,GAAG,CAACC,GAAJ,CAAQmO,MAAR,KAAmB,GAAzD,CAAJ,EAAmE;AACjE,oBAAI2U,kBAAJ;AACA,oBAAI/iB,GAAG,CAACC,GAAJ,CAAQgM,OAAR,IAAmB5D,UAAU,CAACrI,GAAG,CAACC,GAAJ,CAAQgM,OAAR,CAAgBqC,GAAjB,CAA7B,IAAsDtO,GAAG,CAACC,GAAJ,CAAQgM,OAAR,CAAgBqC,GAAhB,CAAoB,kBAApB,CAA1D,EAAmG;AACjGyU,kBAAAA,kBAAkB,GAAG/iB,GAAG,CAACC,GAAJ,CAAQgM,OAAR,CAAgBqC,GAAhB,CAAoB,kBAApB,CAArB;AACD,iBAFD,MAEO,IAAIjG,UAAU,CAACrI,GAAG,CAACC,GAAJ,CAAQ+iB,iBAAT,CAAd,EAA2C;AAChDD,kBAAAA,kBAAkB,GAAG/iB,GAAG,CAACC,GAAJ,CAAQ+iB,iBAAR,CAA0B,kBAA1B,CAArB;AACD;AACD,oBAAID,kBAAJ,EAAwB;AACtB,sBAAIE,YAAY,GAAGF,kBAAkB,CAAC/d,KAAnB,CAAyB,eAAzB,KAA6C,EAAhE;AACA,sBAAIke,uBAAuB,GAAGH,kBAAkB,CAAC/d,KAAnB,CAAyB,2BAAzB,KAAyD,EAAvF;AACA,sBAAInE,KAAK,GAAGoiB,YAAY,CAAC,CAAD,CAAxB;AACA,sBAAIE,gBAAgB,GAAGD,uBAAuB,CAAC,CAAD,CAA9C;AACA,sBAAIriB,KAAK,IAAIsiB,gBAAb,EAA+B;AAC7BnjB,oBAAAA,GAAG,GAAG,IAAIW,UAAJ,CAAeE,KAAf,EAAsBsiB,gBAAtB,CAAN;AACD;AACF;AACF;AACD,oBAAMnjB,GAAN;AACD,aA/BI,CApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;SCGS0f,sBAAsBvT,KAA4BuH,aAA0B8B;AAC1FA,EAAAA,IAAI,GAAGA,IAAI,IAAIiD,YAAY,CAACtM,GAAD,EAAMuH,WAAN,CAA3B;AAEAA,EAAAA,WAAW,GAAG,eAAc,EAAd,EAAkBuG,qBAAqB,CAAC9N,GAAD,CAAvC,EAA8CnF,KAAK,CAAC0M,WAAD,CAAnD,CAAd;AAEA,qBASIA,WATJ;AAAA,MACEuB,iBADF,gBACEA,iBADF;AAAA,MAEEC,eAFF,gBAEEA,eAFF;AAAA,MAGEC,YAHF,gBAGEA,YAHF;AAAA,MAIExB,QAJF,gBAIEA,QAJF;AAAA,MAKEY,WALF,gBAKEA,WALF;AAAA,MAMEI,MANF,gBAMEA,MANF;AAAA,MAOEwF,eAPF,gBAOEA,eAPF;AAAA,MAQE1F,KARF,gBAQEA,KARF;AAWA,MAAI2O,eAAe,GAAG;AACpBzP,IAAAA,QAAQ,EAARA,QADoB;AAEpBY,IAAAA,WAAW,EAAXA,WAFoB;AAGpBU,IAAAA,iBAAiB,EAAjBA,iBAHoB;AAIpBC,IAAAA,eAAe,EAAfA,eAJoB;AAKpBC,IAAAA,YAAY,EAAZA;AALoB,GAAtB;AAQA,SAAOI,mBAAmB,CAACpJ,GAAD,EAAMiX,eAAN,EAAuB5N,IAAvB,CAAnB,CACJ/R,IADI,CACC,UAAC2J,QAAD;AAKJ,QAAMwG,YAAY,GAAwB,CAAC,OAAD,CAA1C;AACA,QAAI,yBAAAe,MAAO,MAAP,CAAAA,MAAO,EAAS,QAAT,CAAP,KAA8B,CAAC,CAAnC,EAAsC;AACpCf,MAAAA,YAAY,CAAC1K,IAAb,CAAkB,UAAlB,EADoC;AAErC;AACD,QAAMma,qBAAqB,GAAgB;AACzC1P,MAAAA,QAAQ,EAARA,QADyC;AAEzCY,MAAAA,WAAW,EAAXA,WAFyC;AAGzCI,MAAAA,MAAM,EAANA,MAHyC;AAIzCf,MAAAA,YAAY,EAAZA,YAJyC;AAKzCuG,MAAAA,eAAe,EAAfA;AALyC,KAA3C;AAOA,WAAOqF,mBAAmB,CAACrT,GAAD,EAAMkX,qBAAN,EAA6BjW,QAA7B,EAAuCoI,IAAvC,CAAnB,CACJ/R,IADI,CACC,UAAC2J,QAAD;AAEJA,MAAAA,QAAQ,CAACiI,IAAT,GAAgBJ,iBAAhB;AACA7H,MAAAA,QAAQ,CAACqH,KAAT,GAAiBA,KAAjB;AACA,aAAOrH,QAAP;AACD,KANI,CAAP;AAOD,GAxBI,EAyBJ7E,OAzBI,CAyBI;AACP4D,IAAAA,GAAG,CAACmX,kBAAJ,CAAuBC,KAAvB;AACD,GA3BI,CAAP;AA4BD;;SCvDeC,aAAarX,KAA4BH;AACvD,MAAInH,SAAS,CAAC7C,MAAV,GAAmB,CAAvB,EAA0B;AACxB,WAAO,SAAQmN,MAAR,CAAe,IAAI1O,YAAJ,CAAiB,sEAAjB,CAAf,CAAP;AACD;AAKD,MAAMggB,WAAW,GAAGlJ,SAAS,CAAC,GAAD,EAAMvL,OAAN,CAA7B;AACAA,EAAAA,OAAO,GAAGhF,KAAK,CAACgF,OAAD,CAAL,IAAkB,EAA5B;AACA,iBAAcA,OAAd,EAAuB;AACrBgI,IAAAA,OAAO,EAAE,OADY;AAErBQ,IAAAA,YAAY,EAAE,mBAFO;AAGrBiM,IAAAA,WAAW,EAAXA;AAHqB,GAAvB;AAKA,SAAOD,QAAQ,CAACrU,GAAD,EAAMH,OAAN,CAAf;AACD;;SCfqByX,eAAtB;AAAA;AAAA;;iEAAO,iBAA+BtX,GAA/B,EAA2DH,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACD,MAAUhK,MAAV,GAAmB,CADlB;AAAA;AAAA;AAAA;AAAA,6CAEI,SAAQmN,MAAR,CAAe,IAAI1O,YAAJ,CAAiB,yEAAjB,CAAf,CAFJ;AAAA;AAKLuL,YAAAA,OAAO,GAAGhF,KAAK,CAACgF,OAAD,CAAL,IAAkB,EAA5B;AALK;AAAA,mBAOqBuQ,kBAAkB,CAACpQ,GAAD,EAAMH,OAAN,CAPvC;AAAA;AAOC0H,YAAAA,WAPD;AAQCgQ,YAAAA,IARD,GAQQ9H,eAAe,CAACzP,GAAD,EAAMuH,WAAN,CARvB;AASCkN,YAAAA,UATD,GASc8C,IAAI,CAAClO,IAAL,CAAUkD,YAAV,GAAyB7D,oBAAoB,CAACnB,WAAD,CAT3D;AAULvH,YAAAA,GAAG,CAACmX,kBAAJ,CAAuBK,IAAvB,CAA4BD,IAA5B,EAAkC;AAAEE,cAAAA,KAAK,EAAE;AAAT,aAAlC;AACAzX,YAAAA,GAAG,CAACqH,KAAJ,CAAUiQ,eAAV,CAA0BI,YAA1B,CAAuCjD,UAAvC;AAXK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;ACMP,SAASkD,UAAT,CAAoB3X,GAApB;AACE,MAAI4X,aAAa,GAAG5X,GAAG,CAACqH,KAAJ,CAAUwQ,YAAV,CAAuBC,WAAvB,EAApB;AACA,MAAIC,SAAS,GAAG/X,GAAG,CAACqH,KAAJ,CAAUwQ,YAAV,CAAuBG,YAAvB,EAAhB;AACA,MAAIC,SAAS,GAAGjY,GAAG,CAACqH,KAAJ,CAAUwQ,YAAV,CAAuBK,YAAvB,EAAhB;AACA,MAAIN,aAAa,IAAIA,aAAa,CAACO,YAAnC,EAAiD;AAC/CP,IAAAA,aAAa,CAACO,YAAd,CAA2B,IAA3B,EAAiCJ,SAAS,CAAC1M,KAA3C,EAAkD4M,SAAS,CAACG,QAAV,GAAqBH,SAAS,CAAC5I,MAAjF;AACD,GAFD,MAEO;AACL4I,IAAAA,SAAS,CAACvgB,IAAV,GAAiB,EAAjB;AACD;AACF;AAED,SAAS2gB,YAAT,CAAsBrY,GAAtB;AACE,MAAI4X,aAAa,GAAG5X,GAAG,CAACqH,KAAJ,CAAUwQ,YAAV,CAAuBC,WAAvB,EAApB;AACA,MAAIC,SAAS,GAAG/X,GAAG,CAACqH,KAAJ,CAAUwQ,YAAV,CAAuBG,YAAvB,EAAhB;AACA,MAAIC,SAAS,GAAGjY,GAAG,CAACqH,KAAJ,CAAUwQ,YAAV,CAAuBK,YAAvB,EAAhB;AACA,MAAIN,aAAa,IAAIA,aAAa,CAACO,YAAnC,EAAiD;AAC/CP,IAAAA,aAAa,CAACO,YAAd,CAA2B,IAA3B,EAAiCJ,SAAS,CAAC1M,KAA3C,EAAkD4M,SAAS,CAACG,QAAV,GAAqBH,SAAS,CAACvgB,IAAjF;AACD,GAFD,MAEO;AACLugB,IAAAA,SAAS,CAAC5I,MAAV,GAAmB,EAAnB;AACD;AACF;SAEeiJ,gBAAgBtY;AAE9B,MAAIuY,mBAAmB,GAAGvY,GAAG,CAACH,OAAJ,CAAYkO,IAAZ,GAAmB,OAAnB,GAA6B,UAAvD;AACA,MAAI1F,YAAY,GAAGrI,GAAG,CAACH,OAAJ,CAAYwI,YAAZ,IAA4BkQ,mBAA/C;AACA,SAAOlQ,YAAP;AACD;SAEemQ,0BAA0BxY,KAAKH;AAC7CA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,MAAI/D,QAAQ,CAAC+D,OAAD,CAAZ,EAAuB;AACrBA,IAAAA,OAAO,GAAG;AAAEvD,MAAAA,GAAG,EAAEuD;AAAP,KAAV;AACD,GAFD,MAEO;AACLA,IAAAA,OAAO,GAAGA,OAAV;AACD;AAED,MAAIvD,GAAG,GAAGuD,OAAO,CAACvD,GAAlB;AACA,MAAI+L,YAAY,GAAGxI,OAAO,CAACwI,YAAR,IAAwBiQ,eAAe,CAACtY,GAAD,CAA1D;AACA,MAAIiY,SAAS,GAAGjY,GAAG,CAACqH,KAAJ,CAAUwQ,YAAV,CAAuBK,YAAvB,EAAhB;AACA,MAAIO,QAAJ;AAEA,MAAIpQ,YAAY,KAAK,OAArB,EAA8B;AAC5BoQ,IAAAA,QAAQ,GAAGnc,GAAG,GAAGA,GAAG,CAACM,SAAJ,CAAc,yBAAAN,GAAG,MAAH,CAAAA,GAAG,EAAS,GAAT,CAAjB,CAAH,GAAqC2b,SAAS,CAAC5I,MAA7D;AACD,GAFD,MAEO;AACLoJ,IAAAA,QAAQ,GAAGnc,GAAG,GAAGA,GAAG,CAACM,SAAJ,CAAc,yBAAAN,GAAG,MAAH,CAAAA,GAAG,EAAS,GAAT,CAAjB,CAAH,GAAqC2b,SAAS,CAACvgB,IAA7D;AACD;AAED,MAAI,CAAC+gB,QAAL,EAAe;AACb,UAAM,IAAInkB,YAAJ,CAAiB,sCAAjB,CAAN;AACD;AAED,SAAOkc,iBAAiB,CAACiI,QAAD,CAAxB;AACD;SAEeC,0BAA0B1Y,KAAKH;AAE7C,MAAMwI,YAAY,GAAGxI,OAAO,CAACwI,YAAR,IAAwBiQ,eAAe,CAACtY,GAAD,CAA5D;AACAqI,EAAAA,YAAY,KAAK,OAAjB,GAA2BgQ,YAAY,CAACrY,GAAD,CAAvC,GAA+C2X,UAAU,CAAC3X,GAAD,CAAzD;AACD;SAEqB6X,YAAtB;AAAA;AAAA;;8DAAO,iBAA4B7X,GAA5B,EAAiCH,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AACLA,YAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,gBAAI/D,QAAQ,CAAC+D,OAAD,CAAZ,EAAuB;AACrBA,cAAAA,OAAO,GAAG;AAAEvD,gBAAAA,GAAG,EAAEuD;AAAP,eAAV;AACD,aAFD,MAEO;AACLA,cAAAA,OAAO,GAAGA,OAAV;AACD;AAEK0B,YAAAA,GARD,GAQsBiX,yBAAyB,CAACxY,GAAD,EAAMH,OAAN,CAR/C;AASCyI,YAAAA,KATD,GASS/G,GAAG,CAAC+G,KATb;AAUCZ,YAAAA,WAVD,GAUgC1H,GAAG,CAACmX,kBAAJ,CAAuBwB,IAAvB,CAA4B;AAC/DlB,cAAAA,KAAK,EAAE,IADwD;AAE/D1J,cAAAA,IAAI,EAAE/N,GAAG,CAACH,OAAJ,CAAYkO,IAF6C;AAG/DzF,cAAAA,KAAK,EAALA;AAH+D,aAA5B,CAVhC;AAAA,gBAeAZ,WAfA;AAAA;AAAA;AAAA;AAAA,6CAgBI,SAAQ1E,MAAR,CAAe,IAAI1O,YAAJ,CAAiB,uDAAjB,CAAf,CAhBJ;AAAA;AAkBC+U,YAAAA,IAlBD,GAkBoB3B,WAAW,CAAC2B,IAlBhC;AAmBL,mBAAO3B,WAAW,CAAC2B,IAAnB;AAEA,gBAAI,CAACxJ,OAAO,CAACvD,GAAb,EAAkB;AAEhBoc,cAAAA,yBAAyB,CAAC1Y,GAAD,EAAMH,OAAN,CAAzB;AACD;AAxBI,6CA0BEwT,mBAAmB,CAACrT,GAAD,EAAM0H,WAAN,EAAmBnG,GAAnB,EAAwB8H,IAAxB,CAAnB,CACJtH,KADI,CACE,UAAAlO,GAAG;AACR,kBAAI,CAACqa,0BAA0B,CAACra,GAAD,CAA/B,EAAsC;AACpCmM,gBAAAA,GAAG,CAACmX,kBAAJ,CAAuBC,KAAvB,CAA6B;AAC3B9O,kBAAAA,KAAK,EAALA;AAD2B,iBAA7B;AAGD;AACD,oBAAMzU,GAAN;AACD,aARI,EASJyD,IATI,CASC,UAAAiK,GAAG;AACPvB,cAAAA,GAAG,CAACmX,kBAAJ,CAAuBC,KAAvB,CAA6B;AAC3B9O,gBAAAA,KAAK,EAALA;AAD2B,eAA7B;AAGA,qBAAO/G,GAAP;AACD,aAdI,CA1BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;ACtEP,IAAMqX,sBAAsB,GAAG,SAAzBA,sBAAyB;MAACC,+FAA+C;AAC7E,MAAMC,WAAW,GAAoC,EAArD;AACAD,EAAAA,wBAAwB,CAACve,OAAzB,CAAiC,UAACye,WAAD;AAC/B,QAAIA,WAAW,CAACjc,GAAZ,KAAoB,UAAxB,EAAoC;AAClCgc,MAAAA,WAAW,CAAC/b,IAAZ,CAAiB;AACfwI,QAAAA,IAAI,EAAE,YADS;AAEf4M,QAAAA,EAAE,EAAE3b,iBAAiB,CAACuiB,WAAW,CAACC,YAAb;AAFN,OAAjB;AAID;AACF,GAPD;AAQA,SAAOF,WAAP;AACD,CAXD;AAeO,IAAMG,8BAA8B,GAAG,SAAjCA,8BAAiC,CAC5CC,cAD4C,EACZL,wBADY;AAG5C,SAAO;AACLM,IAAAA,SAAS,EAAE;AACTC,MAAAA,EAAE,EAAEF,cAAc,CAACE,EADV;AAETxS,MAAAA,IAAI,EAAE;AACJuL,QAAAA,EAAE,EAAE3b,iBAAiB,CAAC0iB,cAAc,CAACtS,IAAf,CAAoBuL,EAArB,CADjB;AAEJne,QAAAA,IAAI,EAAEklB,cAAc,CAACtS,IAAf,CAAoB5S,IAFtB;AAGJqlB,QAAAA,WAAW,EAAEH,cAAc,CAACtS,IAAf,CAAoByS;AAH7B,OAFG;AAOTC,MAAAA,SAAS,EAAE9iB,iBAAiB,CAAC0iB,cAAc,CAACI,SAAhB,CAPnB;AAQTC,MAAAA,gBAAgB,EAAEL,cAAc,CAACK,gBARxB;AASTC,MAAAA,WAAW,EAAEN,cAAc,CAACM,WATnB;AAUTC,MAAAA,sBAAsB,EAAEP,cAAc,CAACO,sBAV9B;AAWTC,MAAAA,kBAAkB,EAAEd,sBAAsB,CAACC,wBAAD;AAXjC;AADN,GAAP;AAeD,CAlBM;AAuBA,IAAMc,6BAA6B,GAAG,SAAhCA,6BAAgC,CAC3CC,aAD2C,EACbf,wBADa;AAG3C,SAAO;AACLM,IAAAA,SAAS,EAAE;AACTG,MAAAA,SAAS,EAAE9iB,iBAAiB,CAACojB,aAAa,CAACN,SAAf,CADnB;AAETO,MAAAA,gBAAgB,EAAED,aAAa,CAACC,gBAFvB;AAGTC,MAAAA,gBAAgB,EAAElB,sBAAsB,CAACC,wBAAD;AAH/B;AADN,GAAP;AAOD,CAVM;AAcA,IAAMkB,cAAc,GAAG,SAAjBA,cAAiB,CAACC,UAAD;AAC5B,MAAM/Y,QAAQ,GAAG+Y,UAAU,CAAC/Y,QAA5B;AACA,MAAMkR,EAAE,GAAG6H,UAAU,CAAC7H,EAAtB;AACA,MAAM8H,UAAU,GAAGvjB,iBAAiB,CAACuK,QAAQ,CAACiZ,cAAV,CAApC;AACA,MAAMV,WAAW,GAAG9iB,iBAAiB,CAACuK,QAAQ,CAACkZ,iBAAV,CAArC;AACA,SAAO;AACLhI,IAAAA,EAAE,EAAFA,EADK;AAEL8H,IAAAA,UAAU,EAAVA,UAFK;AAGLT,IAAAA,WAAW,EAAXA;AAHK,GAAP;AAKD,CAVM;AAcA,IAAMY,YAAY,GAAG,SAAfA,YAAe,CAACJ,UAAD;AAC1B,MAAM/Y,QAAQ,GAAG+Y,UAAU,CAAC/Y,QAA5B;AACA,MAAMkR,EAAE,GAAG6H,UAAU,CAAC7H,EAAtB;AACA,MAAM8H,UAAU,GAAGvjB,iBAAiB,CAACuK,QAAQ,CAACiZ,cAAV,CAApC;AACA,MAAMG,iBAAiB,GAAG3jB,iBAAiB,CAACuK,QAAQ,CAACoZ,iBAAV,CAA3C;AACA,MAAMC,aAAa,GAAG5jB,iBAAiB,CAACuK,QAAQ,CAAChD,SAAV,CAAvC;AACA,SAAO;AACLkU,IAAAA,EAAE,EAAFA,EADK;AAEL8H,IAAAA,UAAU,EAAVA,UAFK;AAGLI,IAAAA,iBAAiB,EAAjBA,iBAHK;AAILC,IAAAA,aAAa,EAAbA;AAJK,GAAP;AAMD,CAZM;;;;;;;;;;ACrDP,IAAIja,WAAW,GAAuB;AAGpCI,EAAAA,YAHoC;AAIlC,WAAO,IAAP;AACD,GALmC;AAOpC8Z,EAAAA,cAPoC;AAQlC,WAAO,IAAP;AACD,GATmC;AAapCC,EAAAA,sBAAsB,EAAE;AACtB,QAAI;AACF,UAAIla,OAAO,GAAG,KAAKma,eAAL,EAAd;AACA,aAAO,KAAKC,WAAL,CAAiBpa,OAAjB,CAAP;AACD,KAHD,CAGE,OAAOrK,CAAP,EAAU;AACV,aAAO,KAAP;AACD;AACF,GApBmC;AAsBpC0kB,EAAAA,wBAAwB,EAAE;AACxB,QAAI;AACF,UAAIra,OAAO,GAAG,KAAKsa,iBAAL,EAAd;AACA,aAAO,KAAKF,WAAL,CAAiBpa,OAAjB,CAAP;AACD,KAHD,CAGE,OAAOrK,CAAP,EAAU;AACV,aAAO,KAAP;AACD;AACF,GA7BmC;AA+BpC4kB,EAAAA,eAAe,EAAE,yBAASC,WAAT;AACf,QAAIC,SAAS,GAAG,KAAhB;AACA,YAAQD,WAAR;AACE,WAAK,gBAAL;AACEC,QAAAA,SAAS,GAAG,KAAKJ,wBAAL,EAAZ;AACA;AACF,WAAK,cAAL;AACEI,QAAAA,SAAS,GAAG,KAAKP,sBAAL,EAAZ;AACA;AACF,WAAK,QAAL;AACA,WAAK,QAAL;AACEO,QAAAA,SAAS,GAAG,IAAZ;AACA;AACF;AACEA,QAAAA,SAAS,GAAG,KAAZ;AACA;AAbJ;AAeA,WAAOA,SAAP;AACD,GAjDmC;AAmDpCC,EAAAA,gBAAgB,EAAE,0BAASF,WAAT,EAAmCjb,OAAnC;AAChB,QAAIob,eAAJ;AACA,YAAQH,WAAR;AACE,WAAK,gBAAL;AACEG,QAAAA,eAAe,GAAG,KAAKL,iBAAL,EAAlB;AACA;AACF,WAAK,cAAL;AACEK,QAAAA,eAAe,GAAG,KAAKR,eAAL,EAAlB;AACA;AACF,WAAK,QAAL;AACEQ,QAAAA,eAAe,GAAG,KAAKC,gBAAL,CAAsBrb,OAAtB,CAAlB;AACA;AACF,WAAK,QAAL;AACEob,QAAAA,eAAe,GAAG,KAAKE,kBAAL,EAAlB;AACA;AACF;AACE,cAAM,IAAI7mB,YAAJ,wCAAiDwmB,WAAjD,EAAN;AAdJ;AAiBA,WAAOG,eAAP;AACD,GAvEmC;AAyEpCG,EAAAA,eAAe,EAAE,yBAASC,KAAT;;AACf,QAAIC,OAAJ;AACA,QAAIC,QAAJ;AAEAF,IAAAA,KAAK,GAAG,uBAAAA,KAAK,MAAL,CAAAA,KAAK,CAAb;AACAC,IAAAA,OAAO,GAAGD,KAAK,CAACG,KAAN,EAAV;AACAD,IAAAA,QAAQ,GAAGF,KAAK,CAACxlB,MAAN,GAAewlB,KAAK,CAAC,CAAD,CAApB,GAA0B,IAArC;AACA,QAAI,CAACE,QAAL,EAAe;AACb,aAAOD,OAAP;AACD;AAED,QAAI,KAAKT,eAAL,CAAqBS,OAArB,CAAJ,EAAmC;AACjC,aAAOA,OAAP;AACD;AAGDnjB,IAAAA,IAAI,2EAAiCmjB,OAAjC,qCAA0DC,QAA1D,OAAJ;AAGA,WAAO,KAAKH,eAAL,CAAqBC,KAArB,CAAP;AACD,GA7FmC;AA+FpCZ,EAAAA,eAAe,EAAE;AACf,WAAOgB,YAAP;AACD,GAjGmC;AAmGpCb,EAAAA,iBAAiB,EAAE;AACjB,WAAOc,cAAP;AACD,GArGmC;AAwGpCR,EAAAA,gBAAgB,EAAE,0BAASrb,OAAT;;AAChB,QAAM8b,MAAM,GAAG9b,OAAQ,CAAC8b,MAAxB;AACA,QAAMC,QAAQ,GAAG/b,OAAQ,CAAC+b,QAA1B;AACA,QAAMC,aAAa,GAAGhc,OAAQ,CAACgc,aAA/B;AACA,QAAI,OAAOF,MAAP,KAAkB,WAAlB,IAAiC,OAAOC,QAAP,KAAoB,WAAzD,EAAsE;AACpE,YAAM,IAAItnB,YAAJ,CAAiB,oEAAjB,CAAN;AACD;AACD,QAAMgM,OAAO,GAAkB;AAC7Bwb,MAAAA,OAAO,EAAE,KAAKxb,OAAL,CAAa6B,GADO;AAE7B4Z,MAAAA,OAAO,EAAE,iBAACjf,GAAD,EAAMlC,KAAN;YAAaoG,gFAAY;AAEhCA,QAAAA,SAAS,GAAI6a,aAAa,GAAG,IAAH,GAAU7a,SAApC;AACA,QAAA,KAAI,CAACV,OAAL,CAAauB,GAAb,CAAiB/E,GAAjB,EAAsBlC,KAAtB,EAA6BoG,SAA7B,EAAwC;AACtC2a,UAAAA,MAAM,EAAEA,MAD8B;AAEtCC,UAAAA,QAAQ,EAAEA;AAF4B,SAAxC;AAID,OAT4B;AAU7BI,MAAAA,UAAU,EAAE,oBAAClf,GAAD;AACV,QAAA,KAAI,CAACwD,OAAL,CAAasB,MAAb,CAAoB9E,GAApB;AACD;AAZ4B,KAA/B;AAeA,QAAI,CAAC+C,OAAQ,CAACoc,kBAAd,EAAkC;AAChC,aAAO3b,OAAP;AACD;AAKD,WAAO;AACLwb,MAAAA,OAAO,EAAE,iBAAShf,GAAT;AACP,YAAIwE,IAAI,GAAGhB,OAAO,CAACwb,OAAR,EAAX;AACA,YAAIlhB,KAAK,GAAG,EAAZ;AACA,qBAAY0G,IAAZ,EAAkBhH,OAAlB,CAA0B,UAAA4hB,CAAC;AACzB,cAAI,yBAAAA,CAAC,MAAD,CAAAA,CAAC,EAASpf,GAAT,CAAD,KAAoB,CAAxB,EAA2B;AACzBlC,YAAAA,KAAK,CAACshB,CAAC,CAACzmB,OAAF,WAAaqH,GAAb,QAAqB,EAArB,CAAD,CAAL,GAAkChC,IAAI,CAACC,KAAL,CAAWuG,IAAI,CAAC4a,CAAD,CAAf,CAAlC,CADyB;AAE1B;AACF,SAJD;AAKA,eAAO,gBAAethB,KAAf,CAAP;AACD,OAVI;AAWLmhB,MAAAA,OAAO,EAAE,iBAASjf,GAAT,EAAclC,KAAd;AACP,YAAIuhB,cAAc,GAAGrhB,IAAI,CAACC,KAAL,CAAW,KAAK+gB,OAAL,CAAahf,GAAb,CAAX,CAArB;AACAlC,QAAAA,KAAK,GAAGE,IAAI,CAACC,KAAL,CAAWH,KAAX,CAAR;AAEA,qBAAYA,KAAZ,EAAmBN,OAAnB,CAA2B,UAAA4hB,CAAC;AAC1B,cAAIE,UAAU,GAAGtf,GAAG,GAAG,GAAN,GAAYof,CAA7B;AACA,cAAIG,YAAY,GAAG,gBAAezhB,KAAK,CAACshB,CAAD,CAApB,CAAnB;AACA5b,UAAAA,OAAO,CAACyb,OAAR,CAAgBK,UAAhB,EAA4BC,YAA5B;AACA,iBAAOF,cAAc,CAACD,CAAD,CAArB;AACD,SALD;AAOA,qBAAYC,cAAZ,EAA4B7hB,OAA5B,CAAoC,UAAA4hB,CAAC;AACnC5b,UAAAA,OAAO,CAAC0b,UAAR,CAAmBlf,GAAG,GAAG,GAAN,GAAYof,CAA/B;AACD,SAFD;AAGD,OAzBI;AA0BLF,MAAAA,UAAU,EAAE,oBAASlf,GAAT;AACV,YAAIqf,cAAc,GAAGrhB,IAAI,CAACC,KAAL,CAAW,KAAK+gB,OAAL,CAAahf,GAAb,CAAX,CAArB;AACA,qBAAYqf,cAAZ,EAA4B7hB,OAA5B,CAAoC,UAAA4hB,CAAC;AACnC5b,UAAAA,OAAO,CAAC0b,UAAR,CAAmBlf,GAAG,GAAG,GAAN,GAAYof,CAA/B;AACD,SAFD;AAGD;AA/BI,KAAP;AAiCD,GAtKmC;AAyKpCI,EAAAA,aAAa,EAAE,EAzKqB;AA0KpCnB,EAAAA,kBAAkB,EAAE;;AAClB,WAAO;AACLW,MAAAA,OAAO,EAAE,iBAAChf,GAAD;AACP,eAAO,MAAI,CAACwf,aAAL,CAAmBxf,GAAnB,CAAP;AACD,OAHI;AAILif,MAAAA,OAAO,EAAE,iBAACjf,GAAD,EAAMlC,KAAN;AACP,QAAA,MAAI,CAAC0hB,aAAL,CAAmBxf,GAAnB,IAA0BlC,KAA1B;AACD;AANI,KAAP;AAQD,GAnLmC;AAqLpC8f,EAAAA,WAAW,EAAE,qBAASpa,OAAT;AACX,QAAIxD,GAAG,GAAG,mBAAV;AACA,QAAI;AACFwD,MAAAA,OAAO,CAACyb,OAAR,CAAgBjf,GAAhB,EAAqBA,GAArB;AACAwD,MAAAA,OAAO,CAAC0b,UAAR,CAAmBlf,GAAnB;AACA,aAAO,IAAP;AACD,KAJD,CAIE,OAAO7G,CAAP,EAAU;AACV,aAAO,KAAP;AACD;AACF,GA9LmC;AAgMpCqK,EAAAA,OAAO,EAAE;AACPuB,IAAAA,GAAG,EAAE,aAAS7N,IAAT,EAAuB4G,KAAvB,EAAsCoG,SAAtC,EAAyDnB,OAAzD;AACH,UAAQ+b,QAAR,GAA6B/b,OAA7B,CAAQ+b,QAAR;AAAA,UAAkBD,MAAlB,GAA6B9b,OAA7B,CAAkB8b,MAAlB;AACA,UAAI,OAAOA,MAAP,KAAkB,WAAlB,IAAiC,OAAOC,QAAP,KAAoB,WAAzD,EAAsE;AACpE,cAAM,IAAItnB,YAAJ,CAAiB,+DAAjB,CAAN;AACD;AACD,UAAIioB,aAAa,GAAkB;AACjCrf,QAAAA,IAAI,EAAE2C,OAAO,CAAC3C,IAAR,IAAgB,GADW;AAEjCye,QAAAA,MAAM,EAANA,MAFiC;AAGjCC,QAAAA,QAAQ,EAARA;AAHiC,OAAnC;AAOA,UAAI,CAAC,CAAE7iB,IAAI,CAACgC,KAAL,CAAWiG,SAAX,CAAP,EAA+B;AAK7Bub,QAAAA,aAAa,CAACC,OAAd,GAAwB,IAAIzjB,IAAJ,CAASiI,SAAT,CAAxB;AACD;AAEDyb,MAAAA,OAAO,CAAC5a,GAAR,CAAY7N,IAAZ,EAAkB4G,KAAlB,EAAyB2hB,aAAzB;AACA,aAAO,KAAKpa,GAAL,CAASnO,IAAT,CAAP;AACD,KAvBM;AAyBPmO,IAAAA,GAAG,EAAE,aAASnO,IAAT;AAEH,UAAI,CAAC0E,SAAS,CAAC7C,MAAf,EAAuB;AACrB,eAAO4mB,OAAO,CAACta,GAAR,EAAP;AACD;AACD,aAAOsa,OAAO,CAACta,GAAR,CAAYnO,IAAZ,CAAP;AACD,KA/BM;AAiCP4N,IAAAA,MAAM,EAAE,iBAAS5N,IAAT;AACN,aAAOyoB,OAAO,CAACC,MAAR,CAAe1oB,IAAf,EAAqB;AAAEkJ,QAAAA,IAAI,EAAE;AAAR,OAArB,CAAP;AACD;AAnCM;AAhM2B,CAAtC;;ICjBqByf;AAGnB,oBAAYC,WAAZ;;AAEE,SAAKA,WAAL,GAAmB,UAASA,WAAW,IAAI,CAAxB,CAAnB;AACD;;;;AAUD;AACE,UAAI7b,GAAG,GAAG,CAAChI,IAAI,CAACgI,GAAL,KAAa,KAAK6b,WAAnB,IAAkC,IAA5C;AACA,aAAO7b,GAAP;AACD;;;WAVD;;AAEE,UAAI6b,WAAW,GAAG,CAAlB;AACA,aAAO,IAAID,QAAJ,CAAaC,WAAb,CAAP;AACD;;;;;ACeH,IAAMC,eAAe,GAAG;AAEtBC,EAAAA,SAAS,EAAE,IAFW;AAGtBC,EAAAA,UAAU,EAAE,IAHU;AAItBC,EAAAA,WAAW,EAAE,IAJS;AAMtBC,EAAAA,wBAAwB,EAAE,IANJ;AAOtB3c,EAAAA,OAAO,EAAEvI,SAPa;AAQtBmlB,EAAAA,kBAAkB,EAAE,EARE;AAStBd,EAAAA,UAAU,EAAE1d,kBATU;AAUtBye,EAAAA,kBAAkB,EAAE;AAVE,CAAxB;IAYaC,aAAa,GAAG;IAChBC,aAAa,GAAG;IAChBC,WAAW,GAAG;IACdC,aAAa,GAAG;IAChBC,WAAW,GAAG;AAM3B,SAASC,YAAT;AACE,SAAO;AACLC,IAAAA,cAAc,EAAE,EADX;AAELC,IAAAA,YAAY,EAAE;AAFT,GAAP;AAID;IACYC,YAAb;AAYE,wBAAY5d,GAAZ;QAAoCH,8EAA+B;;AACjE,SAAKG,GAAL,GAAWA,GAAX;AACA,SAAK6d,OAAL,GAAgB7d,GAAW,CAAC6d,OAA5B;AACA,QAAI,CAAC,KAAKA,OAAV,EAAmB;AACjB,YAAM,IAAIvpB,YAAJ,CAAiB,mDAAjB,CAAN;AACD;AAEDuL,IAAAA,OAAO,GAAG,eAAc,EAAd,EAAkBgd,eAAlB,EAAmCniB,UAAU,CAACmF,OAAD,CAA7C,CAAV;AACA,QAAIgN,YAAY,EAAhB,EAAoB;AAClBhN,MAAAA,OAAO,CAACsd,kBAAR,GAA6Btd,OAAO,CAACsd,kBAAR,IAA8B,IAA3D;AACD;AACD,QAAI,CAACvP,WAAW,EAAhB,EAAoB;AAClB/N,MAAAA,OAAO,CAACqd,kBAAR,GAA6BL,eAAe,CAACK,kBAA7C;AACD;AAED,SAAKrd,OAAL,GAAeA,OAAf;AAEA,QAAMie,cAAc,GAAmBpjB,UAAU,CAAC;AAChD0hB,MAAAA,UAAU,EAAEvc,OAAO,CAACuc,UAD4B;AAEhDT,MAAAA,MAAM,EAAE9b,OAAO,CAAC8b;AAFgC,KAAD,CAAjD;AAIA,QAAI,QAAO9b,OAAO,CAACS,OAAf,MAA2B,QAA/B,EAAyC;AAEvCwd,MAAAA,cAAc,CAAC7C,eAAf,GAAiCpb,OAAO,CAACS,OAAzC;AACD,KAHD,MAGO,IAAIT,OAAO,CAACS,OAAZ,EAAqB;AAC1Bwd,MAAAA,cAAc,CAAChD,WAAf,GAA6Bjb,OAAO,CAACS,OAArC;AACD;AAED,SAAKA,OAAL,GAAeN,GAAG,CAACQ,cAAJ,CAAmBud,eAAnB,mCAAuCD;AAAgB7B,MAAAA,kBAAkB,EAAE;MAA3E,CAAf;AACA,SAAK+B,KAAL,GAAarB,QAAQ,CAACsB,MAAT,EAAb;AACA,SAAK3V,KAAL,GAAamV,YAAY,EAAzB;AAEA,SAAKS,EAAL,GAAU,KAAKL,OAAL,CAAaK,EAAb,CAAgBrkB,IAAhB,CAAqB,KAAKgkB,OAA1B,CAAV;AACA,SAAKM,GAAL,GAAW,KAAKN,OAAL,CAAaM,GAAb,CAAiBtkB,IAAjB,CAAsB,KAAKgkB,OAA3B,CAAX;AACD;AA9CH;AAAA;AAAA,WAgDE;AACE,UAAI,KAAKhe,OAAL,CAAaod,wBAAjB,EAA2C;AACzC,aAAKA,wBAAL;AACD;AACD,WAAKmB,wBAAL;AACD;AArDH;AAAA;AAAA,WAuDE;AACE,WAAKC,0BAAL;AACD;AAzDH;AAAA;AAAA,WA2DE;AACE,aAAOxjB,KAAK,CAAC,KAAKgF,OAAN,CAAZ;AACD;AA7DH;AAAA;AAAA,WA+DE,uBAAcwH,KAAd;AACE,UAAM6V,kBAAkB,GAAG,KAAKrd,OAAL,CAAaqd,kBAAb,IAAmC,CAA9D;AACA,UAAIoB,UAAU,GAAGjX,KAAK,CAACrG,SAAN,GAAkBkc,kBAAnC;AACA,aAAOoB,UAAP;AACD;AAnEH;AAAA;AAAA,WAqEE,oBAAWjX,KAAX;AACE,UAAIiX,UAAU,GAAG,KAAKC,aAAL,CAAmBlX,KAAnB,CAAjB;AACA,aAAOiX,UAAU,IAAI,KAAKN,KAAL,CAAWjd,GAAX,EAArB;AACD;AAxEH;AAAA;AAAA,WA0EE,qBAAYjE,GAAZ,EAAiBuK,KAAjB;AACE,WAAKwW,OAAL,CAAaW,IAAb,CAAkBpB,aAAlB,EAAiCtgB,GAAjC,EAAsCuK,KAAtC;AACD;AA5EH;AAAA;AAAA,WA8EE,qBAAYvK,GAAZ,EAAiB2hB,UAAjB,EAA6BC,QAA7B;AACE,WAAKb,OAAL,CAAaW,IAAb,CAAkBnB,aAAlB,EAAiCvgB,GAAjC,EAAsC2hB,UAAtC,EAAkDC,QAAlD;AACD;AAhFH;AAAA;AAAA,WAkFE,mBAAU5hB,GAAV,EAAeuK,KAAf;AACE,WAAKwW,OAAL,CAAaW,IAAb,CAAkBlB,WAAlB,EAA+BxgB,GAA/B,EAAoCuK,KAApC;AACD;AApFH;AAAA;AAAA,WAsFE,qBAAYvK,GAAZ,EAAiBuK,KAAjB;AACE,WAAKwW,OAAL,CAAaW,IAAb,CAAkBjB,aAAlB,EAAiCzgB,GAAjC,EAAsCuK,KAAtC;AACD;AAxFH;AAAA;AAAA,WA0FE,mBAAU3S,KAAV;AACE,WAAKmpB,OAAL,CAAaW,IAAb,CAAkBhB,WAAlB,EAA+B9oB,KAA/B;AACD;AA5FH;AAAA;AAAA,WA8FE,6CAAoCiqB,QAApC,EAA8CC,QAA9C;;AACE,UAAMC,SAAS,GAAG,KAAKC,yBAAL,CAA+BF,QAA/B,CAAlB;AACA,UAAMG,SAAS,GAAG,KAAKD,yBAAL,CAA+BH,QAA/B,CAAlB;AACA,mBAAYI,SAAZ,EAAuBzkB,OAAvB,CAA+B,UAAAwC,GAAG;AAChC,YAAM4hB,QAAQ,GAAGG,SAAS,CAAC/hB,GAAD,CAA1B;AACA,YAAMkiB,QAAQ,GAAGD,SAAS,CAACjiB,GAAD,CAA1B;AACA,YAAI,gBAAe4hB,QAAf,MAA6B,gBAAeM,QAAf,CAAjC,EAA2D;AACzD,UAAA,KAAI,CAACC,SAAL,CAAeniB,GAAf,EAAoBkiB,QAApB;AACD;AACF,OAND;AAOA,mBAAYH,SAAZ,EAAuBvkB,OAAvB,CAA+B,UAAAwC,GAAG;AAChC,YAAM4hB,QAAQ,GAAGG,SAAS,CAAC/hB,GAAD,CAA1B;AACA,YAAMkiB,QAAQ,GAAGD,SAAS,CAACjiB,GAAD,CAA1B;AACA,YAAI,CAACkiB,QAAL,EAAe;AACb,UAAA,KAAI,CAACE,WAAL,CAAiBpiB,GAAjB,EAAsB4hB,QAAtB;AACD;AACF,OAND;AAOD;AA/GH;AAAA;AAAA,WAiHE,iCAAwB5hB,GAAxB;AACEiP,MAAAA,YAAY,CAAC,KAAKzD,KAAL,CAAWoV,cAAX,CAA0B5gB,GAA1B,CAAD,CAAZ;AACA,aAAO,KAAKwL,KAAL,CAAWoV,cAAX,CAA0B5gB,GAA1B,CAAP;AAGA,WAAKwL,KAAL,CAAWqV,YAAX,GAA0B,IAA1B;AACD;AAvHH;AAAA;AAAA,WAyHE;AACE,UAAID,cAAc,GAAG,KAAKpV,KAAL,CAAWoV,cAAhC;AACA,WAAK,IAAI5gB,GAAT,IAAgB4gB,cAAhB,EAAgC;AAC9B,YAAI,CAACljB,MAAM,CAAC9G,SAAP,CAAiB+G,cAAjB,CAAgCR,IAAhC,CAAqCyjB,cAArC,EAAqD5gB,GAArD,CAAL,EAAgE;AAC9D;AACD;AACD,aAAKqiB,uBAAL,CAA6BriB,GAA7B;AACD;AACF;AAjIH;AAAA;AAAA,WAmIE,+BAAsBA,GAAtB,EAA2BuK,KAA3B;;AACE,UAAIkL,cAAc,CAAClL,KAAD,CAAlB,EAA2B;AACzB;AACD;AAED,UAAIiX,UAAU,GAAG,KAAKC,aAAL,CAAmBlX,KAAnB,CAAjB;AACA,UAAI+X,eAAe,GAAG7lB,IAAI,CAAC8lB,GAAL,CAASf,UAAU,GAAG,KAAKN,KAAL,CAAWjd,GAAX,EAAtB,EAAwC,CAAxC,IAA6C,IAAnE;AAGA,WAAKoe,uBAAL,CAA6BriB,GAA7B;AAEA,UAAIwiB,kBAAkB,GAAG1lB,UAAU,CAAC;AAClC,QAAA,MAAI,CAAC2lB,WAAL,CAAiBziB,GAAjB,EAAsBuK,KAAtB;AACD,OAFkC,EAEhC+X,eAFgC,CAAnC;AAKA,WAAK9W,KAAL,CAAWoV,cAAX,CAA0B5gB,GAA1B,IAAiCwiB,kBAAjC;AACD;AApJH;AAAA;AAAA,WAsJE;AACE,UAAIE,YAAY,GAAG,KAAKlf,OAAL,CAAaO,UAAb,EAAnB;AACA,WAAI,IAAI/D,GAAR,IAAe0iB,YAAf,EAA6B;AAC3B,YAAI,CAAChlB,MAAM,CAAC9G,SAAP,CAAiB+G,cAAjB,CAAgCR,IAAhC,CAAqCulB,YAArC,EAAmD1iB,GAAnD,CAAL,EAA8D;AAC5D;AACD;AACD,YAAIuK,KAAK,GAAGmY,YAAY,CAAC1iB,GAAD,CAAxB;AACA,aAAK2iB,qBAAL,CAA2B3iB,GAA3B,EAAgCuK,KAAhC;AACD;AACF,KA/JH;AAAA;AAAA;AAAA,WAkKE;AACE,WAAKgX,0BAAL;AACA,WAAKD,wBAAL;AACD;AArKH;AAAA;AAAA,WAuKE,aAAIthB,GAAJ,EAASuK,KAAT;AACE,UAAImY,YAAY,GAAG,KAAKlf,OAAL,CAAaO,UAAb,EAAnB;AACA2R,MAAAA,aAAa,CAACnL,KAAD,CAAb;AACAmY,MAAAA,YAAY,CAAC1iB,GAAD,CAAZ,GAAoBuK,KAApB;AACA,WAAK/G,OAAL,CAAaof,UAAb,CAAwBF,YAAxB;AACA,WAAKP,SAAL,CAAeniB,GAAf,EAAoBuK,KAApB;AACA,WAAKoY,qBAAL,CAA2B3iB,GAA3B,EAAgCuK,KAAhC;AACD;AA9KH;AAAA;AAAA,WAgLE,iBAAQvK,GAAR;AACE,UAAI0iB,YAAY,GAAG,KAAKlf,OAAL,CAAaO,UAAb,EAAnB;AACA,aAAO2e,YAAY,CAAC1iB,GAAD,CAAnB;AACD;AAnLH;AAAA;AAAA;AAAA,6DAqLE,iBAAUA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA,iDACS,KAAK6iB,OAAL,CAAa7iB,GAAb,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OArLF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAyLE;AACE,UAAMsX,MAAM,GAAG,EAAf;AACA,UAAMoL,YAAY,GAAG,KAAKlf,OAAL,CAAaO,UAAb,EAArB;AACA,mBAAY2e,YAAZ,EAA0BllB,OAA1B,CAAkC,UAAAwC,GAAG;AACnC,YAAMuK,KAAK,GAAGmY,YAAY,CAAC1iB,GAAD,CAA1B;AACA,YAAIuV,aAAa,CAAChL,KAAD,CAAjB,EAA0B;AACxB+M,UAAAA,MAAM,CAACjU,WAAP,GAAqBkH,KAArB;AACD,SAFD,MAEO,IAAIiL,SAAS,CAACjL,KAAD,CAAb,EAAsB;AAC3B+M,UAAAA,MAAM,CAAC/W,OAAP,GAAiBgK,KAAjB;AACD,SAFM,MAEA,IAAIkL,cAAc,CAAClL,KAAD,CAAlB,EAA2B;AAChC+M,UAAAA,MAAM,CAAC5K,YAAP,GAAsBnC,KAAtB;AACD;AACF,OATD;AAUA,aAAO+M,MAAP;AACD;AAvMH;AAAA;AAAA;AAAA,mEAyME;AAAA;AAAA;AAAA;AAAA;AAAA,kDACS,KAAKgC,aAAL,EADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAzMF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WA6ME,6BAAoB7Q,IAApB;;AACE,UAAMia,YAAY,GAAG,KAAKlf,OAAL,CAAaO,UAAb,EAArB;AACA,UAAM/D,GAAG,GAAG,iDAAY0iB,YAAZ,mBAAiC,UAAA1iB,GAAG;AAC9C,YAAMuK,KAAK,GAAGmY,YAAY,CAAC1iB,GAAD,CAA1B;AACA,eAAQuV,aAAa,CAAChL,KAAD,CAAb,IAAwB9B,IAAI,KAAK,aAAlC,IACD+M,SAAS,CAACjL,KAAD,CAAT,IAAoB9B,IAAI,KAAK,SAD5B,IAEDgN,cAAc,CAAClL,KAAD,CAAd,IAAyB9B,IAAI,KAAK,cAFxC;AAGD,OALW,EAKT,CALS,CAAZ;AAMA,aAAOzI,GAAP;AACD;AAtNH;AAAA;AAAA,WAwNU,sBAAauK,KAAb;AACN,UAAIgL,aAAa,CAAChL,KAAD,CAAjB,EAA0B;AACxB,eAAO,aAAP;AACD;AACD,UAAIiL,SAAS,CAACjL,KAAD,CAAb,EAAsB;AACpB,eAAO,SAAP;AACD;AACD,UAAGkL,cAAc,CAAClL,KAAD,CAAjB,EAA0B;AACxB,eAAO,cAAP;AACD;AACD,YAAM,IAAI/S,YAAJ,CAAiB,oBAAjB,CAAN;AACD;AAnOH;AAAA;AAAA,WAqOE,mBACE8f,MADF;AAGEwL,IAAAA,aAHF,EAIEC,SAJF,EAKEC,cALF;;AAOE,UAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACjjB,GAAD,EAAMuK,KAAN;AAC1B,YAAM9B,IAAI,GAAG,MAAI,CAACya,YAAL,CAAkB3Y,KAAlB,CAAb;AACA,YAAI9B,IAAI,KAAK,aAAb,EAA4B;AAC1Bqa,UAAAA,aAAa,IAAIA,aAAa,CAAC9iB,GAAD,EAAMuK,KAAN,CAA9B;AACD,SAFD,MAEO,IAAI9B,IAAI,KAAK,SAAb,EAAwB;AAC7Bsa,UAAAA,SAAS,IAAIA,SAAS,CAAC/iB,GAAD,EAAMuK,KAAN,CAAtB;AACD,SAFM,MAEA,IAAI9B,IAAI,KAAK,cAAb,EAA6B;AAClCua,UAAAA,cAAc,IAAIA,cAAc,CAAChjB,GAAD,EAAMuK,KAAN,CAAhC;AACD;AACF,OATD;AAUA,UAAM4Y,WAAW,GAAG,SAAdA,WAAc,CAACnjB,GAAD,EAAMuK,KAAN;AAClB,QAAA,MAAI,CAAC4X,SAAL,CAAeniB,GAAf,EAAoBuK,KAApB;AACA,QAAA,MAAI,CAACoY,qBAAL,CAA2B3iB,GAA3B,EAAgCuK,KAAhC;AACA0Y,QAAAA,mBAAmB,CAACjjB,GAAD,EAAMuK,KAAN,CAAnB;AACD,OAJD;AAKA,UAAM6Y,aAAa,GAAG,SAAhBA,aAAgB,CAACpjB,GAAD,EAAMuK,KAAN,EAAaqX,QAAb;AACpB,QAAA,MAAI,CAACyB,WAAL,CAAiBrjB,GAAjB,EAAsBuK,KAAtB,EAA6BqX,QAA7B;AACA,QAAA,MAAI,CAACS,uBAAL,CAA6BriB,GAA7B;AACA,QAAA,MAAI,CAAC2iB,qBAAL,CAA2B3iB,GAA3B,EAAgCuK,KAAhC;AACA0Y,QAAAA,mBAAmB,CAACjjB,GAAD,EAAMuK,KAAN,CAAnB;AACD,OALD;AAMA,UAAM+Y,aAAa,GAAG,SAAhBA,aAAgB,CAACtjB,GAAD,EAAMuK,KAAN;AACpB,QAAA,MAAI,CAAC8X,uBAAL,CAA6BriB,GAA7B;AACA,QAAA,MAAI,CAACoiB,WAAL,CAAiBpiB,GAAjB,EAAsBuK,KAAtB;AACA0Y,QAAAA,mBAAmB,CAACjjB,GAAD,EAAMuK,KAAN,CAAnB;AACD,OAJD;AAMA,UAAMgU,KAAK,GAAgB,CAAC,SAAD,EAAY,aAAZ,EAA2B,cAA3B,CAA3B;AACA,UAAMgF,cAAc,GAAG,KAAKjK,aAAL,EAAvB;AAGAiF,MAAAA,KAAK,CAAC/gB,OAAN,CAAc,UAACiL,IAAD;AACZ,YAAM8B,KAAK,GAAG+M,MAAM,CAAC7O,IAAD,CAApB;AACA,YAAI8B,KAAJ,EAAW;AACTmL,UAAAA,aAAa,CAACnL,KAAD,EAAQ9B,IAAR,CAAb;AACD;AACF,OALD;AAQA,UAAMjF,OAAO,GAAG,wBAAA+a,KAAK,MAAL,CAAAA,KAAK,EAAQ,UAAC/a,OAAD,EAAUiF,IAAV;AAC3B,YAAM8B,KAAK,GAAG+M,MAAM,CAAC7O,IAAD,CAApB;AACA,YAAI8B,KAAJ,EAAW;AACT,cAAM+U,UAAU,GAAG,MAAI,CAACkE,mBAAL,CAAyB/a,IAAzB,KAAkCA,IAArD;AACAjF,UAAAA,OAAO,CAAC8b,UAAD,CAAP,GAAsB/U,KAAtB;AACD;AACD,eAAO/G,OAAP;AACD,OAPoB,EAOlB,EAPkB,CAArB;AAQA,WAAKA,OAAL,CAAaof,UAAb,CAAwBpf,OAAxB;AAGA+a,MAAAA,KAAK,CAAC/gB,OAAN,CAAc,UAAAiL,IAAI;AAChB,YAAMyZ,QAAQ,GAAG5K,MAAM,CAAC7O,IAAD,CAAvB;AACA,YAAMgb,aAAa,GAAGF,cAAc,CAAC9a,IAAD,CAApC;AACA,YAAM6W,UAAU,GAAG,MAAI,CAACkE,mBAAL,CAAyB/a,IAAzB,KAAkCA,IAArD;AACA,YAAIyZ,QAAQ,IAAIuB,aAAhB,EAA+B;AAE7BH,UAAAA,aAAa,CAAChE,UAAD,EAAamE,aAAb,CAAb;AACAN,UAAAA,WAAW,CAAC7D,UAAD,EAAa4C,QAAb,CAAX;AACAkB,UAAAA,aAAa,CAAC9D,UAAD,EAAa4C,QAAb,EAAuBuB,aAAvB,CAAb;AACD,SALD,MAKO,IAAIvB,QAAJ,EAAc;AACnBiB,UAAAA,WAAW,CAAC7D,UAAD,EAAa4C,QAAb,CAAX;AACD,SAFM,MAEA,IAAIuB,aAAJ,EAAmB;AACxBH,UAAAA,aAAa,CAAChE,UAAD,EAAamE,aAAb,CAAb;AACD;AACF,OAdD;AAeD;AA7SH;AAAA;AAAA,WA+SE,gBAAOzjB,GAAP;AAEE,WAAKqiB,uBAAL,CAA6BriB,GAA7B;AAEA,UAAI0iB,YAAY,GAAG,KAAKlf,OAAL,CAAaO,UAAb,EAAnB;AACA,UAAI2f,YAAY,GAAGhB,YAAY,CAAC1iB,GAAD,CAA/B;AACA,aAAO0iB,YAAY,CAAC1iB,GAAD,CAAnB;AACA,WAAKwD,OAAL,CAAaof,UAAb,CAAwBF,YAAxB;AAEA,WAAKN,WAAL,CAAiBpiB,GAAjB,EAAsB0jB,YAAtB;AACD,KAzTH;AAAA;AAAA;AAAA;AAAA,oEA4TE,kBAAiBnZ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDACS,MAAA,KAAKrH,GAAL,CAASqH,KAAT,UAAA,iBAAA,SAAA,MAAgBoZ,MAAMpZ,MAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA5TF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAgUE,yBAAcA,KAAd;AACE,aAAOmL,aAAa,CAACnL,KAAD,CAApB;AACD,KAlUH;AAAA;AAAA;AAAA,WAqUE,eAAMvK,GAAN;;AAEE,UAAI,KAAKwL,KAAL,CAAWqV,YAAf,EAA6B;AAC3B,eAAO,KAAKrV,KAAL,CAAWqV,YAAlB;AACD;AAED,UAAI;AACF,YAAItW,KAAK,GAAG,KAAKsY,OAAL,CAAa7iB,GAAb,CAAZ;AACA,YAAI,CAACuK,KAAL,EAAY;AACV,gBAAM,IAAI/S,YAAJ,CAAiB,gDAAgDwI,GAAjE,CAAN;AACD;AACF,OALD,CAKE,OAAO7G,CAAP,EAAU;AACV,eAAO,SAAQ+M,MAAR,CAAe/M,CAAf,CAAP;AACD;AAGD,WAAKkpB,uBAAL,CAA6BriB,GAA7B;AAIA,WAAKwL,KAAL,CAAWqV,YAAX,GAA0B,KAAK3d,GAAL,CAASqH,KAAT,CAAegP,WAAf,GACvB/e,IADuB,CAClB,UAAA8c,MAAM;AACV,QAAA,MAAI,CAACsM,SAAL,CAAetM,MAAf;AAGA,YAAMT,SAAS,GAAG,MAAI,CAACqM,YAAL,CAAkB3Y,KAAlB,CAAlB;AACA,eAAO+M,MAAM,CAACT,SAAD,CAAb;AACD,OAPuB,EAQvB5R,KARuB,CAQjB,UAAAlO,GAAG;AAER,QAAA,MAAI,CAAC6oB,MAAL,CAAY5f,GAAZ;AACAjJ,QAAAA,GAAG,CAAC8sB,QAAJ,GAAe7jB,GAAf;AACA,QAAA,MAAI,CAAC8jB,SAAL,CAAe/sB,GAAf;AACA,cAAMA,GAAN;AACD,OAduB,EAevBuI,OAfuB,CAef;AAEP,QAAA,MAAI,CAACkM,KAAL,CAAWqV,YAAX,GAA0B,IAA1B;AACD,OAlBuB,CAA1B;AAoBA,aAAO,KAAKrV,KAAL,CAAWqV,YAAlB;AACD;AA9WH;AAAA;AAAA,WAgXE;AACE,WAAKU,0BAAL;AACA,WAAK/d,OAAL,CAAa8J,YAAb;AACD;AAnXH;AAAA;AAAA,WAqXE;;AACE,UAAMgK,MAAM,GAAG,KAAKgC,aAAL,EAAf;AACA,mBAAYhC,MAAZ,EAAoB9Z,OAApB,CAA4B,UAAAwC,GAAG;AAC7B,YAAIsX,MAAM,CAACtX,GAAD,CAAN,CAAY+jB,aAAhB,EAA+B;AAC9B,UAAA,MAAI,CAACnE,MAAL,CAAY5f,GAAZ;AACA;AACF,OAJD;AAKD;AA5XH;AAAA;AAAA,WA8XE,mCAA0BlC,KAA1B;AACE,UAAIwZ,MAAJ;AACA,UAAI;AACFA,QAAAA,MAAM,GAAGtZ,IAAI,CAACC,KAAL,CAAWH,KAAX,KAAqB,EAA9B;AACD,OAFD,CAEE,OAAO3E,CAAP,EAAU;AACVme,QAAAA,MAAM,GAAG,EAAT;AACD;AACD,aAAOA,MAAP;AACD;AAtYH;AAAA;AAAA,WAwYE,4BAAmB/M,KAAnB;AACE,UAAMvK,GAAG,GAAG,KAAKwjB,mBAAL,CAAyB,cAAzB,KAA4CnhB,yBAAxD;AAGA,UAAIqgB,YAAY,GAAG,KAAKlf,OAAL,CAAaO,UAAb,EAAnB;AACA2R,MAAAA,aAAa,CAACnL,KAAD,CAAb;AACAmY,MAAAA,YAAY,CAAC1iB,GAAD,CAAZ,GAAoBuK,KAApB;AACA,WAAK/G,OAAL,CAAaof,UAAb,CAAwBF,YAAxB;AACD;AAhZH;AAAA;AAAA,WAkZE;AACE,UAAM1iB,GAAG,GAAG,KAAKwjB,mBAAL,CAAyB,cAAzB,KAA4CnhB,yBAAxD;AACA,WAAKud,MAAL,CAAY5f,GAAZ;AACD;AArZH;AAAA;AAAA,WAuZE;AACE,UAAMsX,MAAM,GAAG,KAAKgC,aAAL,EAAf;AACA,mBAAYhC,MAAZ,EAAoB9Z,OAApB,CAA4B,UAAAwC,GAAG;AAC7BsX,QAAAA,MAAM,CAACtX,GAAD,CAAN,CAAY+jB,aAAZ,GAA4B,IAA5B;AACD,OAFD;AAGA,WAAKH,SAAL,CAAetM,MAAf;AACD;AA7ZH;AAAA;AAAA;;IClDa0M,gBAAb;AAME,4BAAYjL,YAAZ;QAAwChW,8EAAiC;;AAFjE,gBAAA,GAAU,KAAV;AAGN,SAAKgW,YAAL,GAAoBA,YAApB;AACA,SAAKhW,OAAL,GAAeA,OAAf;AACA,SAAKkhB,cAAL,GAAsB,EAAtB;AACA,SAAKC,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BnnB,IAA3B,CAAgC,IAAhC,CAA7B;AACD;AAXH;AAAA;AAAA,WAaU;AACN,UAAI0H,GAAG,GAAG,KAAV;AACA,WAAKwf,cAAL,CAAoBhkB,IAApB,CAAyBhE,IAAI,CAACgI,GAAL,EAAzB;AACA,UAAI,KAAKggB,cAAL,CAAoBlrB,MAApB,IAA8B,EAAlC,EAAsC;AAEpC,YAAMorB,SAAS,GAAG,KAAKF,cAAL,CAAoBvF,KAApB,EAAlB;AACA,YAAM0F,QAAQ,GAAG,KAAKH,cAAL,CAAoB,KAAKA,cAAL,CAAoBlrB,MAApB,GAA6B,CAAjD,CAAjB;AACA0L,QAAAA,GAAG,GAAI2f,QAAQ,GAAGD,SAAZ,GAAyB,KAAK,IAApC;AACD;AACD,aAAO1f,GAAP;AACD;AAvBH;AAAA;AAAA,WAyBE;AAEE,aAAO,CAAC,CAAC,KAAK1B,OAAL,CAAamd,WAAf,IAA8BpQ,SAAS,EAA9C;AACD;AA5BH;AAAA;AAAA,WA8BU,+BAAsB9P,GAAtB;AACN,UAAI,KAAK+C,OAAL,CAAaid,SAAjB,EAA4B;AAC1B,YAAI,KAAKqE,mBAAL,EAAJ,EAAgC;AAC9B,cAAMzsB,KAAK,GAAG,IAAIJ,YAAJ,CAAiB,+BAAjB,CAAd;AACA,eAAKuhB,YAAL,CAAkB+K,SAAlB,CAA4BlsB,KAA5B;AACD,SAHD,MAGO;AACL,eAAKmhB,YAAL,CAAkB4K,KAAlB,CAAwB3jB,GAAxB,EAA6BiF,KAA7B,CAAmC,cAAnC,EADK;AAEN;AACF,OAPD,MAOO,IAAI,KAAKlC,OAAL,CAAakd,UAAjB,EAA6B;AAClC,aAAKlH,YAAL,CAAkB6G,MAAlB,CAAyB5f,GAAzB;AACD;AACF;AAzCH;AAAA;AAAA,WA2CE;AACE,aAAQ,CAAC,CAAC,KAAK+C,OAAL,CAAaid,SAAf,IAA4B,CAAC,CAAC,KAAKjd,OAAL,CAAakd,UAAnD;AACD;AA7CH;AAAA;AAAA,WA+CE;AACE,UAAI,KAAKqE,QAAL,EAAJ,EAAqB;AACnB,aAAKC,IAAL;AACA,aAAKxL,YAAL,CAAkBqI,EAAlB,CAAqBd,aAArB,EAAoC,KAAK4D,qBAAzC;AACA,aAAKM,OAAL,GAAe,IAAf;AACD;AACF;AArDH;AAAA;AAAA,WAuDE;AACE,UAAI,KAAKA,OAAT,EAAkB;AAChB,aAAKzL,YAAL,CAAkBsI,GAAlB,CAAsBf,aAAtB,EAAqC,KAAK4D,qBAA1C;AACA,aAAKD,cAAL,GAAsB,EAAtB;AACA,aAAKO,OAAL,GAAe,KAAf;AACD;AACF;AA7DH;AAAA;AAAA,WA+DE;AACE,aAAO,KAAKA,OAAZ;AACD;AAjEH;AAAA;AAAA;;ICCaC,kBAAb;AAME,8BAAY1L,YAAZ;QAAwChW,8EAAiC;;AAFjE,gBAAA,GAAU,KAAV;AAGN,SAAKgW,YAAL,GAAoBA,YAApB;AACA,SAAKhW,OAAL,GAAeA,OAAf;AACA,SAAK2hB,eAAL,GAAuB,KAAKA,eAAL,CAAqB3nB,IAArB,CAA0B,IAA1B,CAAvB;AACD,GAVH;AAAA;AAAA;AAAA,WAgBU;;UAAkBiD,WAAAA;UAAK6hB,gBAAAA;UAAUC,gBAAAA;AACvC,UAAM/a,IAAI,GAAG,KAAKgS,YAAL,CAAkBxT,UAAlB,EAAb;AAEA,UAAMof,4BAA4B,GAAG,SAA/BA,4BAA+B;AACnC,QAAA,KAAI,CAAC5L,YAAL,CAAkB6L,0BAAlB;AACA,QAAA,KAAI,CAAC7L,YAAL,CAAkB8L,mCAAlB,CAAsDhD,QAAtD,EAAgEC,QAAhE;AACD,OAHD;AASA,UAAI9hB,GAAG,KAAKA,GAAG,KAAK+G,IAAI,CAACuY,UAAb,IAA2BuC,QAAQ,KAAKC,QAA7C,CAAP,EAA+D;AAC7D;AACD;AAID,WAAKgD,WAAL,GAAmBhoB,UAAU,CAAC;AAAA,eAAM6nB,4BAA4B,EAAlC;AAAA,OAAD,EAAuC5d,IAAI,CAACsZ,kBAA5C,CAA7B;AACD;AAnCH;AAAA;AAAA,WAqCE;AACE,aAAO,KAAP;AACD;AAvCH;AAAA;AAAA,WAyCE;AACE,aAAO,KAAKmE,OAAZ;AACD;AA3CH;AAAA;AAAA,WA6CE;AACE,aAAO,CAAC,CAAC,KAAKzhB,OAAL,CAAamd,WAAf,IAA8BpQ,SAAS,EAA9C;AACD;AA/CH;AAAA;AAAA,WAiDE;AACE,UAAI,KAAKwU,QAAL,EAAJ,EAAqB;AACnB,aAAKC,IAAL;AACAxpB,QAAAA,MAAM,CAAC0S,gBAAP,CAAwB,SAAxB,EAAmC,KAAKiX,eAAxC;AACA,aAAKF,OAAL,GAAe,IAAf;AACD;AACF;AAvDH;AAAA;AAAA,WAyDE;AACE,UAAI,KAAKA,OAAT,EAAkB;AAEhBzpB,QAAAA,MAAM,CAAC6S,mBAAP,CAA2B,SAA3B,EAAsC,KAAK8W,eAA3C;AACAzV,QAAAA,YAAY,CAAC,KAAK6V,WAAN,CAAZ;AACA,aAAKN,OAAL,GAAe,KAAf;AACD;AACF;AAhEH;AAAA;AAAA;;;;;ICQaO,cAAb;AAgBE,0BAAY7hB,GAAZ;;QAA2BH,8EAAiC;;AAC1D,SAAKG,GAAL,GAAWA,GAAX;AAGA,gCAA+CA,GAAG,CAAC6V,YAAJ,CAAiBxT,UAAjB,EAA/C;AAAA,QAAQya,SAAR,yBAAQA,SAAR;AAAA,QAAmBC,UAAnB,yBAAmBA,UAAnB;AAAA,QAA+BC,WAA/B,yBAA+BA,WAA/B;AACA,SAAKnd,OAAL,GAAe,eAAc,EAAd,EACbgiB,cAAc,CAACC,cADF,EAEb;AAAEhF,MAAAA,SAAS,EAATA,SAAF;AAAaC,MAAAA,UAAU,EAAVA,UAAb;AAAyBC,MAAAA,WAAW,EAAXA;AAAzB,KAFa,EAGbnd,OAHa,CAAf;AAMA,SAAKyhB,OAAL,GAAe,KAAf;AACA,SAAKS,QAAL,GAAgB,UAAhB;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBnoB,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKooB,QAAL,GAAgB,KAAKA,QAAL,CAAcpoB,IAAd,CAAmB,IAAnB,CAAhB;AAEAgoB,IAAAA,cAAc,CAACK,aAAf,CAA6B5nB,OAA7B,CAAqC,UAAAtG,IAAI;AACvC,UAAMmuB,GAAG,GAAG,KAAI,CAACC,aAAL,CAAmBpuB,IAAnB,CAAZ;AACA,UAAImuB,GAAJ,EAAS;AACP,QAAA,KAAI,CAACJ,QAAL,CAAclgB,GAAd,CAAkB7N,IAAlB,EAAwBmuB,GAAxB;AACD;AACF,KALD;AAMD;AAtCH;AAAA;AAAA,WA4CU;AACN,UAAI,KAAKb,OAAT,EAAkB;AAEhB,aAAKe,aAAL;AACD;AACF;AAjDH;AAAA;AAAA,WAmDU;AAnDV;AAAA;AAAA,WAsDE;;AACE,aAAO,CAAC,EAAC,MAAA,KAAKC,OAAL,UAAA,iBAAA,SAAA,MAAcC,QAAf,CAAR;AACD;AAxDH;AAAA;AAAA,WA0DE;;AACE,aAAO,MAAA,KAAKD,OAAL,UAAA,iBAAA,SAAA,MAAcE,SAArB;AACD;AA5DH;AAAA;AAAA,WA8DE;;AACE,aAAO,mBAAI,wCAAKT,QAAL,gBAAJ,EAA4BU,IAA5B,CAAiC,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,kBAAJ,EAAJ;AAAA,OAApC,CAAP;AACD;AAhEH;AAAA;AAAA;AAAA,+DAkEE;AAAA;AAAA;AAAA;AAAA;AAAA,qBACM,KAAKrB,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAKM,KAAKsB,gBAAL,EALN;AAAA;AAAA;AAAA;AAAA;AAAA,uBAMU,KAAKC,YAAL,EANV;AAAA;AAQE,qBAAKR,aAAL;AACA,qBAAKf,OAAL,GAAe,IAAf;AATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAlEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DA8EE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACQ,KAAKwB,WAAL,EADR;AAAA;AAEE,qBAAKC,YAAL;AACA,qBAAKzB,OAAL,GAAe,KAAf;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA9EF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAoFE,oBAAWttB,IAAX;AACE,aAAO,KAAK+tB,QAAL,CAAc5f,GAAd,CAAkBnO,IAAlB,CAAP;AACD;AAtFH;AAAA;AAAA,WAwFU;;mDACY,yCAAK+tB,QAAL;;;AAAlB,4DAA0C;AAAA,cAA/BW,GAA+B;AACxC,cAAMtB,QAAQ,GAAGsB,GAAG,CAACtB,QAAJ,MAAkB,CAACsB,GAAG,CAACM,SAAJ,EAAnB,KAAuCN,GAAG,CAACC,kBAAJ,KAA2B,KAAKJ,QAAL,EAA3B,GAA6C,IAApF,CAAjB;AACA,cAAInB,QAAJ,EAAc;AACZsB,YAAAA,GAAG,CAACO,KAAJ;AACD;AACF;;;;;;AACF;AA/FH;AAAA;AAAA,WAiGU;;oDACY,yCAAKlB,QAAL;;;AAAlB,+DAA0C;AAAA,cAA/BW,GAA+B;AACxCA,UAAAA,GAAG,CAACrB,IAAJ;AACD;;;;;;AACF;AArGH;AAAA;AAAA;AAAA,sEAuGU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAKyB,WAAL,EADA;AAAA;AAEN,oBAAIjB,cAAc,CAACqB,oBAAf,EAAJ,EAA2C;AACzC,sBAAI,CAAC,KAAKC,OAAV,EAAmB;AACTC,oBAAAA,oBADS,GACgB,KAAKvjB,OADrB,CACTujB,oBADS;AAEjB,yBAAKD,OAAL,GAAe,IAAIE,gBAAJ,CAAqBD,oBAArB,CAAf;AACD;AACD,sBAAI,CAAC,KAAKd,OAAV,EAAmB;AACjB,yBAAKA,OAAL,GAAegB,oBAAoB,CAAC,KAAKH,OAAN,CAAnC;AACA,yBAAKb,OAAL,CAAaiB,WAAb,GAA2B,KAAKvB,iBAAhC;AACA,yBAAKM,OAAL,CAAakB,eAAb,GAA+BlsB,IAA/B,CAAoC,KAAK2qB,QAAzC;AACD;AACF;AAZK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAvGV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qEAsHU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACF,KAAKK,OADH;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEE,MAAA,KAAKA,OAAL,UAAA,iBAAA,SAAA,MAAcmB,KAFhB;AAAA;AAGJ,qBAAKnB,OAAL,GAAevqB,SAAf;AAHI;AAAA,uBAIE,MAAA,KAAKorB,OAAL,UAAA,iBAAA,SAAA,MAAc5N,OAJhB;AAAA;AAKJ,qBAAK4N,OAAL,GAAeprB,SAAf;AALI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAtHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WA+HU,uBAAc/D,IAAd;AACN,UAAM6hB,YAAY,GAAG,KAAK7V,GAAL,CAAS6V,YAA9B;AAEA,UAAI6N,OAAJ;AACA,cAAQ1vB,IAAR;AACE,aAAK,WAAL;AACE0vB,UAAAA,OAAO,GAAG,IAAI5C,gBAAJ,CAAqBjL,YAArB,qBAAuC,KAAKhW,QAA5C,CAAV;AACA;AACF,aAAK,aAAL;AACE6jB,UAAAA,OAAO,GAAG,IAAInC,kBAAJ,CAAuB1L,YAAvB,qBAAyC,KAAKhW,QAA9C,CAAV;AACA;AACF;AACE,gBAAM,IAAIlM,KAAJ,2BAA6BK,IAA7B,EAAN;AARJ;AAUA,aAAO0vB,OAAP;AACD;AA9IH;AAAA;AAAA,WAwCS;AACL,aAAO9W,SAAS,EAAhB;AACD;AA1CH;AAAA;AAAA;AAQiBiV,4BAAA,GAAgB,CAAC,WAAD,EAAc,aAAd,CAAhB;AAEAA,6BAAA,GAAiB;AAC9B/E,EAAAA,SAAS,EAAE,IADmB;AAE9BC,EAAAA,UAAU,EAAE,IAFkB;AAG9BC,EAAAA,WAAW,EAAE;AAHiB,CAAjB;;ICRX2G;AAKJ;QAAY9jB,8EAA+B;AAAE+jB,MAAAA,KAAK,EAAE;AAAT;;AACzC,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,OAAL,GAAe,KAAf;AACA,SAAKjkB,OAAL,GAAeA,OAAf;AACD;;;WAKD,cAAKI,MAAL,EAAoC8jB,UAApC;;wCAAwD7pB;AAAAA,QAAAA;;AACtD,aAAO,aAAY,UAACP,OAAD,EAAUqJ,MAAV;AACjB,YAAI,KAAI,CAAC6gB,KAAL,CAAWhuB,MAAX,GAAoB,CAAxB,EAA2B;AAGzB,cAAI,KAAI,CAACgK,OAAL,CAAa+jB,KAAb,KAAuB,KAA3B,EAAkC;AAChCzrB,YAAAA,IAAI,CACF,+EACA,qEAFE,CAAJ;AAID;AACF;AACD,QAAA,KAAI,CAAC0rB,KAAL,CAAW9mB,IAAX,CAAgB;AACdkD,UAAAA,MAAM,EAANA,MADc;AAEd8jB,UAAAA,UAAU,EAAVA,UAFc;AAGd7pB,UAAAA,IAAI,EAAJA,IAHc;AAIdP,UAAAA,OAAO,EAAPA,OAJc;AAKdqJ,UAAAA,MAAM,EAANA;AALc,SAAhB;AAOA,QAAA,KAAI,CAACghB,GAAL;AACD,OAnBM,CAAP;AAoBD;;;WAED;;AACE,UAAI,KAAKF,OAAT,EAAkB;AAChB;AACD;AACD,UAAI,KAAKD,KAAL,CAAWhuB,MAAX,KAAsB,CAA1B,EAA6B;AAC3B;AACD;AACD,WAAKiuB,OAAL,GAAe,IAAf;AAEA,UAAIG,SAAS,GAAG,KAAKJ,KAAL,CAAWrI,KAAX,EAAhB;AACA,UAAIja,GAAG,GAAG0iB,SAAS,CAAChkB,MAAV,CAAiBtI,KAAjB,CAAuBssB,SAAS,CAACF,UAAjC,EAA6CE,SAAS,CAAC/pB,IAAvD,CAAV;AACA,UAAIiC,SAAS,CAACoF,GAAD,CAAb,EAAoB;AACjBA,QAAAA,GAAwB,CAACjK,IAAzB,CAA8B2sB,SAAS,CAACtqB,OAAxC,EAAiDsqB,SAAS,CAACjhB,MAA3D,EAAmE5G,OAAnE,CAA2E;AAC1E,UAAA,MAAI,CAAC0nB,OAAL,GAAe,KAAf;AACA,UAAA,MAAI,CAACE,GAAL;AACD,SAHA;AAIF,OALD,MAKO;AACLC,QAAAA,SAAS,CAACtqB,OAAV,CAAkB4H,GAAlB;AACA,aAAKuiB,OAAL,GAAe,KAAf;AACA,aAAKE,GAAL;AACD;AACF;;;;;SClEqBE,YAAYlkB,KAAwBH;AAC1DA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AAEA,MAAI,CAACqN,sBAAsB,EAA3B,EAA+B;AAC7B,WAAO,SAAQlK,MAAR,CAAe,IAAI1O,YAAJ,CAAiB,gDAAjB,CAAf,CAAP;AACD;AAED,MAAIoX,OAAJ;AACA,MAAIZ,MAAJ;AACA,MAAIqZ,QAAJ;AACA,MAAIC,OAAO,GAAG,aAAY,UAAUzqB,OAAV,EAAmBqJ,MAAnB;AACxB8H,IAAAA,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAT;AACAF,IAAAA,MAAM,CAACG,KAAP,CAAapD,OAAb,GAAuB,MAAvB;AAGAsc,IAAAA,QAAQ,GAAG,SAASA,QAAT,CAAkBluB,CAAlB;AACT,UAAI,CAACA,CAAD,IAAM,CAACA,CAAC,CAACqL,IAAT,IAAiBrL,CAAC,CAAC6V,MAAF,KAAa9L,GAAG,CAACoC,eAAJ,EAAlC,EAAyD;AACvD;AACD;AAED,UAAI;AACF,YAAI7N,GAAG,GAAGuG,IAAI,CAACC,KAAL,CAAW9E,CAAC,CAACqL,IAAb,CAAV;AACD,OAFD,CAEE,OAAOzN,GAAP,EAAY;AAIZ;AACD;AAED,UAAI,CAACU,GAAL,EAAU;AAAE;AAAS;AACrB,UAAIA,GAAG,CAACgR,IAAJ,KAAa,sBAAjB,EAAyC;AACvC,eAAO5L,OAAO,CAACpF,GAAG,CAAC2vB,WAAL,CAAd;AACD;AACD,UAAI3vB,GAAG,CAACgR,IAAJ,KAAa,yBAAjB,EAA4C;AAC1CtP,QAAAA,CAAC,CAACouB,MAAF,CAAS/W,WAAT,CAAqB,gBAAe;AAClC/H,UAAAA,IAAI,EAAE;AAD4B,SAAf,CAArB,EAEItP,CAAC,CAAC6V,MAFN;AAGD;AACF,KAvBD;AAwBAzB,IAAAA,WAAW,CAACxS,MAAD,EAAS,SAAT,EAAoBssB,QAApB,CAAX;AAEArZ,IAAAA,MAAM,CAACD,GAAP,GAAa7K,GAAG,CAACoC,eAAJ,KAAwB,kCAArC;AACA2I,IAAAA,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BL,MAA1B;AAEAY,IAAAA,OAAO,GAAG9R,UAAU,CAAC;AACnBoJ,MAAAA,MAAM,CAAC,IAAI1O,YAAJ,CAAiB,0BAAjB,CAAD,CAAN;AACD,KAFmB,EAEjB,CAAAuL,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAE6L,OAAT,KAAoB,KAFH,CAApB;AAGD,GArCa,CAAd;AAuCA,SAAO0Y,OAAO,CAAChoB,OAAR,CAAgB;AACrB2P,IAAAA,YAAY,CAACL,OAAD,CAAZ;AACAjB,IAAAA,cAAc,CAAC5S,MAAD,EAAS,SAAT,EAAoBssB,QAApB,CAAd;AACA,QAAIpZ,QAAQ,CAACG,IAAT,CAAc4J,QAAd,CAAuBhK,MAAvB,CAAJ,EAAoC;AAClCA,MAAAA,MAAM,CAACiK,aAAP,CAAqBC,WAArB,CAAiClK,MAAjC;AACD;AACF,GANM,CAAP;AAOD;;ICtDYwZ,kBAAkB,GAAG;AAClC,IAAMC,eAAe,GAAG;AACtBC,EAAAA,sBAAsB,EAAE,IADF;AAEtBC,EAAAA,aAAa,EAAE;AAFO,CAAxB;AAIA,IAAMC,uBAAuB,GAAG,iBAAhC;AACA,IAAMC,wBAAwB,GAAG,EAAjC;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,SAAD,EAA8Bvc,KAA9B;AAEtB,MAAI,CAACuc,SAAL,EAAgB;AACd,WAAO,KAAP;AACD;AAED,SAAOA,SAAS,CAACC,eAAV,KAA8Bxc,KAAK,CAACwc,eAApC,IACF,gBAAeD,SAAS,CAACxnB,OAAzB,MAAsC,gBAAeiL,KAAK,CAACjL,OAArB,CADpC,IAEF,gBAAewnB,SAAS,CAAC1kB,WAAzB,MAA0C,gBAAemI,KAAK,CAACnI,WAArB,CAFxC,IAGF0kB,SAAS,CAACnwB,KAAV,KAAoB4T,KAAK,CAAC5T,KAH/B;AAID,CAVD;IAaaqwB,gBAAb;AAWE,4BAAY/kB,GAAZ;;;AACE,QAAI,CAACA,GAAG,CAAC6d,OAAT,EAAkB;AAChB,YAAM,IAAIvpB,YAAJ,CAAiB,uDAAjB,CAAN;AACD;AAED,SAAK0wB,IAAL,GAAYhlB,GAAZ;AACA,SAAKilB,QAAL,sBAAqBV,gBAArB;AACA,SAAKW,UAAL,GAAkBZ,kBAAlB;AACA,SAAKa,WAAL,GAAmB,EAAnB;AACA,SAAKC,cAAL,GAAsB,IAAtB;AACA,SAAKC,eAAL,GAAuB,IAAI1B,YAAJ,CAAiB;AACtCC,MAAAA,KAAK,EAAE;AAD+B,KAAjB,CAAvB;AAOA5jB,IAAAA,GAAG,CAAC6V,YAAJ,CAAiBqI,EAAjB,CAAoBZ,WAApB,EAAiC,UAACxgB,GAAD,EAAMuK,KAAN;AAC/B,MAAA,KAAI,CAACie,cAAL,CAAoB;AAAEC,QAAAA,KAAK,EAAEjI,WAAT;AAAsBxgB,QAAAA,GAAG,EAAHA,GAAtB;AAA2BuK,QAAAA,KAAK,EAALA;AAA3B,OAApB;AACA,MAAA,KAAI,CAACme,eAAL;AACD,KAHD;AAIAxlB,IAAAA,GAAG,CAAC6V,YAAJ,CAAiBqI,EAAjB,CAAoBX,aAApB,EAAmC,UAACzgB,GAAD,EAAMuK,KAAN;AACjC,MAAA,KAAI,CAACie,cAAL,CAAoB;AAAEC,QAAAA,KAAK,EAAEhI,aAAT;AAAwBzgB,QAAAA,GAAG,EAAHA,GAAxB;AAA6BuK,QAAAA,KAAK,EAALA;AAA7B,OAApB;AACA,MAAA,KAAI,CAACme,eAAL;AACD,KAHD;AAID;AApCH;AAAA;AAAA,WAsCE,wBAAe3lB,OAAf;AACE,WAAKslB,WAAL,GAAmBtlB,OAAnB;AACD;AAxCH;AAAA;AAAA,WA0CE;AACE,aAAO,KAAKqlB,UAAZ;AACD;AA5CH;AAAA;AAAA,WA8CE;AACE,aAAO,KAAKE,cAAZ;AACD;AAhDH;AAAA;AAAA;AAAA,yEAkDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAC0C,KAAKJ,IAAL,CAAUnlB,OADpD,EACU4lB,kBADV,sBACUA,kBADV,EAC8BC,OAD9B,sBAC8BA,OAD9B;AAGQxtB,gBAAAA,GAHR,GAGc,SAANA,GAAM,CAAC+J,MAAD;;AACV,2CAA8B,MAAI,CAACkjB,WAAnC;AAAA,sBAAQI,KAAR,sBAAQA,KAAR;AAAA,sBAAezoB,GAAf,sBAAeA,GAAf;AAAA,sBAAoBuK,KAApB,sBAAoBA,KAApB;AACArP,kBAAAA,UAAU,GAAGI,KAAb,kFAA0DmtB,KAA1D,8BAA0EtjB,MAA1E;AACAjK,kBAAAA,UAAU,GAAGE,GAAb,CAAiB4E,GAAjB,EAAsBuK,KAAtB;AACArP,kBAAAA,UAAU,GAAGE,GAAb,CAAiB,mBAAjB,EAAsC,MAAI,CAACgtB,UAA3C;AACAltB,kBAAAA,UAAU,GAAGK,QAAb;AAGA,kBAAA,MAAI,CAAC8sB,WAAL,GAAmB,EAAnB;AACD,iBAZH;AAcQQ,gBAAAA,mBAdR,GAc8B,SAAtBA,mBAAsB,CAACC,SAAD;AAC1B,sBAAIhB,eAAe,CAAC,MAAI,CAACM,UAAN,EAAkBU,SAAlB,CAAnB,EAAiD;AAC/CF,oBAAAA,OAAO,IAAIxtB,GAAG,CAAC,WAAD,CAAd;AACA;AACD;AACD,kBAAA,MAAI,CAACktB,cAAL,GAAsB,MAAI,CAACF,UAA3B;AACA,kBAAA,MAAI,CAACA,UAAL,GAAkBU,SAAlB;AAEA,kBAAA,MAAI,CAACZ,IAAL,CAAUnH,OAAV,CAAkBW,IAAlB,CAAuBkG,uBAAvB,qBAAqDkB,UAArD;AACAF,kBAAAA,OAAO,IAAIxtB,GAAG,CAAC,SAAD,CAAd;AACD,iBAxBH;AA0BQ2tB,gBAAAA,YA1BR,GA0BuB,SAAfA,YAAe,CAACC,WAAD;AACnB,yBAAO,MAAI,CAACb,QAAL,CAAcT,sBAAd,CAAqCltB,IAArC,CAA0C;AAC/C,wBAAMyuB,UAAU,GAAG,MAAI,CAACd,QAAL,CAAcT,sBAAjC;AACA,wBAAIuB,UAAU,IAAIA,UAAU,KAAKD,WAAjC,EAA8C;AAC5C,6BAAOD,YAAY,CAACE,UAAD,CAAnB;AACD;AACD,2BAAO,MAAI,CAACC,YAAL,EAAP;AACD,mBANM,CAAP;AAOD,iBAlCH;AAAA,qBAoCM,KAAKf,QAAL,CAAcT,sBApCpB;AAAA;AAAA;AAAA;AAAA,sBAqCQ,KAAKS,QAAL,CAAcR,aAAd,IAA+BE,wBArCvC;AAAA;AAAA;AAAA;AAwCMe,gBAAAA,OAAO,IAAIxtB,GAAG,CAAC,YAAD,CAAd;AAxCN,kDAyCa2tB,YAAY,CAAC,KAAKZ,QAAL,CAAcT,sBAAf,CAzCzB;AAAA;AA2CM,qBAAKS,QAAL,CAAcT,sBAAd,CAAqC9f,MAArC;AA3CN;AAgDQuhB,gBAAAA,iBAhDR,GAgD4B,IAAIC,WAAJ,CAAgB,UAACvsB,OAAD,EAAUwsB,CAAV,EAAaC,QAAb;AACxCA,kBAAAA,QAAQ,CAACC,YAAT,GAAwB,KAAxB;AACAD,kBAAAA,QAAQ,CAAC;AACP,oBAAA,MAAI,CAACnB,QAAL,CAAcT,sBAAd,GAAuC,IAAvC;AACA,oBAAA,MAAI,CAACS,QAAL,CAAcR,aAAd,GAA8B,MAAI,CAACQ,QAAL,CAAcR,aAAd,GAA8B,CAA5D;AACAiB,oBAAAA,OAAO,IAAIxtB,GAAG,CAAC,UAAD,CAAd;AACD,mBAJO,CAAR;AAMA,sBAAMouB,cAAc,GAAG,SAAjBA,cAAiB,CAACV,SAAD;AACrB,wBAAIK,iBAAiB,CAACM,UAAtB,EAAkC;AAChC5sB,sBAAAA,OAAO;AACP;AACD;AAEDgsB,oBAAAA,mBAAmB,CAACC,SAAD,CAAnB;AACAjsB,oBAAAA,OAAO;AAGP,oBAAA,MAAI,CAACsrB,QAAL,sBAAqBV,gBAArB;AACD,mBAXD;AAaA,kBAAA,MAAI,CAACS,IAAL,CAAUF,eAAV,GACGxtB,IADH,CACQ;AACJ,wBAAI2uB,iBAAiB,CAACM,UAAtB,EAAkC;AAChC5sB,sBAAAA,OAAO;AACP;AACD;AAED,gDAA+C,MAAI,CAACqrB,IAAL,CAAUnP,YAAV,CAAuBO,aAAvB,EAA/C;AAAA,wBAAQjW,WAAR,yBAAQA,WAAR;AAAA,wBAAqB9C,OAArB,yBAAqBA,OAArB;AAAA,wBAA8BmM,YAA9B,yBAA8BA,YAA9B;AACA,wBAAMoc,SAAS,GAAG;AAChBzlB,sBAAAA,WAAW,EAAXA,WADgB;AAEhB9C,sBAAAA,OAAO,EAAPA,OAFgB;AAGhBmM,sBAAAA,YAAY,EAAZA,YAHgB;AAIhBsb,sBAAAA,eAAe,EAAE,CAAC,EAAE3kB,WAAW,IAAI9C,OAAjB;AAJF,qBAAlB;AAQA,wBAAM+mB,OAAO,GAAuBqB,kBAAkB,GAClD,MAAI,CAACJ,eAAL,CAAqBtoB,IAArB,CAA0B0oB,kBAA1B,EAA8C,IAA9C,EAAoD,MAAI,CAACT,IAAzD,EAA+DY,SAA/D,CADkD,GAElD,SAAQjsB,OAAR,CAAgBisB,SAAhB,CAFJ;AAIAxB,oBAAAA,OAAO,CACJ9sB,IADH,CACQ,UAAAsuB,SAAS;AAAA,6BAAIU,cAAc,CAACV,SAAD,CAAlB;AAAA,qBADjB,EAEG7jB,KAFH,CAES,UAAArN,KAAK;AAAA,6BAAI4xB,cAAc,CAAC;AAC7BnmB,wBAAAA,WAAW,EAAXA,WAD6B;AAE7B9C,wBAAAA,OAAO,EAAPA,OAF6B;AAG7BmM,wBAAAA,YAAY,EAAZA,YAH6B;AAI7Bsb,wBAAAA,eAAe,EAAE,KAJY;AAK7BpwB,wBAAAA,KAAK,EAALA;AAL6B,uBAAD,CAAlB;AAAA,qBAFd;AASD,mBA7BH;AA8BD,iBAnDyB,CAhD5B;AAqGE,qBAAKuwB,QAAL,CAAcT,sBAAd,GAAuCyB,iBAAvC;AArGF,kDAuGSJ,YAAY,CAACI,iBAAD,CAvGrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAlDF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WA4JE,mBAAUO,OAAV;AACE,WAAKxB,IAAL,CAAUnH,OAAV,CAAkBK,EAAlB,CAAqBwG,uBAArB,EAA8C8B,OAA9C;AACD;AA9JH;AAAA;AAAA,WAgKE,qBAAYA,OAAZ;AACE,WAAKxB,IAAL,CAAUnH,OAAV,CAAkBM,GAAlB,CAAsBuG,uBAAtB,EAA+C8B,OAA/C;AACD;AAlKH;AAAA;AAAA;;IC5BqBC;AAInB,uBAAYnmB,OAAZ,EAAoComB,WAApC;;AACE,QAAI,CAACpmB,OAAL,EAAc;AACZ,YAAM,IAAIhM,YAAJ,CAAiB,uBAAjB,CAAN;AACD;AAED,QAAI,OAAOoyB,WAAP,KAAuB,QAAvB,IAAmC,CAACA,WAAW,CAAC7wB,MAApD,EAA4D;AAC1D,YAAM,IAAIvB,YAAJ,CAAiB,2BAAjB,CAAN;AACD;AAED,SAAKoyB,WAAL,GAAmBA,WAAnB;AACA,SAAKzL,eAAL,GAAuB3a,OAAvB;AACD;;;WAMD,iBAAQxD,GAAR;AACE,aAAO,KAAK+D,UAAL,GAAkB/D,GAAlB,CAAP;AACD;;;WAED,iBAAQA,GAAR,EAAqBlC,KAArB;AACE,aAAO,KAAKkH,aAAL,CAAmBhF,GAAnB,EAAwBlC,KAAxB,CAAP;AACD;;;WAED,oBAAWkC,GAAX;AACE,aAAO,KAAKsN,YAAL,CAAkBtN,GAAlB,CAAP;AACD;;;WAMD;AACE,UAAI6pB,aAAa,GAAG,KAAK1L,eAAL,CAAqBa,OAArB,CAA6B,KAAK4K,WAAlC,CAApB;AACAC,MAAAA,aAAa,GAAGA,aAAa,IAAI,IAAjC;AACA,UAAI;AACF,eAAO7rB,IAAI,CAACC,KAAL,CAAW4rB,aAAX,CAAP;AACD,OAFD,CAEE,OAAM1wB,CAAN,EAAS;AACT,cAAM,IAAI3B,YAAJ,CAAiB,qCAAqC,KAAKoyB,WAA3D,CAAN;AACD;AACF;;;WAED,oBAAW7xB,GAAX;AACE,UAAI;AACF,YAAI8xB,aAAa,GAAG9xB,GAAG,GAAG,gBAAeA,GAAf,CAAH,GAAyB,IAAhD;AACA,aAAKomB,eAAL,CAAqBc,OAArB,CAA6B,KAAK2K,WAAlC,EAA+CC,aAA/C;AACD,OAHD,CAGE,OAAM1wB,CAAN,EAAS;AACT,cAAM,IAAI3B,YAAJ,CAAiB,4BAA4B,KAAKoyB,WAAlD,CAAN;AACD;AACF;;;WAED,sBAAa5pB,GAAb;AACE,UAAI,CAACA,GAAL,EAAU;AAER,YAAI,KAAKme,eAAL,CAAqBe,UAAzB,EAAqC;AACnC,eAAKf,eAAL,CAAqBe,UAArB,CAAgC,KAAK0K,WAArC;AACD,SAFD,MAEO;AACL,eAAKhH,UAAL;AACD;AACD;AACD;AAED,UAAI7qB,GAAG,GAAG,KAAKgM,UAAL,EAAV;AACA,aAAOhM,GAAG,CAACiI,GAAD,CAAV;AACA,WAAK4iB,UAAL,CAAgB7qB,GAAhB;AACD;;;WAED,uBAAciI,GAAd,EAAmBlC,KAAnB;AACE,UAAI/F,GAAG,GAAG,KAAKgM,UAAL,EAAV;AACAhM,MAAAA,GAAG,CAACiI,GAAD,CAAH,GAAWlC,KAAX;AACA,WAAK8kB,UAAL,CAAgB7qB,GAAhB;AACD;;;;;ACrDH,SAAS+xB,iCAAT,CAA2C/mB,OAA3C;AACE,MAAI,CAAC+M,SAAS,EAAV,IAAgB,CAAC/M,OAAO,CAACob,eAAzB,IAA4C,CAACpb,OAAO,CAACob,eAAzD,EAA0E;AAExE9iB,IAAAA,IAAI,CAAC,6KAAD,CAAJ;AACD;AACF;IAEY0uB,cAAb;AAKE,0BAAYC,qBAAZ,EAA0DvK,aAA1D,EAAwFlc,WAAxF;;AACE,SAAKymB,qBAAL,GAA6BA,qBAA7B;AACA,SAAKvK,aAAL,GAAqBA,aAArB;AACA,SAAKlc,WAAL,GAAmBA,WAAnB;AACD,GATH;AAAA;AAAA;AAAA,WAYE,8BAAqB0mB,WAArB,EAA0CC,eAA1C;AACE,aAAO,eAAc,EAAd,EAAkB,KAAKF,qBAAL,CAA2BC,WAA3B,CAAlB,EAA2DC,eAA3D,CAAP;AACD,KAdH;AAAA;AAAA;AAAA,WAkBE,oBAAWnnB,OAAX;AACEA,MAAAA,OAAO,GAAG,eAAc,EAAd,EAAkB,KAAK0c,aAAvB,EAAsC1c,OAAtC,CAAV;AAEA,UAAIA,OAAO,CAACob,eAAZ,EAA6B;AAC3B,eAAOpb,OAAO,CAACob,eAAf;AACD;AAED,qBAAoCpb,OAApC;AAAA,UAAMib,WAAN,YAAMA,WAAN;AAAA,UAAmBmM,YAAnB,YAAmBA,YAAnB;AAEA,UAAGnM,WAAW,KAAK,gBAAnB,EAAqC;AACnCjb,QAAAA,OAAO,CAACgc,aAAR,GAAwB,IAAxB;AACD;AAGD,UAAIf,WAAW,IAAImM,YAAnB,EAAiC;AAC/B,YAAMC,GAAG,GAAG,yBAAAD,YAAY,MAAZ,CAAAA,YAAY,EAASnM,WAAT,CAAxB;AACA,YAAIoM,GAAG,IAAI,CAAX,EAAc;AACZD,UAAAA,YAAY,GAAG,uBAAAA,YAAY,MAAZ,CAAAA,YAAY,EAAOC,GAAP,CAA3B;AACApM,UAAAA,WAAW,GAAG/iB,SAAd;AACD;AACF;AAED,UAAI,CAAC+iB,WAAL,EAAkB;AAEhBA,QAAAA,WAAW,GAAG,KAAKza,WAAL,CAAiB+a,eAAjB,CAAiC6L,YAAjC,CAAd;AACD;AACD,aAAO,KAAK5mB,WAAL,CAAiB2a,gBAAjB,CAAkCF,WAAlC,EAA+Cjb,OAA/C,CAAP;AACD,KA7CH;AAAA;AAAA;AAAA,WAgDE,+BAAsBA,OAAtB;AACEA,MAAAA,OAAO,GAAG,KAAKsnB,oBAAL,CAA0B,aAA1B,EAAyCtnB,OAAzC,CAAV;AACA+mB,MAAAA,iCAAiC,CAAC/mB,OAAD,CAAjC;AACA,UAAMS,OAAO,GAAG,KAAKO,UAAL,CAAgBhB,OAAhB,CAAhB;AACA,UAAMuc,UAAU,GAAGvc,OAAO,CAACuc,UAAR,IAAsBvd,wBAAzC;AACA,aAAO,IAAI4nB,WAAJ,CAAgBnmB,OAAhB,EAAyB8b,UAAzB,CAAP;AACD;AAtDH;AAAA;AAAA,WAwDE,oCAA2Bvc,OAA3B;AACEA,MAAAA,OAAO,GAAG,KAAKsnB,oBAAL,CAA0B,oBAA1B,EAAgDtnB,OAAhD,CAAV;AACA+mB,MAAAA,iCAAiC,CAAC/mB,OAAD,CAAjC;AACA,UAAMS,OAAO,GAAG,KAAKO,UAAL,CAAgBhB,OAAhB,CAAhB;AACA,UAAMuc,UAAU,GAAGvc,OAAO,CAACuc,UAAR,IAAsBtd,+BAAzC;AACA,aAAO,IAAI2nB,WAAJ,CAAgBnmB,OAAhB,EAAyB8b,UAAzB,CAAP;AACD;AA9DH;AAAA;AAAA,WAgEE,+BAAsBvc,OAAtB;AACEA,MAAAA,OAAO,GAAG,KAAKsnB,oBAAL,CAA0B,cAA1B,EAA0CtnB,OAA1C,CAAV;AACA+mB,MAAAA,iCAAiC,CAAC/mB,OAAD,CAAjC;AACA,UAAMS,OAAO,GAAG,KAAKO,UAAL,CAAgBhB,OAAhB,CAAhB;AACA,UAAMuc,UAAU,GAAGvc,OAAO,CAACuc,UAAR,IAAsBrd,yBAAzC;AACA,aAAO,IAAI0nB,WAAJ,CAAgBnmB,OAAhB,EAAyB8b,UAAzB,CAAP;AACD,KAtEH;AAAA;AAAA;AAAA,WA2EE,+BAAsBvc,OAAtB;AACE,UAAIS,OAAJ;AACA,UAAIsM,SAAS,EAAb,EAAiB;AAEf,YAAI;AACFtM,UAAAA,OAAO,GAAG,KAAKD,WAAL,CAAiB2a,gBAAjB,CAAkC,QAAlC,EAA4Cnb,OAA5C,CAAV;AACD,SAFD,CAEE,OAAO5J,CAAP,EAAU;AAGVkC,UAAAA,IAAI,CAAC,yIAAD,CAAJ;AACD;AACF,OATD,MASO;AAEL,YAAMivB,kBAAkB,GAAG,KAAKC,qBAAL,CAA2BxnB,OAA3B,CAA3B;AACA,YAAIunB,kBAAJ,EAAwB;AACtB9mB,UAAAA,OAAO,GAAG;AACRwb,YAAAA,OAAO,EAAE,iBAAChf,GAAD;AACP,kBAAMwqB,WAAW,GAAGF,kBAAkB,CAACvmB,UAAnB,EAApB;AACA,kBAAIymB,WAAW,IAAIA,WAAW,CAACxqB,GAAD,CAA9B,EAAqC;AACnC,uBAAOwqB,WAAW,CAACxqB,GAAD,CAAlB;AACD;AACD,qBAAO,IAAP;AACD,aAPO;AAQRif,YAAAA,OAAO,EAAE,iBAACjf,GAAD,EAAMyqB,GAAN;AACP,kBAAMD,WAAW,GAAGF,kBAAkB,CAACvmB,UAAnB,EAApB;AACA,kBAAI,CAACymB,WAAL,EAAkB;AAChB,sBAAM,IAAIhzB,YAAJ,CAAiB,uDAAjB,CAAN;AACD;AACDgzB,cAAAA,WAAW,CAACxqB,GAAD,CAAX,GAAmByqB,GAAnB;AACAH,cAAAA,kBAAkB,CAAC1H,UAAnB,CAA8B4H,WAA9B;AACD,aAfO;AAgBRtL,YAAAA,UAAU,EAAE,oBAAClf,GAAD;AACV,kBAAMwqB,WAAW,GAAGF,kBAAkB,CAACvmB,UAAnB,EAApB;AACA,kBAAI,CAACymB,WAAL,EAAkB;AAChB;AACD;AACD,qBAAOA,WAAW,CAACxqB,GAAD,CAAlB;AACAsqB,cAAAA,kBAAkB,CAAC1H,UAAnB,CAA8B4H,WAA9B;AACD;AAvBO,WAAV;AAyBD;AACF;AAED,UAAI,CAAChnB,OAAL,EAAc;AACZ,eAAO,IAAP;AACD;AAED,aAAO,IAAImmB,WAAJ,CAAgBnmB,OAAhB,EAAyBtB,yBAAzB,CAAP;AACD,KA3HH;AAAA;AAAA;AAAA,WA8HE,yBAAgBa,OAAhB;AACEA,MAAAA,OAAO,GAAG,KAAKsnB,oBAAL,CAA0B,OAA1B,EAAmCtnB,OAAnC,CAAV;AACA+mB,MAAAA,iCAAiC,CAAC/mB,OAAD,CAAjC;AACA,UAAMS,OAAO,GAAG,KAAKO,UAAL,CAAgBhB,OAAhB,CAAhB;AACA,UAAMuc,UAAU,GAAGvc,OAAO,CAACuc,UAAR,IAAsB1d,kBAAzC;AACA,aAAO,IAAI+nB,WAAJ,CAAgBnmB,OAAhB,EAAyB8b,UAAzB,CAAP;AACD,KApIH;AAAA;AAAA;AAAA,WAuIE,sBAAavc,OAAb;AACEA,MAAAA,OAAO,GAAG,KAAKsnB,oBAAL,CAA0B,OAA1B,EAAmCtnB,OAAnC,CAAV;AACA,UAAMS,OAAO,GAAG,KAAKO,UAAL,CAAgBhB,OAAhB,CAAhB;AACA,UAAMuc,UAAU,GAAGvc,OAAO,CAACuc,UAAR,IAAsBzd,kBAAzC;AACA,aAAO,IAAI8nB,WAAJ,CAAgBnmB,OAAhB,EAAyB8b,UAAzB,CAAP;AACD,KA5IH;AAAA;AAAA;AAAA,WA+IE,8BAAqBvc,OAArB;AACEA,MAAAA,OAAO,GAAG,KAAKsnB,oBAAL,CAA0B,aAA1B,EAAyCtnB,OAAzC,CAAV;AACA,UAAMS,OAAO,GAAG,KAAKO,UAAL,CAAgBhB,OAAhB,CAAhB;AACA,UAAMuc,UAAU,GAAGvc,OAAO,CAACuc,UAAR,IAAsBxd,iBAAzC;AACA,aAAO,IAAI6nB,WAAJ,CAAgBnmB,OAAhB,EAAyB8b,UAAzB,CAAP;AACD;AApJH;AAAA;AAAA,WAsJE,qCAA4Bvc,OAA5B;AACEA,MAAAA,OAAO,GAAG,KAAKsnB,oBAAL,CAA0B,qBAA1B,EAAiDtnB,OAAjD,CAAV;AACA,UAAMS,OAAO,GAAG,KAAKO,UAAL,CAAgBhB,OAAhB,CAAhB;AACA,UAAMuc,UAAU,GAAGvc,OAAO,CAACuc,UAAR,IAAsB7d,0BAAzC;AACA,aAAO,IAAIkoB,WAAJ,CAAgBnmB,OAAhB,EAAyB8b,UAAzB,CAAP;AACD;AA3JH;AAAA;AAAA;;SC8JgBoL,iBAAiB3yB;AAC/B,SAAOA,GAAG,IAAIA,GAAG,CAAC4yB,OAAlB;AACD;SAgCeC,cAAc7yB;AAC5B,SAAOA,GAAG,IAAI2yB,gBAAgB,CAAC3yB,GAAG,CAAC8yB,WAAL,CAA9B;AACD;;AC9OD,IAAMC,kBAAkB,GAAG,KAAK,EAAL,GAAU,IAArC;SAEgBC,mBAAmBrnB;AACjC,MAAMsnB,aAAa,GAAGtnB,cAAc,CAACunB,0BAAf,EAAtB;AACA,MAAMC,OAAO,GAAGF,aAAa,CAACjnB,UAAd,EAAhB;AACA,eAAYmnB,OAAZ,EAAqB1tB,OAArB,CAA6B,UAAAgO,KAAK;AAChC,QAAM2f,KAAK,GAAGD,OAAO,CAAC1f,KAAD,CAArB;AACA,QAAM4f,GAAG,GAAGnvB,IAAI,CAACgI,GAAL,KAAaknB,KAAK,CAACE,WAA/B;AACA,QAAID,GAAG,GAAGN,kBAAV,EAA8B;AAC5B,aAAOI,OAAO,CAAC1f,KAAD,CAAd;AACD;AACF,GAND;AAOAwf,EAAAA,aAAa,CAACpI,UAAd,CAAyBsI,OAAzB;AACD;SAEeI,+BAA+B5nB,gBAAgC8H,OAAeiP;AAC5F,MAAMuQ,aAAa,GAAGtnB,cAAc,CAACunB,0BAAf,EAAtB;AACA,MAAMC,OAAO,GAAGF,aAAa,CAACjnB,UAAd,EAAhB;AACAmnB,EAAAA,OAAO,CAAC1f,KAAD,CAAP,GAAiB;AACf6f,IAAAA,WAAW,EAAEpvB,IAAI,CAACgI,GAAL,EADE;AAEfumB,IAAAA,WAAW,EAAE/P;AAFE,GAAjB;AAIAuQ,EAAAA,aAAa,CAACpI,UAAd,CAAyBsI,OAAzB;AACD;SAGeK,iCAAiC7nB,gBAAgC8H;AAC/E,MAAMwf,aAAa,GAAGtnB,cAAc,CAACunB,0BAAf,EAAtB;AACA,MAAMC,OAAO,GAAGF,aAAa,CAACjnB,UAAd,EAAhB;AACA,MAAMonB,KAAK,GAAGD,OAAO,CAAC1f,KAAD,CAArB;AACA,MAAI2f,KAAK,IAAIA,KAAK,CAACX,WAAf,IAA8BxV,iBAAiB,CAACmW,KAAK,CAACX,WAAP,CAAnD,EAAwE;AACtE,WAAOW,KAAK,CAACX,WAAb;AACD;AACD,SAAO,IAAP;AACD;SAEegB,kCAAkC9nB,gBAAgC8H;AAChF,MAAMwf,aAAa,GAAGtnB,cAAc,CAACunB,0BAAf,EAAtB;AACA,MAAMC,OAAO,GAAGF,aAAa,CAACjnB,UAAd,EAAhB;AACA,SAAOmnB,OAAO,CAAC1f,KAAD,CAAd;AACAwf,EAAAA,aAAa,CAACpI,UAAd,CAAyBsI,OAAzB;AACD;;ICFoBO;AAUnB,8BAAY1oB,OAAZ;;AAEE,SAAKW,cAAL,GAAsBX,OAAO,CAACW,cAA9B;AACA,SAAKgoB,mBAAL,GAA2B3oB,OAAO,CAAC2oB,mBAAR,KAAgC,KAAhC,GAAwC,KAAxC,GAAgD,IAA3E;AACA,SAAKC,eAAL,GAAuB5oB,OAAO,CAAC4oB,eAAR,KAA4B,KAA5B,GAAoC,KAApC,GAA4C,IAAnE;AACA,SAAKC,eAAL,GAAuB7oB,OAAO,CAAC6oB,eAAR,KAA4B,KAA5B,GAAoC,KAApC,GAA4C,IAAnE;AACA,SAAKC,gBAAL,GAAwB9oB,OAAO,CAAC8oB,gBAAR,KAA6B,KAA7B,GAAqC,KAArC,GAA6C,IAArE;AACA,SAAKC,mBAAL,GAA2B/oB,OAAO,CAAC+oB,mBAAR,KAAgC,KAAhC,GAAwC,KAAxC,GAAgD,IAA3E;AACA,SAAKC,gBAAL,GAAwBhpB,OAAO,CAACgpB,gBAAR,KAA6B,KAA7B,GAAqC,KAArC,GAA6C,IAArE;AACA,SAAKhpB,OAAL,GAAeA,OAAf;AACD;;;WAGD;UAAMA,8EAAuC;AAC3C,UAAMunB,kBAAkB,GAAoB,KAAK5mB,cAAL,CAAoB6mB,qBAApB,EAA5C;AACA,UAAM9P,IAAI,GAAG6P,kBAAkB,CAACvmB,UAAnB,EAAb;AAGAumB,MAAAA,kBAAkB,CAAChd,YAAnB;AAGA,UAAI,KAAKwe,mBAAL,IAA4B/oB,OAAO,CAACipB,kBAAR,KAA+B,KAA/D,EAAsE;AACpE,YAAMxgB,KAAK,GAAGzI,OAAO,CAACyI,KAAR,KAAiBiP,IAAI,SAAJ,IAAAA,IAAI,WAAJ,SAAA,GAAAA,IAAI,CAAEjP,KAAvB,CAAd;AACA,YAAIA,KAAJ,EAAW;AACTggB,UAAAA,iCAAiC,CAAC,KAAK9nB,cAAN,EAAsB8H,KAAtB,CAAjC;AACD;AACF;AAED,UAAIzI,OAAO,CAACkpB,gBAAR,KAA6B,KAAjC,EAAwC;AACtC,aAAKA,gBAAL;AACD;AAED,UAAI,CAAC,KAAKP,mBAAV,EAA+B;AAC7B;AACD;AAGD,UAAI3oB,OAAO,CAAC4X,KAAZ,EAAmB;AACjB,aAAKuR,sBAAL;AACD;AAED,UAAInpB,OAAO,CAACkO,IAAZ,EAAkB;AAChB,aAAKkb,eAAL;AACD;AACF;;;WAGD,cAAK1R,IAAL;UAA4B1X,8EAAkC;AAK5D,UAAIS,OAAO,GAAoB,KAAKE,cAAL,CAAoB6mB,qBAApB,EAA/B;AACA,UAAMxyB,GAAG,GAAGyL,OAAO,CAACO,UAAR,EAAZ;AAIA,UAAIiR,iBAAiB,CAACjd,GAAD,CAAjB,IAA0B,CAACgL,OAAO,CAACqpB,WAAvC,EAAoD;AAElD/wB,QAAAA,IAAI,CAAC,yGAAD,CAAJ;AACD;AAEDmI,MAAAA,OAAO,CAACof,UAAR,CAAmBnI,IAAnB;AAGA,UAAI,KAAKqR,mBAAL,IAA4BrR,IAAI,CAACjP,KAArC,EAA4C;AAC1C8f,QAAAA,8BAA8B,CAAC,KAAK5nB,cAAN,EAAsB+W,IAAI,CAACjP,KAA3B,EAAkCiP,IAAlC,CAA9B;AACD;AAED,UAAI,CAAC1X,OAAO,CAAC4X,KAAb,EAAoB;AAClB;AACD;AAGD,UAAI,KAAKgR,eAAL,IAAwB,KAAKC,eAA7B,IAAgD,KAAKC,gBAAzD,EAA2E;AACzE,YAAMQ,aAAa,GAAkB,KAAK3oB,cAAL,CAAoBK,UAApB,CAA+B;AAAEia,UAAAA,WAAW,EAAE;AAAf,SAA/B,CAArC;AAEA,YAAI,KAAK6N,gBAAT,EAA2B;AACzB,cACElhB,YADF,GAQI8P,IARJ,CACE9P,YADF;AAAA,cAEEa,KAFF,GAQIiP,IARJ,CAEEjP,KAFF;AAAA,cAGEJ,KAHF,GAQIqP,IARJ,CAGErP,KAHF;AAAA,cAIEM,MAJF,GAQI+O,IARJ,CAIE/O,MAJF;AAAA,cAKEhB,QALF,GAQI+P,IARJ,CAKE/P,QALF;AAAA,cAME6B,IANF,GAQIkO,IARJ,CAMElO,IANF;AAAA,cAOE2E,eAPF,GAQIuJ,IARJ,CAOEvJ,eAPF;AASA,cAAMtG,WAAW,GAAG;AAClBD,YAAAA,YAAY,EAAZA,YADkB;AAElBa,YAAAA,KAAK,EAALA,KAFkB;AAGlBJ,YAAAA,KAAK,EAALA,KAHkB;AAIlBM,YAAAA,MAAM,EAANA,MAJkB;AAKlBhB,YAAAA,QAAQ,EAARA,QALkB;AAMlB6B,YAAAA,IAAI,EAAJA,IANkB;AAOlB2E,YAAAA,eAAe,EAAfA;AAPkB,WAApB;AASAmb,UAAAA,aAAa,CAACpN,OAAd,CAAsBxd,0BAAtB,EAAkD,gBAAemJ,WAAf,CAAlD,EAA+E,IAA/E;AACD;AAED,YAAI,KAAK+gB,eAAL,IAAwBlR,IAAI,CAACrP,KAAjC,EAAwC;AAEtCihB,UAAAA,aAAa,CAACpN,OAAd,CAAsBtd,0BAAtB,EAAkD8Y,IAAI,CAACrP,KAAvD,EAA8D,IAA9D;AACD;AAED,YAAI,KAAKwgB,eAAL,IAAwBnR,IAAI,CAACjP,KAAjC,EAAwC;AAEtC6gB,UAAAA,aAAa,CAACpN,OAAd,CAAsBvd,0BAAtB,EAAkD+Y,IAAI,CAACjP,KAAvD,EAA8D,IAA9D;AACD;AACF;AACF;;;WAED;UAAOzI,8EAAkC;AACvC,UAAI;AACF,YAAM0X,IAAI,GAAG,KAAKoB,IAAL,CAAU9Y,OAAV,CAAb;AACA,eAAO,CAAC,CAAC0X,IAAT;AACD,OAHD,CAGE,SAAA,EAAM;AACN,eAAO,KAAP;AACD;AACF;;;WAID;UAAK1X,8EAAkC;AAErC,UAAI0X,IAAJ;AAGA,UAAI,KAAKqR,mBAAL,IAA4B/oB,OAAO,CAACyI,KAAxC,EAA+C;AAC7Cuf,QAAAA,kBAAkB,CAAC,KAAKrnB,cAAN,CAAlB,CAD6C;AAE7C+W,QAAAA,IAAI,GAAG8Q,gCAAgC,CAAC,KAAK7nB,cAAN,EAAsBX,OAAO,CAACyI,KAA9B,CAAvC;AACA,YAAIwJ,iBAAiB,CAACyF,IAAD,CAArB,EAA6B;AAC3B,iBAAOA,IAAP;AACD;AACF;AAED,UAAIjX,OAAO,GAAoB,KAAKE,cAAL,CAAoB6mB,qBAApB,EAA/B;AACA9P,MAAAA,IAAI,GAAGjX,OAAO,CAACO,UAAR,EAAP;AACA,UAAIiR,iBAAiB,CAACyF,IAAD,CAArB,EAA6B;AAE3B,eAAOA,IAAP;AACD;AAED,UAAI,CAAC,KAAKiR,mBAAV,EAA+B;AAC7B,eAAO,IAAP;AACD;AAGD,UAAI3oB,OAAO,CAAC4X,KAAZ,EAAmB;AACjB,YAAI;AACF,cAAM/P,WAAW,GAAG,KAAK0hB,qBAAL,EAApB;AACA,yBAAc7R,IAAd,EAAoB7P,WAApB;AACD,SAHD,SAGU;AACR,eAAKshB,sBAAL;AACD;AACF;AAED,UAAInpB,OAAO,CAACkO,IAAZ,EAAkB;AAChB,YAAI;AACF,cAAM4B,QAAQ,GAAwB,KAAK0Z,cAAL,EAAtC;AACA,yBAAc9R,IAAd,EAAoB5H,QAApB;AACD,SAHD,SAGU;AACR,eAAKsZ,eAAL;AACD;AACF;AAED,UAAInX,iBAAiB,CAACyF,IAAD,CAArB,EAA6B;AAC3B,eAAOA,IAAP;AACD;AACD,aAAO,IAAP;AACD;;;WAGD;AAEE,UAAIjX,OAAJ;AAEA,UAAI,KAAKE,cAAL,CAAoBH,WAApB,CAAgCwa,eAAhC,CAAgD,cAAhD,CAAJ,EAAqE;AACnEva,QAAAA,OAAO,GAAG,KAAKE,cAAL,CAAoB8oB,oBAApB,CAAyC;AAAExO,UAAAA,WAAW,EAAE;AAAf,SAAzC,CAAV;AACAxa,QAAAA,OAAO,CAAC8J,YAAR;AACD;AAED,UAAI,KAAK5J,cAAL,CAAoBH,WAApB,CAAgCwa,eAAhC,CAAgD,gBAAhD,CAAJ,EAAuE;AACrEva,QAAAA,OAAO,GAAG,KAAKE,cAAL,CAAoB8oB,oBAApB,CAAyC;AAAExO,UAAAA,WAAW,EAAE;AAAf,SAAzC,CAAV;AACAxa,QAAAA,OAAO,CAAC8J,YAAR;AACD;AACF;;;WAED;AACE,UAAI9J,OAAJ;AACA,UAAIzL,GAAJ;AAGA,UAAI,KAAK2L,cAAL,CAAoBH,WAApB,CAAgCwa,eAAhC,CAAgD,cAAhD,CAAJ,EAAqE;AACnEva,QAAAA,OAAO,GAAG,KAAKE,cAAL,CAAoB8oB,oBAApB,CAAyC;AAAExO,UAAAA,WAAW,EAAE;AAAf,SAAzC,CAAV;AACAjmB,QAAAA,GAAG,GAAGyL,OAAO,CAACO,UAAR,EAAN;AACA,YAAIhM,GAAG,IAAIA,GAAG,CAACmU,YAAf,EAA6B;AAC3B,iBAAOnU,GAAP;AACD;AACF;AAGD,UAAI,KAAK2L,cAAL,CAAoBH,WAApB,CAAgCwa,eAAhC,CAAgD,gBAAhD,CAAJ,EAAuE;AACrEva,QAAAA,OAAO,GAAG,KAAKE,cAAL,CAAoB8oB,oBAApB,CAAyC;AAAExO,UAAAA,WAAW,EAAE;AAAf,SAAzC,CAAV;AACAjmB,QAAAA,GAAG,GAAGyL,OAAO,CAACO,UAAR,EAAN;AACA,YAAIhM,GAAG,IAAIA,GAAG,CAACmU,YAAf,EAA6B;AAC3B,iBAAOnU,GAAP;AACD;AACF;AAKD,YAAM,IAAIP,YAAJ,CAAiB,yJAAjB,EAA4KyD,SAA5K,CAAN;AACD;;;WAED;AAEE,UAAIuI,OAAJ;AAEA,UAAI,KAAKE,cAAL,CAAoBH,WAApB,CAAgCwa,eAAhC,CAAgD,gBAAhD,CAAJ,EAAuE;AACrEva,QAAAA,OAAO,GAAG,KAAKE,cAAL,CAAoB+oB,2BAApB,CAAgD;AAAEzO,UAAAA,WAAW,EAAE;AAAf,SAAhD,CAAV;AACAxa,QAAAA,OAAO,CAAC8J,YAAR;AACD;AAED,UAAI,KAAK5J,cAAL,CAAoBH,WAApB,CAAgCwa,eAAhC,CAAgD,QAAhD,CAAJ,EAA+D;AAC7Dva,QAAAA,OAAO,GAAG,KAAKE,cAAL,CAAoB+oB,2BAApB,CAAgD;AAAEzO,UAAAA,WAAW,EAAE;AAAf,SAAhD,CAAV;AACAxa,QAAAA,OAAO,CAAC8J,YAAR;AACD;AACF;;;WAED;AACE,UAAI9J,OAAJ;AACA,UAAIoH,WAAJ;AAGA,UAAI,KAAKlH,cAAL,CAAoBH,WAApB,CAAgCwa,eAAhC,CAAgD,gBAAhD,CAAJ,EAAuE;AACrEva,QAAAA,OAAO,GAAG,KAAKE,cAAL,CAAoB+oB,2BAApB,CAAgD;AAAEzO,UAAAA,WAAW,EAAE;AAAf,SAAhD,CAAV;AACApT,QAAAA,WAAW,GAAGpH,OAAO,CAACO,UAAR,EAAd;AACD;AACD,UAAI4Q,sBAAsB,CAAC/J,WAAD,CAA1B,EAAyC;AACvC,eAAOA,WAAP;AACD;AAGD,UAAI,KAAKlH,cAAL,CAAoBH,WAApB,CAAgCwa,eAAhC,CAAgD,QAAhD,CAAJ,EAA+D;AAC7Dva,QAAAA,OAAO,GAAG,KAAKE,cAAL,CAAoB+oB,2BAApB,CAAgD;AAAEzO,UAAAA,WAAW,EAAE;AAAf,SAAhD,CAAV;AACApT,QAAAA,WAAW,GAAGpH,OAAO,CAACO,UAAR,EAAd;AACD;AAED,UAAI4Q,sBAAsB,CAAC/J,WAAD,CAA1B,EAAyC;AACvC,eAAOA,WAAP;AACD;AAGD,YAAM,IAAIpT,YAAJ,CAAiB,uDAAjB,CAAN;AAID;;;WAED,yBAAgBgN,IAAhB;AACE,UAAI,CAAC,KAAKunB,gBAAV,EAA4B;AAC1B;AACD;AACD,UAAMvoB,OAAO,GAAG,KAAKE,cAAL,CAAoBgpB,qBAApB,EAAhB;AACA,UAAI,CAAClpB,OAAL,EAAc;AACZ;AACD;AACDA,MAAAA,OAAO,CAACof,UAAR,CAAmBpe,IAAnB;AACD;;;WAGD,yBAAgBzB,OAAhB;AACE,UAAI,CAAC,KAAKgpB,gBAAV,EAA4B;AAC1B,eAAO,IAAP;AACD;AACD,UAAMvoB,OAAO,GAAG,KAAKE,cAAL,CAAoBgpB,qBAApB,EAAhB;AACA,UAAI,CAAClpB,OAAL,EAAc;AACZ,eAAO,IAAP;AACD;AACD,UAAMmpB,WAAW,GAAGnpB,OAAO,CAACO,UAAR,EAApB;AACA,UAAI,CAAC4oB,WAAD,IAAgB,CAACjC,gBAAgB,CAACiC,WAAW,CAACC,cAAb,CAArC,EAAmE;AACjE,eAAO,IAAP;AACD;AAED,UAAI7pB,OAAJ,EAAa;AACX,YAAQ8pB,WAAR,GAA2C9pB,OAA3C,CAAQ8pB,WAAR;AAAA,YAAqBnlB,iBAArB,GAA2C3E,OAA3C,CAAqB2E,iBAArB;AACA,YAAImlB,WAAW,IAAIF,WAAW,CAACE,WAAZ,KAA4BA,WAA/C,EAA4D;AAC1D,iBAAO,IAAP;AACD;AACD,YAAInlB,iBAAiB,IAAIilB,WAAW,CAACjlB,iBAAZ,KAAkCA,iBAA3D,EAA8E;AAC5E,iBAAO,IAAP;AACD;AACF;AAED,aAAOilB,WAAP;AACD;;;WAED;AACE,UAAI,CAAC,KAAKZ,gBAAV,EAA4B;AAC1B;AACD;AACD,UAAMvoB,OAAO,GAAG,KAAKE,cAAL,CAAoBgpB,qBAApB,EAAhB;AACAlpB,MAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAE8J,YAAT,EAAA;AACD;;;;;ACnVH,SAASwf,iBAAT,CAA2B1vB,IAA3B;AACEA,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AAEA,MAAIsO,MAAM,GAAGtO,IAAI,CAACsO,MAAlB;AACA,MAAIA,MAAM,IAAI,CAACxO,KAAK,CAAC4K,OAAN,CAAc4D,MAAd,CAAf,EAAsC;AACpC,UAAM,IAAIlU,YAAJ,CAAiB,wCACrB,6DADI,CAAN;AAED;AAGD,MAAIuV,MAAM,GAAG3P,IAAI,CAAC2P,MAAlB;AACA,MAAI,CAACA,MAAL,EAAa;AACX,UAAM,IAAIvV,YAAJ,CAAiB,sCACrB,8FADI,CAAN;AAED;AAED,MAAIu1B,UAAU,GAAG,IAAIC,MAAJ,CAAW,eAAX,CAAjB;AACA,MAAI,CAACD,UAAU,CAACttB,IAAX,CAAgBsN,MAAhB,CAAL,EAA8B;AAC5B,UAAM,IAAIvV,YAAJ,CAAiB,iCACrB,8FADI,CAAN;AAED;AAED,MAAI,yBAAAuV,MAAM,MAAN,CAAAA,MAAM,EAAS,SAAT,CAAN,KAA8B,CAAC,CAAnC,EAAsC;AACpC,UAAM,IAAIvV,YAAJ,CAAiB,sEACrB,uEADI,CAAN;AAED;AACF;;;;;AC3BD,IAAMy1B,uBAAuB,GAAG,yBAAhC;AAEA,SAASC,QAAT,CAAkB/oB,QAAlB;;AACE,MAAIA,QAAQ,CAACnB,OAAT,CAAiBqC,GAAjB,CAAqB,cAArB;AAEF,sCAAAlB,QAAQ,CAACnB,OAAT,CAAiBqC,GAAjB,CAAqB,cAArB,EAAsC8nB,WAAtC,mBAA4D,kBAA5D,KAAmF,CAFrF,EAEwF;AACxF,WAAOhpB,QAAQ,CAACipB,IAAT;AAAA,KAEJnoB,KAFI,CAEE,UAAA9L,CAAC;AACN,aAAO;AACLvB,QAAAA,KAAK,EAAEuB,CADF;AAELlC,QAAAA,YAAY,EAAE;AAFT,OAAP;AAID,KAPI,CAAP;AAQC,GAXD,MAWO;AACL,WAAOkN,QAAQ,CAAC3I,IAAT,EAAP;AACD;AACF;AAED,SAAS6xB,YAAT,CAAsBloB,MAAtB,EAAsCX,IAAtC,EAA6DL,QAA7D;;AACE,MAAMjF,QAAQ,GAAG,QAAOsF,IAAP,MAAgB,QAAjC;AACA,MAAMxB,OAAO,GAAG,EAAhB;+CACoB,qCAAAmB,QAAQ,CAACnB,OAAT;;;AAApB,wDAAwD;AAAA,UAA7CsqB,IAA6C;AACtDtqB,MAAAA,OAAO,CAACsqB,IAAI,CAAC,CAAD,CAAL,CAAP,GAAmBA,IAAI,CAAC,CAAD,CAAvB;AACD;;;;;;AACD,MAAMC,MAAM,GAAiB;AAC3B3oB,IAAAA,YAAY,EAAE1F,QAAQ,GAAG,gBAAesF,IAAf,CAAH,GAA0BA,IADrB;AAE3BW,IAAAA,MAAM,EAAEA,MAFmB;AAG3BnC,IAAAA,OAAO,EAAPA;AAH2B,GAA7B;AAKA,MAAI9D,QAAJ,EAAc;AACZquB,IAAAA,MAAM,CAAC5iB,YAAP,GAAsB,MAAtB;AACA4iB,IAAAA,MAAM,CAAC9b,YAAP,GAAsBjN,IAAtB;AACD;AACD,SAAO+oB,MAAP;AACD;AAGD,SAASC,YAAT,CAAsBrqB,MAAtB,EAAsC3D,GAAtC,EAAmDpC,IAAnD;AACE,MAAIgR,IAAI,GAAGhR,IAAI,CAACoH,IAAhB;AACA,MAAIxB,OAAO,GAAG5F,IAAI,CAAC4F,OAAL,IAAgB,EAA9B;AACA,MAAIyqB,WAAW,GAAIzqB,OAAO,CAAC,cAAD,CAAP,IAA2BA,OAAO,CAAC,cAAD,CAAlC,IAAsD,EAAzE;AAEA,MAAIoL,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAA5B,EAAsC;AAEpC,QAAI6e,uBAAuB,CAACxtB,IAAxB,CAA6BguB,WAA7B,CAAJ,EAA+C;AAC7Crf,MAAAA,IAAI,GAAG,gBAAeA,IAAf,CAAP;AACD,KAFD,MAGK,IAAIqf,WAAW,KAAK,mCAApB,EAAyD;AAAA;AAC5Drf,MAAAA,IAAI,GAAG,iDAAeA,IAAf,mBACD;AAAA;AAAA;AAAA,YAAE2F,KAAF;AAAA,YAASjW,KAAT;AAAA,6DAAuBiW,KAAvB,wBAAgC7T,kBAAkB,CAACpC,KAAD,CAAlD;AAAA,OADC,EAENqC,IAFM,CAED,GAFC,CAAP;AAGD;AACF;AAED,MAAIutB,KAAK,GAAG3yB,OAAO2yB,KAAP,IAAgBC,UAA5B;AACA,MAAIC,YAAY,GAAGF,KAAK,CAACluB,GAAD,EAAM;AAC5B2D,IAAAA,MAAM,EAAEA,MADoB;AAE5BH,IAAAA,OAAO,EAAE5F,IAAI,CAAC4F,OAFc;AAG5BoL,IAAAA,IAAI,EAAEA,IAHsB;AAI5B4N,IAAAA,WAAW,EAAE5e,IAAI,CAACkG,eAAL,GAAuB,SAAvB,GAAmC;AAJpB,GAAN,CAAxB;AAOA,MAAI,CAACsqB,YAAY,CAACtuB,OAAlB,EAA2B;AACzBsuB,IAAAA,YAAY,GAAG,SAAQ/wB,OAAR,CAAgB+wB,YAAhB,CAAf;AACD;AAED,SAAOA,YAAY,CAACpzB,IAAb,CAAkB,UAAS2J,QAAT;AACvB,QAAIvM,KAAK,GAAG,CAACuM,QAAQ,CAAC0pB,EAAtB;AACA,QAAI1oB,MAAM,GAAGhB,QAAQ,CAACgB,MAAtB;AACA,WAAO+nB,QAAQ,CAAC/oB,QAAD,CAAR,CACJ3J,IADI,CACC,UAAAgK,IAAI;AACR,aAAO6oB,YAAY,CAACloB,MAAD,EAASX,IAAT,EAAeL,QAAf,CAAnB;AACD,KAHI,EAIJ3J,IAJI,CAIC,UAAA+yB,MAAM;;AACV,UAAI31B,KAAK,KAAI,MAAA21B,MAAM,CAAC9b,YAAP,UAAA,iBAAA,SAAA,MAAqB7Z,KAAzB,CAAT,EAAyC;AAEvC,cAAM21B,MAAN;AACD;AACD,aAAOA,MAAP;AACD,KAVI,CAAP;AAWD,GAdM,CAAP;AAeD;;SChFexpB;AACd,MAAMR,aAAW,GAAG,eAAc,EAAd,EAAkBuqB,WAAlB,EAAkC;AACpDtO,IAAAA,aAAa,EAAE,EADqC;AAAA,GAAlC,CAApB;AAGA,SAAOjc,aAAP;AACD;AAEM,IAAMwqB,uBAAuB,GAA0B;AAC5DxjB,EAAAA,KAAK,EAAE;AACL4f,IAAAA,YAAY,EAAE,CACZ,cADY,EAEZ,gBAFY,EAGZ,QAHY;AADT,GADqD;AAQ5D6D,EAAAA,KAAK,EAAE;AACL7D,IAAAA,YAAY,EAAE,CACZ,cADY,EAEZ,gBAFY,EAGZ,QAHY;AADT,GARqD;AAe5DK,EAAAA,WAAW,EAAE;AACXL,IAAAA,YAAY,EAAE,CACZ,gBADY,EAEZ,cAFY,EAGZ,QAHY;AADH,GAf+C;AAsB5D,wBAAsB;AACpBA,IAAAA,YAAY,EAAE,CACZ,cADY;AADM,GAtBsC;AA2B5D,kBAAgB;AACdA,IAAAA,YAAY,EAAE,CACZ,cADY;AADA;AA3B4C,CAAvD;AAkCA,IAAM2B,mBAAmB,GAAG,IAA5B;SAESmC;MAAkB7wB,2EAAwB;MAAIwT;AAI5D,MAAIsd,cAAc,GAAG9wB,IAAI,CAACwG,OAAL,IAAgB,EAArC;AACA,MAAI,OAAOsqB,cAAc,CAACrP,MAAtB,KAAiC,WAArC,EAAkD;AAChDqP,IAAAA,cAAc,CAACrP,MAAf,GAAwBjO,OAAxB;AACD;AACD,MAAI,OAAOsd,cAAc,CAACpP,QAAtB,KAAmC,WAAvC,EAAoD;AAClDoP,IAAAA,cAAc,CAACpP,QAAf,GAA0BoP,cAAc,CAACrP,MAAf,GAAwB,MAAxB,GAAiC,KAA3D;AACD;AAGD,MAAIqP,cAAc,CAACrP,MAAf,IAAyB,CAACjO,OAA9B,EAAuC;AAErCvV,IAAAA,IAAI,CACF,oEACA,4DADA,GAEA,gEAHE,CAAJ;AAKA6yB,IAAAA,cAAc,CAACrP,MAAf,GAAwB,KAAxB;AACD;AAID,MAAIqP,cAAc,CAACpP,QAAf,KAA4B,MAA5B,IAAsC,CAACoP,cAAc,CAACrP,MAA1D,EAAkE;AAChEqP,IAAAA,cAAc,CAACpP,QAAf,GAA0B,KAA1B;AACD;AAED,SAAOoP,cAAP;AACD;;SCvEeC;AAGd,MAAMprB,OAAO,GAAG;AACd6lB,IAAAA,OAAO,EAAE,KADK;AAEdlkB,IAAAA,iBAAiB,EAAE8oB,YAFL;AAGdjqB,IAAAA,WAAW,EAAEQ,UAAU,EAHT;AAIdL,IAAAA,cAAc,EAAEqqB,uBAJF;AAKd1T,IAAAA,kBAAkB,EAAE;AAClByR,MAAAA,mBAAmB,EAAnBA;AADkB;AALN,GAAhB;AASA,SAAO/oB,OAAP;AACD;AAED,SAASqrB,YAAT,CAAsBrrB,OAAtB,EAA+B3F,IAA/B;AACE,SAAO,eAAc,EAAd,EAAkB2F,OAAlB,EAA2BnF,UAAU,CAACR,IAAD,CAArC,EAA6C;AAClDsG,IAAAA,cAAc,EAAE,eAAc,EAAd,EAAkBX,OAAO,CAACW,cAA1B,EAA0CtG,IAAI,CAACsG,cAA/C,CADkC;AAElD2W,IAAAA,kBAAkB,EAAE,eAAc,EAAd,EAAkBtX,OAAO,CAACsX,kBAA1B,EAA8Cjd,IAAI,CAACid,kBAAnD;AAF8B,GAA7C,CAAP;AAID;SAEegU;MAAajxB,2EAAwB;;AACnD0vB,EAAAA,iBAAiB,CAAC1vB,IAAD,CAAjB;AACAA,EAAAA,IAAI,GAAGgxB,YAAY,CAACD,iBAAiB,EAAlB,EAAsB/wB,IAAtB,CAAnB;AACA,SAAOQ,UAAU,CAAC;AAEhBmP,IAAAA,MAAM,EAAEnN,mBAAmB,CAACxC,IAAI,CAAC2P,MAAN,CAFX;AAGhBP,IAAAA,QAAQ,EAAE5M,mBAAmB,CAACxC,IAAI,CAACoP,QAAN,CAHb;AAIhBiD,IAAAA,YAAY,EAAE7P,mBAAmB,CAACxC,IAAI,CAACqS,YAAN,CAJjB;AAKhBC,IAAAA,WAAW,EAAE9P,mBAAmB,CAACxC,IAAI,CAACsS,WAAN,CALhB;AAMhBE,IAAAA,SAAS,EAAEhQ,mBAAmB,CAACxC,IAAI,CAACwS,SAAN,CANd;AAOhBD,IAAAA,SAAS,EAAE/P,mBAAmB,CAACxC,IAAI,CAACuS,SAAN,CAPd;AAQhBjF,IAAAA,QAAQ,EAAEtN,IAAI,CAACsN,QARC;AAShBY,IAAAA,WAAW,EAAElO,IAAI,CAACkO,WATF;AAUhBE,IAAAA,KAAK,EAAEpO,IAAI,CAACoO,KAVI;AAWhBE,IAAAA,MAAM,EAAEtO,IAAI,CAACsO,MAXG;AAYhB4iB,IAAAA,qBAAqB,EAAElxB,IAAI,CAACkxB,qBAZZ;AAahB/iB,IAAAA,YAAY,EAAEnO,IAAI,CAACmO,YAbH;AAchBZ,IAAAA,YAAY,EAAEvN,IAAI,CAACuN,YAdH;AAehBsG,IAAAA,IAAI,EAAE7T,IAAI,CAAC6T,IAAL,KAAc,KAAd,GAAsB,KAAtB,GAA8B,IAfpB;AAgBhBsd,IAAAA,sBAAsB,EAAEnxB,IAAI,CAACmxB,sBAhBb;AAmBhB7pB,IAAAA,iBAAiB,EAAEtH,IAAI,CAACsH,iBAnBR;AAoBhBU,IAAAA,iBAAiB,EAAEhI,IAAI,CAACgI,iBApBR;AAqBhBujB,IAAAA,kBAAkB,EAAEvrB,IAAI,CAACurB,kBArBT;AAsBhB6F,IAAAA,kBAAkB,EAAEpxB,IAAI,CAACoxB,kBAtBT;AAuBhBjrB,IAAAA,WAAW,EAAEnG,IAAI,CAACmG,WAvBF;AAwBhBP,IAAAA,OAAO,EAAE5F,IAAI,CAAC4F,OAxBE;AAyBhB4lB,IAAAA,OAAO,EAAE,CAAC,CAACxrB,IAAI,CAACwrB,OAzBA;AA0BhBllB,IAAAA,cAAc,EAAEtG,IAAI,CAACsG,cA1BL;AA2BhB2W,IAAAA,kBAAkB,EAAEjd,IAAI,CAACid,kBA3BT;AA4BhBzW,IAAAA,OAAO,EAAEqqB,iBAAiB,CAAC7wB,IAAD,EAAOwT,OAAO,EAAd,CA5BV;AA6BhB6d,IAAAA,IAAI,EAAErxB,IAAI,CAACqxB,IA7BK;AA8BhB5jB,IAAAA,aAAa,EAAEzN,IAAI,CAACyN,aA9BJ;AA+BhBC,IAAAA,mBAAmB,EAAE1N,IAAI,CAAC0N,mBA/BV;AAgChB4jB,IAAAA,aAAa,EAAEtxB,IAAI,CAACsxB,aAhCJ;AAiChBC,IAAAA,eAAe,EAAEvxB,IAAI,CAACuxB,eAjCN;AAmChBvE,IAAAA,GAAG,EAAE;AACHwE,MAAAA,oBAAoB,EAAE,CAAC,EAAC,MAAAxxB,IAAI,CAACgtB,GAAL,UAAA,iBAAA,SAAA,MAAUwE,oBAAX,CADpB;AAEHnY,MAAAA,qBAAqB,EAAE,CAAA,MAAArZ,IAAI,CAACgtB,GAAL,UAAA,iBAAA,SAAA,MAAU3T,qBAAV,MAAoC,KAFxD;AAAA,KAnCW;AAyChBvF,IAAAA,eAAe,EAAE,CAAC,CAAC9T,IAAI,CAAC8T,eAzCR;AA4ChB7E,IAAAA,YAAY,EAAEjP,IAAI,CAACiP;AA5CH,GAAD,CAAjB;AA8CD;;SCzEqBwiB,qBAAtB;AAAA;AAAA;;uEAAO,iBACLjsB,UADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAELG,YAAAA,OAFK,2DAE6B,EAF7B;AAAA;AAAA,mBAIqBH,UAAU,CAAC2H,KAAX,CAAiB+I,kBAAjB,CAAoCvQ,OAApC,CAJrB;AAAA;AAIC0H,YAAAA,WAJD;AAKCoI,YAAAA,QALD,GAKYF,eAAe,CAAC/P,UAAD,EAAa6H,WAAb,CAL3B;AAAA,gEAYI7H,UAAU,CAACG,UAAYA,QAZ3B,yCAOH0rB,IAPG,EAOHA,IAPG,qCAOI,SAPJ,iEAQHnrB,eARG,EAQHA,eARG,sCAQe,IARf,kEASHqrB,eATG,EASHA,eATG,sCASe1zB,SATf,kEAUHyzB,aAVG,EAUHA,aAVG,sCAUazzB,SAVb,kEAWHkQ,MAXG,EAWHA,MAXG,sCAWMlQ,SAXN;AAcCwf,YAAAA,IAdD,qCAeA5H;AACH4b,cAAAA,IAAI,EAAJA;AACAnrB,cAAAA,eAAe,EAAfA;AACAqrB,cAAAA,eAAe,EAAfA;AACAD,cAAAA,aAAa,EAAbA;AACAvjB,cAAAA,MAAM,EAANA;cApBG;AAAA,6CAsBEsP,IAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;SAyBSqU,0BAA0BlsB,YAAkCG;AAC1E,MAAMgsB,SAAS,GAAGC,uBAAuB,CAACpsB,UAAD,EAAaG,OAAb,CAAzC;AACA,MAAIgsB,SAAS,SAAT,IAAAA,SAAS,WAAT,SAAA,GAAAA,SAAS,CAAErnB,iBAAf,EAAkC;AAChC,WAAO,IAAP;AACD;AACD,SAAO,KAAP;AACD;SAGesnB,wBACdpsB,YACAG;AAEAA,EAAAA,OAAO,GAAGnF,UAAU,CAACmF,OAAD,CAApB;AACAA,EAAAA,OAAO,qCAAQH,UAAU,CAACG,UAAYA,QAAtC;AACA,MAAIgsB,SAAJ;AACA,MAAI;AACFA,IAAAA,SAAS,GAAGnsB,UAAU,CAACyX,kBAAX,CAA8BwB,IAA9B,CAAmC9Y,OAAnC,CAAZ;AACD,GAFD,CAEE,OAAO5J,CAAP,EAAU;AAEX;AAED,MAAI,CAAC41B,SAAL,EAAgB;AACd;AACD;AAED,MAAIE,sBAAsB,CAACF,SAAD,EAAYhsB,OAAZ,CAA1B,EAAgD;AAC9C,WAAOgsB,SAAP;AACD;AAKD1zB,EAAAA,IAAI,CAAC,sEACH,4DADE,CAAJ;AAGD;SAEqB6zB,kBAAtB;AAAA;AAAA;;oEAAO,kBACLtsB,UADK,EAELG,OAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAILA,YAAAA,OAAO,GAAGnF,UAAU,CAACmF,OAAD,CAApB;AACAA,YAAAA,OAAO,qCAAQH,UAAU,CAACG,UAAYA,QAAtC,CALK;AAOCosB,YAAAA,iBAPD,GAOqBH,uBAAuB,CAACpsB,UAAD,EAAaG,OAAb,CAP5C;AAAA,iBAQDosB,iBARC;AAAA;AAAA;AAAA;AAAA,8CASIA,iBATJ;AAAA;AAAA,8CAYEN,qBAAqB,CAACjsB,UAAD,EAAaG,OAAb,CAZvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;SAeSqsB,oBAAqBxsB,YAAkC6X;AACrE7X,EAAAA,UAAU,CAACyX,kBAAX,CAA8BK,IAA9B,CAAmCD,IAAnC,EAAyC;AAAE2R,IAAAA,WAAW,EAAE;AAAf,GAAzC;AACD;SAEeiD,qBAAsBzsB;AACpCA,EAAAA,UAAU,CAACyX,kBAAX,CAA8BC,KAA9B;AACD;SAEe2U,uBAAwBxU;MAAM1X,8EAAmC;AAE/E,MAAMusB,IAAI,GAAG,CACX,QADW,EAEX,UAFW,EAGX,aAHW,EAIX,OAJW,EAKX,eALW,EAMX,qBANW,EAOX,iBAPW,EAQX,eARW,CAAb;AAUA,MAAIC,gCAAgC,CAAC9U,IAAD,EAAO1X,OAAP,EAAgBusB,IAAhB,CAAhC,KAA0D,KAA9D,EAAqE;AACnE,WAAO,KAAP;AACD;AAGD,MAAQb,IAAR,GAAiB1rB,OAAjB,CAAQ0rB,IAAR;AACA,MAAIe,6BAA6B,CAAC/U,IAAD,EAAOgU,IAAP,CAA7B,KAA8C,KAAlD,EAAyD;AACvD,WAAO,KAAP;AACD;AAED,SAAO,IAAP;AACD;SAEee,8BAA8B/U,MAAMgU;AAElD,MAAMgB,kBAAkB,GAAGhB,IAAI,IAAIA,IAAI,KAAK,SAAjB,IAA8BA,IAAI,KAAK,SAAlE;AACA,MAAIgB,kBAAJ,EAAwB;AACtB,QAAIhB,IAAI,KAAKhU,IAAI,CAACgU,IAAlB,EAAwB;AAEtB,aAAO,KAAP;AACD;AACF;AACD,SAAO,IAAP;AACD;SAEec,iCAAiC9U,MAAM1X,SAASusB;AAG9D,MAAMI,QAAQ,GAAGJ,IAAI,CAAC3J,IAAL,CAAU,UAAA3lB,GAAG;AAC5B,QAAMlC,KAAK,GAAGiF,OAAO,CAAC/C,GAAD,CAArB;AACA,QAAIlC,KAAK,IAAIA,KAAK,KAAK2c,IAAI,CAACza,GAAD,CAA3B,EAAkC;AAChC,aAAO,IAAP;AACD;AACF,GALgB,CAAjB;AAMA,SAAO,CAAC0vB,QAAR;AACD;;ACpHD,SAASC,WAAT,CAAqBlV,IAArB;AACE,SAAO;AACLA,IAAAA,IAAI,EAAJA,IADK;AAEL/S,IAAAA,iBAAiB,EAAE+S,IAAI,CAAC/S,iBAFnB;AAGL8D,IAAAA,KAAK,EAAEiP,IAAI,CAACjP;AAHP,GAAP;AAKD;SAGqBokB,QAAtB;AAAA;AAAA;;0DAAO,iBACLhtB,UADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAELG,YAAAA,OAFK,2DAEsB,EAFtB;AAILA,YAAAA,OAAO,GAAGnF,UAAU,CAACmF,OAAD,CAApB;AAEI0X,YAAAA,IANC,GAMMuU,uBAAuB,CAACpsB,UAAD,EAAaG,OAAb,CAN7B;AAAA,kBASD0X,IAAI,SAAJ,IAAAA,IAAI,WAAJ,SAAA,GAAAA,IAAI,CAAE/S,iBATL;AAAA;AAAA;AAAA;AAAA,6CAUIioB,WAAW,CAAClV,IAAD,CAVf;AAAA;AAAA;AAAA,mBAcQoU,qBAAqB,CAACjsB,UAAD,oCAAkB6X,OAAS1X,QAA3B,CAd7B;AAAA;AAcL0X,YAAAA,IAdK;AAeC9a,YAAAA,OAfD,GAeW0P,eAAe,CAACzM,UAAD,CAf1B;AAAA,oBA2BD6X,IA3BC,EAiBH/P,QAjBG,SAiBHA,QAjBG,EAkBHY,WAlBG,SAkBHA,WAlBG,EAmBHE,KAnBG,SAmBHA,KAnBG,EAoBHE,MApBG,SAoBHA,MApBG,EAqBHpI,eArBG,SAqBHA,eArBG,EAsBHuH,aAtBG,SAsBHA,aAtBG,EAuBHC,mBAvBG,SAuBHA,mBAvBG,EAwBH6jB,eAxBG,SAwBHA,eAxBG,EAyBHD,aAzBG,SAyBHA,aAzBG,EA0BHvjB,MA1BG,SA0BHA,MA1BG;AA4BCkB,YAAAA,YA5BD,GA4BgBtJ,OAAO,CAACsJ,YAAR,IAAwBzJ,UAAU,CAACG,OAAX,CAAmBsJ,YA5B3D;AA6BL/I,YAAAA,eAAe,GAAGA,eAAe,SAAf,IAAAA,eAAe,WAAf,GAAAA,eAAA,GAAmB,IAArC;AAGM9D,YAAAA,GAhCD,aAgCUG,OAhCV;AAiCCyI,YAAAA,MAjCD,GAiCU;AACbuE,cAAAA,SAAS,EAAEjC;AACXiB,cAAAA,KAAK,EAAED,MAAO,CAACvL,IAAR,CAAa,GAAb;AACP0vB,cAAAA,YAAY,EAAEvkB;AACdwkB,cAAAA,cAAc,EAAEjlB;AAChBklB,cAAAA,qBAAqB,EAAEjlB;AACvBU,cAAAA,KAAK,EAALA;eACImjB,eAAe,IAAI;AAAEqB,cAAAA,gBAAgB,EAAErB;AAApB,gBACnBD,aAAa,IAAI;AAAEuB,cAAAA,cAAc,EAAEvB;AAAlB,gBAIjBriB,YAAY,IAAI;AAAE6jB,cAAAA,aAAa,EAAE7jB;AAAjB,cAZP,EAaTlB,MAAM,IAAI;AAAEglB,cAAAA,OAAO,EAAEhlB;AAAX,aAbD,CAjCV;AAkDCnI,YAAAA,OAlDD,GAkDW;AACd,8BAAgB;AADF,aAlDX;AAAA;AAAA,mBAsDcC,WAAW,CAACL,UAAD,EAAa;AACzCO,cAAAA,MAAM,EAAE,MADiC;AAEzC3D,cAAAA,GAAG,EAAHA,GAFyC;AAGzCwD,cAAAA,OAAO,EAAPA,OAHyC;AAIzCM,cAAAA,eAAe,EAAfA,eAJyC;AAKzClG,cAAAA,IAAI,EAAEgL;AALmC,aAAb,CAtDzB;AAAA;AAsDCzD,YAAAA,IAtDD;AA6DC+C,YAAAA,iBA7DD,GA6DqB/C,IAAI,CAACyrB,kBA7D1B;AA+DCC,YAAAA,OA/DD,qCAgEA5V;AACH/S,cAAAA,iBAAiB,EAAjBA;AAGApE,cAAAA,eAAe,EAAfA;AACAkI,cAAAA,KAAK,EAALA;AACAE,cAAAA,MAAM,EAANA;AACAgjB,cAAAA,aAAa,EAAbA;AACAC,cAAAA,eAAe,EAAfA;cAxEG;AA2ELS,YAAAA,mBAAmB,CAACxsB,UAAD,EAAaytB,OAAb,CAAnB;AA3EK,6CA6EEV,WAAW,CAACU,OAAD,CA7Eb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AC9BP,IAAMC,cAAc,GAAG,SAASA,cAAT,CAAwBC,KAAxB;AAErB,SAASA,KAAK,CAACC,OAAN,KAAkB,KAA3B;AACD,CAHD;AAKA,IAAMC,oCAAoC,GAAG,SAASA,oCAAT,CAA+CC,MAA/C;;AAC3C,MAAMC,sBAAsB,GAAG,EAA/B;AACA,MAAMC,qBAAqB,GAAG,EAA9B;AACA,MAAMC,wBAAwB,GAAG,EAAjC;AAIA,MAAI,CAACH,MAAM,CAAC5yB,KAAZ,EAAmB;AACjB8yB,IAAAA,qBAAqB,CAAC3wB,IAAtB,CAA2BywB,MAA3B;AACA,WAAO;AAAEC,MAAAA,sBAAsB,EAAtBA,sBAAF;AAA0BC,MAAAA,qBAAqB,EAArBA,qBAA1B;AAAiDC,MAAAA,wBAAwB,EAAxBA;AAAjD,KAAP;AACD;+CAEkBH,MAAM,CAAC5yB;;;AAA1B,wDAAkC;AAAA,UAAxByyB,KAAwB;AAEhC,UAAKD,cAAc,CAAEC,KAAF,CAAnB,EAA+B;AAE7BK,QAAAA,qBAAqB,CAAC3wB,IAAtB,CAA2BswB,KAA3B;AAEA,YAAK,MAAAA,KAAK,CAACzyB,KAAN,UAAA,iBAAA,KAAA,GAAe,KAApB,EAA4B;AAC1B6yB,UAAAA,sBAAsB,CAACJ,KAAK,CAACr5B,IAAP,CAAtB,GAAqCq5B,KAAK,CAACzyB,KAA3C;AACD;AAEF,OARD,MAQO;AACL+yB,QAAAA,wBAAwB,CAACN,KAAK,CAACr5B,IAAP,CAAxB,GAAuC,MAAAq5B,KAAK,CAACzyB,KAAN,UAAA,iBAAA,KAAA,GAAe,EAAtD;AACD;AACF;;;;;;AACD,SAAO;AAAE6yB,IAAAA,sBAAsB,EAAtBA,sBAAF;AAA0BC,IAAAA,qBAAqB,EAArBA,qBAA1B;AAAiDC,IAAAA,wBAAwB,EAAxBA;AAAjD,GAAP;AACD,CA3BD;AA6BO,IAAMC,8BAA8B,GAAG,SAASA,8BAAT,CAAyCC,UAAzC;AAE5CA,EAAAA,UAAU,GAAG7zB,KAAK,CAAC4K,OAAN,CAAcipB,UAAd,IAA4BA,UAA5B,GAAyC,CAAEA,UAAF,CAAtD;AACA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,aAAa,GAAG,EAAtB;AACA,MAAMC,eAAe,GAAG,EAAxB;gDAEoBH;;;AAApB,2DAAiC;AAAA,UAAvBL,MAAuB;AAC/B,kCAIID,oCAAoC,CAACC,MAAD,CAJxC;AAAA,UACEC,sBADF,yBACEA,sBADF;AAAA,UAEEC,qBAFF,yBAEEA,qBAFF;AAAA,UAGEC,wBAHF,yBAGEA,wBAHF;AAKAG,MAAAA,YAAY,CAAC/wB,IAAb,CAAkB2wB,qBAAlB;AACAK,MAAAA,aAAa,CAACP,MAAM,CAACx5B,IAAR,CAAb,GAA6By5B,sBAA7B;AACAO,MAAAA,eAAe,CAACR,MAAM,CAACx5B,IAAR,CAAf,GAA+B25B,wBAA/B;AACD;;;;;;AAED,SAAO;AAAEI,IAAAA,aAAa,EAAbA,aAAF;AAAiBD,IAAAA,YAAY,EAAZA,YAAjB;AAA+BE,IAAAA,eAAe,EAAfA;AAA/B,GAAP;AACD,CAnBM;;AC7BP,IAAMC,mBAAmB,GAAG,SAASA,mBAAT,CAA6BvuB,UAA7B;MAC1BwuB,wBAAAA;mCACAT;MAAAA,4DAAyB;mCACzBE;MAAAA,8DAA2B;4BAC3BQ;MAAAA,wCAAY;AAEZ,MAAMC,MAAM,GAAGF,gBAAgB,CAACpqB,IAAhC;AACA,qDAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAeoB,YAAAA,MAAf,2DAAyC,EAAzC;AACCpF,YAAAA,OADD,GACW;AACd,8BAAgB,kBADF;AAEd,wBAAUouB,gBAAgB,CAACG,OAAjB,IAA4B;AAFxB,aADX;AAKCnjB,YAAAA,IALD,GAKQ,iEACRuiB,yBACAvoB,SACAyoB,yBAHQ,CALR;AAAA;AAAA;AAAA,mBAYoB5tB,WAAW,CAACL,UAAD,EAAa;AAC7CpD,cAAAA,GAAG,EAAE8xB,MADwC;AAE7CnuB,cAAAA,MAAM,EAAEiuB,gBAAgB,CAACjuB,MAFoB;AAG7CH,cAAAA,OAAO,EAAPA,OAH6C;AAI7C5F,cAAAA,IAAI,EAAEgR,IAJuC;AAK7C9K,cAAAA,eAAe,EAAE,MAAA+tB,SAAS,SAAT,IAAAA,SAAS,WAAT,SAAA,GAAAA,SAAS,CAAE/tB,eAAX,UAAA,iBAAA,KAAA,GAA8B;AALF,aAAb,CAZ/B;AAAA;AAYGa,YAAAA,QAZH;AAAA,6CAoBIvB,UAAU,CAACwnB,GAAX,CAAeoH,eAAf,oBAAoCrtB,SAApC,EAAgDktB,SAAhD,EAA2D,IAA3D,CApBJ;AAAA;AAAA;AAAA;AAAA,kBAuBC,EAAE,uBAAev6B,YAAjB,KAAkC,EAAC,oBAAA,IAAA,sBAAA,SAAA,GAAA,YAAKE,GAAN,CAvBnC;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BGmN,YAAAA,SA3BH,GA2Bc,YAAInN,GA3BlB;AA4BGiK,YAAAA,OA5BH,GA4BakD,SAAQ,CAACsN,YAAT,IAAyBzT,IAAI,CAACC,KAAL,CAAWkG,SAAQ,CAACS,YAApB,CA5BtC;AA6BG6sB,YAAAA,aA7BH,GA6BmBttB,SAAQ,CAACnB,OAAT,CAAiB,kBAAjB,KAAwCmB,SAAQ,CAACnB,OAAT,CAAiB,kBAAjB,CA7B3D;AA+BG0uB,YAAAA,WA/BH,GA+BiB9uB,UAAU,CAACwnB,GAAX,CAAeoH,eAAf,oBAAoCvwB,QAApC,EAA+CowB,SAA/C,EAA0D,KAA1D,CA/BjB;AAgCH,gBAAIltB,SAAQ,CAACgB,MAAT,KAAoB,GAApB,IAA2BssB,aAAa,KAAK,mCAAjD,EAAsF;AAKpFC,cAAAA,WAAW,CAACC,MAAZ,GAAqB,IAArB;AACD,aAtCE;AAAA,kBAyCGD,WAzCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AA4CD,CAnDD;AAsEA,IAAME,iBAAiB,GAAG,SAASA,iBAAT,CAA4BhvB,UAA5B,EAA8DwuB,gBAA9D,EAAgFC,SAAhF;AAGxB,MAAMQ,SAAS,GAAGV,mBAAlB;AACA,8BAAyDL,8BAA8B,CAAEM,gBAAF,CAAvF;AAAA,MAAQH,aAAR,yBAAQA,aAAR;AAAA,MAAuBD,YAAvB,yBAAuBA,YAAvB;AAAA,MAAqCE,eAArC,yBAAqCA,eAArC;AAEA,MAAMR,MAAM,GAAGmB,SAAS,CAACjvB,UAAD,EAAa;AACnCwuB,IAAAA,gBAAgB,EAAhBA,gBADmC;AAEnCT,IAAAA,sBAAsB,EAAEM,aAAa,CAACG,gBAAgB,CAACl6B,IAAlB,CAFF;AAGnC25B,IAAAA,wBAAwB,EAAEK,eAAe,CAACE,gBAAgB,CAACl6B,IAAlB,CAHN;AAInCm6B,IAAAA,SAAS,EAATA;AAJmC,GAAb,CAAxB;AAMAX,EAAAA,MAAM,CAACM,YAAP,GAAsBA,YAAtB;AACA,SAAON,MAAP;AACD,CAdD;;ACxEO,IAAMoB,4BAA4B,GAAG,SAASA,4BAAT,CAC1ClvB,UAD0C,EAE1CmvB,gBAF0C;MAG1CV,gFAAY;AAEZ,SAAO,oBAAoB,qBAAAU,gBAAgB,MAAhB,CAAAA,gBAAgB,EAAM,UAAAC,WAAW;AAC1D,WAAO,CACLA,WAAW,CAAC96B,IADP,EAEL06B,iBAAiB,CAAChvB,UAAD,EAAaovB,WAAb,EAA0BX,SAA1B,CAFZ,CAAP;AAID,GAL0C,CAApC,CAAP;AAMD,CAXM;;;ACGP,IAAMY,WAAW,GAAG,oBAAmB,iCACrC,aADqC,EAErC,SAFqC;AAAA,kBAGhC,UAAC1B,KAAD;AAAA,SAAW,CAAEA,KAAF,EAAS,CAAC,CAAC,iBAAX,CAAX;AAAA,CAHgC,CAAnB,CAApB;AAKO,IAAM2B,oBAAoB,GAAG,SAASA,oBAAT,CAA+BtvB,UAA/B,EAAiE8uB,WAAjE;;MAA8EL,gFAAY;AAC5H,MAAMc,OAAO,GAAG,EAAhB;AACA,MAAMC,OAAO,GAAG,EAAhB;AAEA,mDAAYV,WAAZ,mBACW,UAAAnB,KAAK;AAAA,WAAI,CAAC0B,WAAW,CAAC1B,KAAD,CAAhB;AAAA,GADhB,EAEG/yB,OAFH,CAEY,UAAA+yB,KAAK;AACb,QAAM8B,aAAa,GAAG,QAAOX,WAAW,CAACnB,KAAD,CAAlB,MAA8B,QAA9B,IAA0C,CAAC,CAACmB,WAAW,CAACnB,KAAD,CAA7E;AAEA,QAAK,CAAC8B,aAAN,EAAsB;AAEpBD,MAAAA,OAAO,CAAC7B,KAAD,CAAP,GAAiBmB,WAAW,CAACnB,KAAD,CAA5B;AACA;AACD;AAED,QAAKmB,WAAW,CAACnB,KAAD,CAAX,CAAmB+B,GAAxB,EAA8B;AAE5BH,MAAAA,OAAO,CAACT,WAAW,CAACnB,KAAD,CAAX,CAAmBr5B,IAApB,CAAP,GAAmC06B,iBAAiB,CAAChvB,UAAD,EAAa8uB,WAAW,CAACnB,KAAD,CAAxB,EAAiCc,SAAjC,CAApD;AACA;AACD;AAEK,QAAAkB,KAAsCb,WAAW,CAACnB,KAAD,CAAjD;AAAA,QAASiC,UAAT,KAAA,CAAE10B,KAAF;AAAA,QAAqB2K,IAArB,KAAA,CAAqBA,IAArB;AAAA,QAA8BgqB,IAA9B,cAAA,QAAA,QAAA,EAAA;AACNL,IAAAA,OAAO,CAAC7B,KAAD,CAAP;AAAmB9nB,MAAAA,IAAI,EAAJA;OAASgqB,KAA5B;AAEA,QAAKhqB,IAAI,KAAK,QAAd,EAAyB;AAEvB2pB,MAAAA,OAAO,CAAC7B,KAAD,CAAP,CAAezyB,KAAf,GAAuB00B,UAAvB;AACA;AACD;AAGDJ,IAAAA,OAAO,CAAC7B,KAAD,CAAP,CAAezyB,KAAf,GAAuB,EAAvB;AACA,oBAAe00B,UAAf,EACGh1B,OADH,CACY;;UAAEk1B;UAAU50B;AACpB,UAAIA,KAAK,CAACw0B,GAAV,EAAe;AAAA;AAEbH,QAAAA,OAAO,+CAAI5B,KAAJ,wBAAamC,QAAQ,CAACx7B,IAAT,IAAiBw7B,QAA9B,EAAP,GAAmDd,iBAAiB,CAAChvB,UAAD,EAAa9E,KAAb,EAAoBuzB,SAApB,CAApE;AACD,OAHD,MAGO;AAELe,QAAAA,OAAO,CAAC7B,KAAD,CAAP,CAAezyB,KAAf,CAAqB40B,QAArB,IAAiC50B,KAAjC;AACD;AACF,KATH;AAUD,GAtCH;AAwCA,SAAO;AAAEs0B,IAAAA,OAAO,EAAPA,OAAF;AAAWD,IAAAA,OAAO,EAAPA;AAAX,GAAP;AACD,CA7CM;AA+CP,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAACjB,WAAD,EAAc5zB,KAAd;AACtB,eAAYA,KAAZ,EAAmBN,OAAnB,CAA2B,UAAA4hB,CAAC;AAC1B,QAAIA,CAAC,KAAK,WAAV,EAAuB;AACrB,UAAMwT,KAAK,GAAG11B,KAAK,CAAC4K,OAAN,CAAchK,KAAK,CAACshB,CAAD,CAAnB,IAA0BthB,KAAK,CAACshB,CAAD,CAAL,CAAS,CAAT,CAA1B,GAAwCthB,KAAK,CAACshB,CAAD,CAA3D;AACA,UAAI,OAAOwT,KAAP,KAAiB,QAArB,EAA+B;AAE7B,YAAMrF,MAAM,GAAGsF,QAAQ,CAAC;AAAEzyB,UAAAA,IAAI,EAAEwyB,KAAR;AAAexF,UAAAA,IAAI,EAAEsE;AAArB,SAAD,CAAR,CAA6C,CAA7C,CAAf;AACA,YAAInE,MAAJ,EAAY;AACVzvB,UAAAA,KAAK,CAACshB,CAAD,CAAL,GAAWmO,MAAX;AACA;AACD;AACF;AACF;AACD,QAAIrwB,KAAK,CAAC4K,OAAN,CAAchK,KAAK,CAACshB,CAAD,CAAnB,CAAJ,EAA6B;AAC3BthB,MAAAA,KAAK,CAACshB,CAAD,CAAL,CAAS5hB,OAAT,CAAiB,UAAAs1B,UAAU;AAAA,eAAIH,eAAe,CAACjB,WAAD,EAAcoB,UAAd,CAAnB;AAAA,OAA3B;AACD;AACF,GAfD;AAgBD,CAjBD;AAmBA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACnwB,UAAD,EAAmCovB,WAAnC,EAAgDX,SAAhD;AAE/B,MAAIW,WAAW,CAACM,GAAhB,EAAqB;AACnB,QAAMU,kBAAkB,GAAGlB,4BAA4B,CAAElvB,UAAF,EAAc,CAACovB,WAAD,CAAd,EAA6BX,SAA7B,CAAvD;AACA,QAAM4B,QAAQ,GAAGD,kBAAkB,CAAChB,WAAW,CAAC96B,IAAb,CAAnC;AACA,6CACK86B;AACHtB,MAAAA,MAAM,EAAEuC;MAFV;AAID;AAED,SAAOjB,WAAP;AACD,CAZD;AAcO,IAAMkB,gBAAgB,GAAG,SAASA,gBAAT,CAA2BtwB,UAA3B,EAA6D8uB,WAA7D;MAA0EL,gFAAY;;AAKpH,MAAM8B,eAAe,GAAG,CAAA,MAAAzB,WAAW,CAACM,WAAZ,UAAA,iBAAA,SAAA,MAAyBl0B,KAAzB,KAAkC,EAA1D;AAEAq1B,EAAAA,eAAe,CAAC31B,OAAhB,CACE,UAAAw0B,WAAW;AAAA,WAAIW,eAAe,CAACjB,WAAD,EAAcM,WAAd,CAAnB;AAAA,GADb;AAIA,MAAMoB,YAAY,GAAG,qBAAAD,eAAe,MAAf,CAAAA,eAAe,EAAK,UAAAnB,WAAW;AAAA,WAAIe,wBAAwB,CAAEnwB,UAAF,EAAcovB,WAAd,EAA2BX,SAA3B,CAA5B;AAAA,GAAhB,CAApC;AAEA,8BAA6Ba,oBAAoB,CAAEtvB,UAAF,EAAc8uB,WAAd,EAA2BL,SAA3B,CAAjD;AAAA,MAAQe,OAAR,yBAAQA,OAAR;AAAA,MAAiBD,OAAjB,yBAAiBA,OAAjB;AAEA,SAAO;AACLiB,IAAAA,YAAY,EAAZA,YADK;AAELhB,IAAAA,OAAO,EAAPA,OAFK;AAGLD,IAAAA,OAAO,EAAPA;AAHK,GAAP;AAKD,CApBM;;SCzFSkB,eACdzwB,YACA8uB,aACAL,WACAiC;;AAEA,MAAM1G,cAAc,GAAI8E,WAAxB;AACA,0BAA2CwB,gBAAgB,CAAEtwB,UAAF,EAAc8uB,WAAd,EAA2BL,SAA3B,CAA3D;AAAA,MAAQ+B,YAAR,qBAAQA,YAAR;AAAA,MAAsBhB,OAAtB,qBAAsBA,OAAtB;AAAA,MAA+BD,OAA/B,qBAA+BA,OAA/B;AACA,MAAMoB,eAAe,sBAAOH,YAAP,CAArB;AAEA,MAAMI,OAAO;AAAA,2DAA2B,iBAAgBC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmCC,cAAAA,cAAnC,2DAAoD,EAApD;AAOhCC,cAAAA,uBAPgC,GAON,sBAAAP,YAAY,MAAZ,CAAAA,YAAY,EAAM,UAACpB,WAAD;AAAA,uBAAiBA,WAAW,CAAC96B,IAAZ,KAAqBu8B,iBAAtC;AAAA,eAAN,CAPN;AAAA,kBAQhCE,uBARgC;AAAA;AAAA;AAAA;AAAA,+CAS7B,SAAQztB,MAAR,wCAA+CutB,iBAA/C,OAT6B;AAAA;AAYhCR,cAAAA,QAZgC,GAYrBU,uBAAuB,CAACjD,MAZH;AAAA,oBAalC,OAAOuC,QAAP,KAAoB,UAbc;AAAA;AAAA;AAAA;AAAA,+CAc7B,SAAQ/sB,MAAR,gEAAuEutB,iBAAvE,OAd6B;AAAA;AAAA,+CAiB/BE,uBAAuB,CAACjD,MAAxB,CAA+BgD,cAA/B,CAjB+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA3B;AAAA,oBAAPF,OAAO;AAAA;AAAA;AAAA,KAAb;AAoBA,MAAMI,QAAQ,GAAG,SAAXA,QAAW,CAAAn1B,IAAI;AAAA,WAAIA,IAAI,CAACvH,IAAL,KAAc,kBAAlB;AAAA,GAArB;AACA,MAAM+U,eAAe,GAAG,MAAA,MAAA,MAAA2gB,cAAc,CAACiH,0BAAf,UAAA,iBAAA,SAAA,MAA2C/1B,KAA3C,UAAA,iBAAA,SAAA,sCAAwD81B,SAAxD,UAAA,iBAAA,SAAA,MAAoE91B,KAA5F;AAEA,SAAO;AACL01B,IAAAA,OAAO,EAAPA,OADK;AAELD,IAAAA,eAAe,EAAfA,eAFK;AAGLpB,IAAAA,OAAO,EAAPA,OAHK;AAILC,IAAAA,OAAO,EAAPA,OAJK;AAKLvH,IAAAA,WAAW,EAAE+B,cALR;AAML3gB,IAAAA,eAAe,EAAfA,eANK;AAOLolB,IAAAA,SAAS,EAATA,SAPK;AAQLiC,IAAAA,iBAAiB,EAAjBA;AARK,GAAP;AAUD;;AC3CD,SAAe;AACbD,EAAAA,YAAY,EAAZA;AADa,CAAf;;ACVO,IAAMS,iBAAiB,GAAG,SAASA,iBAAT,CAA4BnJ,OAA5B;AAC/B,UAAQA,OAAR;AACE,SAAK,OAAL;AACE,aAAOoJ,EAAP;AACF,SAAK94B,SAAL;AACA,SAAK,IAAL;AACE,YAAM,IAAIpE,KAAJ,CAAU,yBAAV,CAAN;AACF;AACE,YAAM,IAAIA,KAAJ,gCAAkC8zB,OAAlC,qCAAN;AAPJ;AASD,CAVM;SAYSqJ,sBAAsBrJ;AACpC,MAAK,CAACA,OAAN,EAAgB;AACd,UAAM,IAAI9zB,KAAJ,CAAU,qBAAV,CAAN;AACD;AAED,MAAMo9B,YAAY,GAAG,CAACtJ,OAAO,SAAP,IAAAA,OAAO,WAAP,GAAAA,OAAA,GAAW,EAAZ,EAAgBhyB,OAAhB,CAAwB,iBAAxB,EAA2C,EAA3C,CAArB;AACA,MAAKs7B,YAAY,KAAKtJ,OAAjB,IAA4B,CAACA,OAAlC,EAA4C;AAC1C,UAAM,IAAI9zB,KAAJ,CAAU,uEAAV,CAAN;AACD;AAEDi9B,EAAAA,iBAAiB,CAACnJ,OAAD,CAAjB;AACD;SAEe0I,aACdzwB,YACAgqB,gBACAyE,WACAiC;;AAEA,MAAM3I,OAAO,GAAG,MAAAiC,cAAc,SAAd,IAAAA,cAAc,WAAd,SAAA,GAAAA,cAAc,CAAEjC,OAAhB,UAAA,iBAAA,KAAA,GAA2BjoB,eAA3C;AACAsxB,EAAAA,qBAAqB,CAACrJ,OAAD,CAArB;AAEA,2BAAyBmJ,iBAAiB,CAACnJ,OAAD,CAA1C;AAAA,MAAQ0I,YAAR,sBAAQA,YAAR;AACA,SAAOA,YAAY,CAACzwB,UAAD,EAAagqB,cAAb,EAA6ByE,SAA7B,EAAwCiC,iBAAxC,CAAnB;AACD;;SCrBqBY,UAAtB;AAAA;AAAA;;4DAAO,iBACLtxB,UADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAELG,YAAAA,OAFK,2DAEwB,EAFxB;AAQCoxB,YAAAA,gBARD,GAQoBvxB,UAAU,CAACyX,kBAAX,CAA8B+Z,eAA9B,CAA8CrxB,OAA9C,CARpB;AASL,gBAAIoxB,gBAAJ,EAAsB;AACpBvH,cAAAA,cAAc,GAAGuH,gBAAgB,CAACvH,cAAlC;AACA0G,cAAAA,iBAAiB,GAAGa,gBAAgB,CAACb,iBAArC;AACD,aAZI;AAAA,gBAeA1G,cAfA;AAAA;AAAA;AAAA;AAgBGjC,YAAAA,OAhBH,GAgBa5nB,OAAO,CAAC4nB,OAAR,IAAmBjoB,eAhBhC;AAiBG6M,YAAAA,MAjBH,GAiBYD,cAAc,CAAC1M,UAAD,CAjB1B;AAkBK8E,YAAAA,iBAlBL,GAkBwC3E,OAlBxC,CAkBK2E,iBAlBL,EAkBwBmlB,WAlBxB,GAkBwC9pB,OAlBxC,CAkBwB8pB,WAlBxB;AAmBGvpB,YAAAA,gBAnBH,GAmBqB,MAAAP,OAAO,CAACO,eAAR,UAAA,iBAAA,KAAA,GAA2B,IAnBhD;AAAA;AAqBDgwB,YAAAA,iBAAiB,GAAG,IAApB;AACAU,YAAAA,qBAAqB,CAACrJ,OAAD,CAArB;AACMnrB,YAAAA,GAvBL,aAuBc+P,MAvBd;AAwBKnB,YAAAA,IAxBL,GAwBYye,WAAW,GAAG;AAAEhoB,cAAAA,UAAU,EAAEgoB;AAAd,aAAH,GAAiC;AAAEnlB,cAAAA,iBAAiB,EAAjBA;AAAF,aAxBxD;AAyBK1E,YAAAA,OAzBL,GAyBe;AACd,2EAAsD2nB,OAAtD,CADc;AAEd0J,cAAAA,MAAM,+CAAwC1J,OAAxC;AAFQ,aAzBf;AAAA;AAAA,mBA6BsB1nB,WAAW,CAACL,UAAD,EAAa;AAC7CO,cAAAA,MAAM,EAAE,MADqC;AAE7C3D,cAAAA,GAAG,EAAHA,GAF6C;AAG7CwD,cAAAA,OAAO,EAAPA,OAH6C;AAI7CM,cAAAA,eAAe,EAAfA,gBAJ6C;AAK7ClG,cAAAA,IAAI,EAAEgR;AALuC,aAAb,CA7BjC;AAAA;AA6BDwe,YAAAA,cA7BC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAqCG90B,cAAc,aAAd,IAAuB,YAAId,GAA3B,IAAkC0zB,gBAAgB,CAAC,YAAI1zB,GAAJ,CAAQya,YAAT,CArCrD;AAAA;AAAA;AAAA;AAsCCmb,YAAAA,cAAc,GAAG,YAAI51B,GAAJ,CAAQya,YAAzB;AACA6hB,YAAAA,iBAAiB,GAAG,KAApB;AAvCD;AAAA;AAAA;AAAA;AAAA;AA8CGhwB,YAAAA,eA9CH,GA8CuBP,OA9CvB,CA8CGO,eA9CH;AAAA,6CA+CE+vB,YAAY,CAACzwB,UAAD,EAAagqB,cAAb,EAA6B;AAAEtpB,cAAAA,eAAe,EAAfA;AAAF,aAA7B,EAAkDgwB,iBAAlD,CA/Cd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;SCPSgB,aAAaC;;AAC3B,SAAO,MAAAA,cAAc,CAACz2B,KAAf,UAAA,iBAAA,SAAA,qCAA0B,UAAA02B,CAAC;AAAA,WAAIA,CAAC,CAACt9B,IAAN;AAAA,IAAlC;AACD;SAEeu9B,kBAAkBF;;AAChC,SAAO,MAAAA,cAAc,CAACz2B,KAAf,UAAA,iBAAA,SAAA,wCAA6B,UAAC42B,QAAD,EAAWC,GAAX;AAClC,QAAIA,GAAG,CAACD,QAAR,EAAkB;AAChBA,MAAAA,QAAQ,CAACz0B,IAAT,CAAc00B,GAAG,CAACz9B,IAAlB;AACD;AACD,WAAOw9B,QAAP;AACD,KAAE,GALH;AAMD;SAEeE,UAAU18B;AACxB,SAAOA,GAAG,CAAC4b,MAAJ,CAAW,CAAX,EAAc+gB,WAAd,KAA8B38B,GAAG,CAAC4H,SAAJ,CAAc,CAAd,CAArC;AACD;SAEeg1B,gCACd9C;;AAGA,SAAO,iCAAAA,WAAW,CAACl0B,KAAZ,iBAAwB;AAAA,QAAG5G,IAAH,QAAGA,IAAH;AAAA,WAAcA,IAAI,KAAK,eAAvB;AAAA,GAAxB,CAAP;AACD;;;;;SClCe69B,oBAAoBC;AAClC,MAAIC,aAAJ;AACA,MAAK7f,eAAe,CAAC4f,QAAD,CAApB,EAAgC;AAC9BC,IAAAA,aAAa,GAAGD,QAAhB;AACD,GAFD,MAEO,IAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AACvCC,IAAAA,aAAa,GAAG;AACdj1B,MAAAA,GAAG,EAAEg1B;AADS,KAAhB;AAGD,GAJM,MAIA;AACL,UAAM,IAAIn+B,KAAJ,CAAU,kCAAV,CAAN;AACD;AACD,SAAOo+B,aAAP;AACD;SAGeC,sBAAsBC,OAAOC;AAC3C,MAAI,CAACD,KAAD,IAAU,CAACC,KAAf,EAAsB;AACpB,WAAO,KAAP;AACD;AAED,MAAID,KAAK,CAAC9f,EAAN,IAAY+f,KAAK,CAAC/f,EAAtB,EAA0B;AACxB,WAAQ8f,KAAK,CAAC9f,EAAN,KAAa+f,KAAK,CAAC/f,EAA3B;AACD;AAED,MAAI8f,KAAK,CAACn1B,GAAN,IAAao1B,KAAK,CAACp1B,GAAvB,EAA4B;AAC1B,WAAQm1B,KAAK,CAACn1B,GAAN,KAAco1B,KAAK,CAACp1B,GAA5B;AACD;AACD,SAAO,KAAP;AACD;SAGeq1B,kBAAkBC,gBAAgBvyB;AAChD,MAAIwyB,MAAJ;+CAC0BD;;;;UAAjBL;AACPM,MAAAA,MAAM,GAAG,sBAAAxyB,OAAO,MAAP,CAAAA,OAAO,EACR;AAAA,YAAGyyB,SAAH,QAAGA,SAAH;AAAA,eAAmBA,SAAS,CAACx1B,GAAV,KAAkBi1B,aAAa,CAACj1B,GAAnD;AAAA,OADQ,CAAhB;AAEA,UAAIu1B,MAAJ,EAAY;AACV;AACD;;AALH,wDAA0C;AAAA;AAAA,4BAItC;AAEH;;;;;;AACD,SAAOA,MAAP;AACD;;;;;ICFYE,UAAb;AAQE,sBACEzD,WADF;QAEE0D,6EAAY;QACZ3yB,8EAA4B;;AAG5B,SAAK2yB,MAAL,sBAAmBA,OAAnB;AACA,SAAK3yB,OAAL,sBAAoBA,QAApB;AACA,SAAK4yB,oBAAL;AACA,SAAK3D,WAAL,GAAmBA,WAAnB;AACD;AAlBH;AAAA;AAAA,WAoBU;;AACN,oCAAYsD,cAAZ,GAA8B,8BAAYA,cAAZ,IAA8B,EAA5D;AAGA,oCAAYA,cAAZ,GAA6B,+DAAYA,cAAZ,kBAA+B,UAAAL,aAAa;AACvE,eAAOF,mBAAmB,CAACE,aAAD,CAA1B;AACD,OAF4B,CAA7B;AAKA,UAAI,8BAAYA,aAAhB,EAA+B;AAC7B,YAAMA,aAAa,GAAGF,mBAAmB,CAAC,8BAAYE,aAAb,CAAzC;AACA,YAAMW,sBAAsB,GAAG,8BAAYN,cAAZ,CAA2B3P,IAA3B,CAAgC,UAAAkQ,QAAQ;AACrE,iBAAOX,qBAAqB,CAACD,aAAD,EAAgBY,QAAhB,CAA5B;AACD,SAF8B,CAA/B;AAGA,YAAI,CAACD,sBAAL,EAA6B;AAC3B,wCAAYN,cAAZ,CAA2Br1B,IAA3B,CAAgCg1B,aAAhC;AACD;AACF;AAID,oCAAYa,kBAAZ,GAAiC,kEAAYR,cAAZ,kBAAkC,UAACS,GAAD,EAAMd,aAAN;AACjE,YAAI,QAAOA,aAAP,MAAyB,QAAzB,IAAqC,aAAYA,aAAZ,EAA2Bl8B,MAA3B,GAAoC,CAA7E,EAAgF;AAE9Eg9B,UAAAA,GAAG,CAAC91B,IAAJ,CAASg1B,aAAT;AACD;AACD,eAAOc,GAAP;AACD,OANgC,EAM9B,8BAAYD,kBAAZ,IAAkC,EANJ,CAAjC;AAOD;AAhDH;AAAA;AAAA,WAkDE;AACE,aAAO,KAAK9D,WAAL,CAAiB96B,IAAxB;AACD,KApDH;AAAA;AAAA;AAAA,WAwDE;;AACE,UAAMw9B,QAAQ,GAAGD,iBAAiB,CAAC,KAAKzC,WAAN,CAAlC;AACA,UAAMgE,MAAM,GAAG,sBAAAtB,QAAS,MAAT,CAAAA,QAAS,EAAM,UAAC10B,GAAD;AAAA,eAAS,CAAC,KAAI,CAACi2B,OAAL,CAAaj2B,GAAb,CAAV;AAAA,OAAN,CAAxB;AACA,UAAIg2B,MAAJ,EAAY;AACV,eAAO,KAAP,CADU;AAEX;AACD,aAAO,IAAP;AACD,KA/DH;AAAA;AAAA;AAAA,WAkEE,iBAAQh2B,GAAR;;AAEE,UAAI,CAACA,GAAL,EAAU;AACR,YAAIk2B,SAAS,GAAG5B,YAAY,CAAC,KAAKtC,WAAN,CAA5B;AACA,YAAIvtB,GAAG,GAAG,wBAAAyxB,SAAU,MAAV,CAAAA,SAAU,EAAQ,UAAC1xB,IAAD,EAAOxE,GAAP;AAC1BwE,UAAAA,IAAI,CAACxE,GAAD,CAAJ,GAAY,MAAI,CAACm2B,OAAL,CAAan2B,GAAb,CAAZ;AACA,iBAAOwE,IAAP;AACD,SAHmB,EAGjB,EAHiB,CAApB;AAIA,eAAOC,GAAP;AACD;AAGD,UAAI,OAAO,kBAAWmwB,SAAS,CAAC50B,GAAD,CAApB,EAAP,KAAwC,UAA5C,EAAwD;AAAA;AACtD,YAAMyqB,GAAG,GAAG,kBAAWmK,SAAS,CAAC50B,GAAD,CAApB,GACV,uCAAKgyB,WAAL,CAAiBl0B,KAAjB,kBAA6B;AAAA,cAAE5G,IAAF,QAAEA,IAAF;AAAA,iBAAYA,IAAI,KAAK8I,GAArB;AAAA,SAA7B,CADU,CAAZ;AAGA,YAAIyqB,GAAJ,EAAS;AACP,iBAAOA,GAAP;AACD;AACF;AAGD,UAAI,8BAAY,2BAASzqB,GAAT,CAAhB,EAA+B;AAC7B,YAAMmrB,KAAK,GAAG,2BAASnrB,GAAT,CAAd;AACA,aAAK,IAAIzG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4xB,KAAK,CAACpyB,MAA1B,EAAkCQ,CAAC,EAAnC,EAAuC;AACrC,cAAIkxB,IAAG,GAAG,8BAAYU,KAAK,CAAC5xB,CAAD,CAAjB,CAAV;AACA,cAAIkxB,IAAJ,EAAS;AACP,mBAAOA,IAAP;AACD;AACF;AACF;AAGD,aAAO,8BAAYzqB,GAAZ,CAAP;AACD;AApGH;AAAA;AAAA,WAsGE,iBACEA,GADF;AAAA;AAKE,aAAO,CAAC,CAAC,KAAKm2B,OAAL,CAAan2B,GAAb,CAAT;AACD;AA5GH;AAAA;AAAA,WA8GE,qBAAYo2B,WAAZ,EAA+CC,QAA/C;AACE,UAAMn/B,IAAI,GAAG,KAAKo/B,OAAL,EAAb;AACA,UAAMC,MAAM,GAAG,KAAKC,SAAL,EAAf;AACA,UAAMvB,aAAa,GAAG,KAAKwB,gBAAL,EAAtB;AAGA,UAAMhuB,IAAI,GAAGwsB,aAAa,SAAb,IAAAA,aAAa,WAAb,SAAA,GAAAA,aAAa,CAAExsB,IAA5B;AACA;AACEvR,QAAAA,IAAI,EAAJA;AACAq/B,QAAAA,MAAM,EAANA;SACI9tB,IAAI,IAAI;AAAEA,QAAAA,IAAI,EAAJA;AAAF,UACRwsB,aAAa,IAAI;AAAEA,QAAAA,aAAa,EAAbA;AAAF,QAJvB;AAMD,KA3HH;AAAA;AAAA;AAAA,WA8HE;;AACE,UAAMsB,MAAM,GAAY,EAAxB;AACA,UAAMG,qBAAqB,GAAG,KAAK1E,WAAL,CAAiBl0B,KAAjB,IAA0B,EAAxD;AACA44B,MAAAA,qBAAqB,CAACl5B,OAAtB,CAA8B,UAAAm5B,oBAAoB;AAChD,YAAIC,KAAJ;AACA,YAAM1/B,IAAN,GAAwCy/B,oBAAxC,CAAMz/B,IAAN;AAAA,YAAYuR,IAAZ,GAAwCkuB,oBAAxC,CAAYluB,IAAZ;AAAA,YAAkBouB,OAAlB,GAAwCF,oBAAxC,CAAkBE,OAAlB;AAAA,YAA2BC,QAA3B,GAAwCH,oBAAxC,CAA2BG,QAA3B;AACA,YAAID,OAAO,KAAK,KAAhB,EAAuB;AACrB,iBADqB;AAEtB;AACD,YAAI,OAAO,MAAI,mBAAYjC,SAAS,CAAC19B,IAAD,CAArB,EAAX,KAA8C,UAAlD,EAA8D;AAC5D0/B,UAAAA,KAAK,GAAG,MAAI,mBAAYhC,SAAS,CAAC19B,IAAD,CAArB,EAAJ,CAAmCy/B,oBAAnC,CAAR;AACD,SAFD,MAEO,IAAIluB,IAAI,KAAK,QAAb,EAAuB;AAE5B,cAAIsuB,KAAJ;AACA,cAAMC,OAAO,GAAG,CAAC,qBAAA,MAAI,IAAO,qBAAA,MAAI,EAAK9/B,IAAL,CAAX,GAAwB,IAA7B,KAAsC,EAAtD;AACA,cAAI8/B,OAAO,CAACj+B,MAAR,KAAmB,CAAvB,EAA0B;AACxBg+B,YAAAA,KAAK,GAAGC,OAAO,CAAC,CAAD,CAAf;AACD,WAFD,MAEO;AAELD,YAAAA,KAAK,GAAG,sBAAAC,OAAO,MAAP,CAAAA,OAAO,EAAM,UAAA9/B,IAAI;AAAA;AAAA,qBAAI,2EAAY,MAAZ,oBAAkCA,IAAlC,CAAJ;AAAA,aAAV,CAAf;AACD;AACD,cAAI6/B,KAAJ,EAAW;AACTH,YAAAA,KAAK,qCAAQD;AAAsBz/B,cAAAA,IAAI,EAAE6/B;cAAzC;AACD;AACF;AACD,YAAI,CAACH,KAAL,EAAY;AACVA,UAAAA,KAAK,GAAGD,oBAAR;AACD;AACD,YAAIz5B,KAAK,CAAC4K,OAAN,CAAc8uB,KAAd,CAAJ,EAA0B;AACxBA,UAAAA,KAAK,CAACp5B,OAAN,CAAc,UAAAjE,CAAC;AAAA,mBAAIg9B,MAAM,CAACt2B,IAAP,CAAY1G,CAAZ,CAAJ;AAAA,WAAf;AACD,SAFD,MAEO;AAEL,cAAIu9B,QAAJ,EAAc;AACZF,YAAAA,KAAK,CAACE,QAAN,GAAiBA,QAAjB;AACD;AACDP,UAAAA,MAAM,CAACt2B,IAAP,CAAY22B,KAAZ;AACD;AACF,OAlCD;AAmCA,aAAOL,MAAP;AACD;AArKH;AAAA;AAAA;AAsLE;;AACE,UAAMG,qBAAqB,GAAG,KAAK1E,WAAL,CAAiBl0B,KAAjB,IAA0B,EAAxD;AACA,UAAMm5B,oBAAoB,GAAG,KAAKT,SAAL,EAA7B;AACA,UAAMD,MAAM,8EACPG,qBADO,sBAEPO,oBAFO,EAAZ;mDAKoBV;;;AAApB,4DAA4B;AAAA,cAAjBK,KAAiB;AAC1B,iBAAO,8BAAYA,KAAK,CAAC1/B,IAAlB,CAAP;AACD;;;;;;AACD,qCAAO,IAAP;AACD;AAlMH;AAAA;AAAA,WAoMY;;;AAER,UAAMs+B,SAAS,GAAG,MAAA,KAAKxD,WAAL,CAAiBwD,SAAjB,UAAA,iBAAA,SAAA,MAA4B13B,KAA9C;AACA,UAAI,CAAC03B,SAAL,EAAgB;AACd;AACD;AAED,UAAM0B,4BAA4B,GAAGpC,+BAA+B,CAAC,KAAK9C,WAAN,CAApE;AACA,UAAI,CAACkF,4BAAL,EAAmC;AAEjC,eAAO1B,SAAP;AACD;AAID,UAAMngB,EAAE,GAAG,kCAAA6hB,4BAA4B,CAACC,IAA7B,CAAmCr5B,KAAnC,kBACH;AAAA,YAAG5G,IAAH,SAAGA,IAAH;AAAA,eAAcA,IAAI,KAAK,IAAvB;AAAA,OADG,EAC2B4G,KADtC;AAEA,UAAMs5B,YAAY,GAAG,MAAA,kCAAAF,4BAA4B,CAACC,IAA7B,CAAmCr5B,KAAnC,kBACb;AAAA,YAAG5G,IAAH,SAAGA,IAAH;AAAA,eAAcA,IAAI,KAAK,cAAvB;AAAA,OADa,CAAA,UAAA,iBAAA,SAAA,MAC2B4G,KADhD;AAGA,+CACK03B;AACHngB,QAAAA,EAAE,EAAFA;AACA+hB,QAAAA,YAAY,EAAZA;QAHF;AAKD;AA7NH;AAAA;AAAA,WAuKE,qBAAmBpF,WAAnB;;;AACE,UAAI,CAACA,WAAW,CAACl0B,KAAjB,EAAwB;AACtB;AACD;AACD,aAAO,MAAA,MAAAk0B,WAAW,CAACl0B,KAAZ,CAAkB,CAAlB,CAAA,UAAA,iBAAA,SAAA,MAAsBq5B,IAAtB,UAAA,iBAAA,SAAA,0CAA4Br5B,uBAAa,UAACg5B,QAAD,EAAyBvG,KAAzB;AAC9C,YAAIA,KAAK,CAACuG,QAAV,EAAoB;AAAA;AAClBA,UAAAA,QAAQ,gFAAOA,QAAP,sBAAoBvG,KAAK,CAACuG,QAAN,CAAeh5B,KAAnC,EAAR;AACD;AACD,eAAOg5B,QAAP;AACD,SAAE,GALH;AAMD;AAjLH;AAAA;AAAA;;IClCsBO,aAAtB,GAGE,uBAAYpC,aAAZ;;AACE,OAAKxa,IAAL,GAAYwa,aAAZ;AACD,CALH;;;;ICQaqC,6BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,mBAAU5B,MAAV;AACE,aAAO,CAAC,EAAEA,MAAM,CAAC1Z,WAAP,IAAqB0Z,MAAM,CAAC6B,gBAA5B,IAAgD7B,MAAM,CAAC8B,GAAzD,CAAR;AACD;AAHH;AAAA;AAAA,WAKE,wBAAe9B,MAAf;AACE,UAAQ1Z,WAAR,GAA+C0Z,MAA/C,CAAQ1Z,WAAR;AAAA,UAAqBub,gBAArB,GAA+C7B,MAA/C,CAAqB6B,gBAArB;AAAA,UAAuCC,GAAvC,GAA+C9B,MAA/C,CAAuC8B,GAAvC;AACA,UAAI,CAACxb,WAAD,IAAgB,CAACub,gBAAjB,IAAqC,CAACC,GAA1C,EAA+C;AAC7C;AACD;AACD,aAAOxb,WAAW,IAAI;AAAEyb,QAAAA,QAAQ,EAAEF,gBAAgB,IAAIC;AAAhC,OAAtB;AACD;AAXH;AAAA;AAAA,WAaE,mBAAUE,mBAAV;;AACE,+CACK,MAAAA,mBAAmB,CAACP,IAApB,UAAA,iBAAA,SAAA,MAA0Br5B,MAAM;AACnC5G,QAAAA,IAAI,EAAE;AACNuR,QAAAA,IAAI,EAAE;AACNisB,QAAAA,QAAQ,EAAEgD,mBAAmB,CAAChD;QAJhC;AAMD;AApBH;AAAA;AAAA,EAAmD2C,aAAnD;;;;ICRaM,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,wBAAejC,MAAf;AACE,UAAQ6B,gBAAR,GAA6B7B,MAA7B,CAAQ6B,gBAAR;AACA,UAAI,CAACA,gBAAL,EAAuB;AACrB;AACD;AACD,aAAO;AAAEK,QAAAA,IAAI,EAAEL;AAAR,OAAP;AACD;AAPH;AAAA;AAAA,EAAoCD,6BAApC;;;;ICAaO,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,mBAAUnC,MAAV;AACE,aAAO,CAAC,EAAEA,MAAM,CAAC1Z,WAAP,IAAsB0Z,MAAM,CAACoC,QAA/B,CAAR;AACD;AAHH;AAAA;AAAA,WAKE,wBAAepC,MAAf;AACE,UAAQ1Z,WAAR,GAAkC0Z,MAAlC,CAAQ1Z,WAAR;AAAA,UAAqB8b,QAArB,GAAkCpC,MAAlC,CAAqBoC,QAArB;AACA,UAAI,CAAC9b,WAAD,IAAgB,CAAC8b,QAArB,EAA+B;AAC7B;AACD;AACD,aAAO9b,WAAW,IAAI;AAAEyb,QAAAA,QAAQ,EAAEK;AAAZ,OAAtB;AACD;AAXH;AAAA;AAAA,WAaE,mBAAUJ,mBAAV;;AACE,+CACK,MAAAA,mBAAmB,CAACP,IAApB,UAAA,iBAAA,SAAA,MAA0Br5B,MAAM;AACnC5G,QAAAA,IAAI,EAAE;AACNuR,QAAAA,IAAI,EAAE;AACNisB,QAAAA,QAAQ,EAAEgD,mBAAmB,CAAChD;QAJhC;AAMD;AApBH;AAAA;AAAA,EAAkC2C,aAAlC;;;;ICEaU,0BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,mBAAUrC,MAAV;AACE,UAAQ1Z,WAAR,GAAwB0Z,MAAxB,CAAQ1Z,WAAR;AACA,UAAIA,WAAW,IAAIA,WAAW,CAACgc,WAA3B,IAA0Chc,WAAW,CAACic,MAA1D,EAAkE;AAChE,eAAO,IAAP;AACD;AACD,UAAQD,WAAR,GAA0CtC,MAA1C,CAAQsC,WAAR;AAAA,UAAqBE,QAArB,GAA0CxC,MAA1C,CAAqBwC,QAArB;AAAA,UAA+BD,MAA/B,GAA0CvC,MAA1C,CAA+BuC,MAA/B;AACA,aAAO,CAAC,EAAED,WAAW,IAAIC,MAAjB,CAAD,IAA6B,CAAC,EAAEC,QAAQ,IAAID,MAAd,CAArC;AACD;AARH;AAAA;AAAA,WAUE,wBAAevC,MAAf;AACE,UAAQsC,WAAR,GAA0CtC,MAA1C,CAAQsC,WAAR;AAAA,UAAqBE,QAArB,GAA0CxC,MAA1C,CAAqBwC,QAArB;AAAA,UAA+BD,MAA/B,GAA0CvC,MAA1C,CAA+BuC,MAA/B;AACA,UAAI,CAACA,MAAD,IAAY,CAACD,WAAD,IAAgB,CAACE,QAAjC,EAA4C;AAC1C;AACD;AACD,aAAO;AACLF,QAAAA,WAAW,EAAEE,QAAQ,GAAG,QAAH,GAAcF,WAD9B;AAELE,QAAAA,QAAQ,EAARA,QAFK;AAGLD,QAAAA,MAAM,EAANA;AAHK,OAAP;AAKD;AApBH;AAAA;AAAA,WAsBE;AACE,aAAO,CACL;AAAE/gC,QAAAA,IAAI,EAAE,aAAR;AAAuBuR,QAAAA,IAAI,EAAE,QAA7B;AAAuCisB,QAAAA,QAAQ,EAAE;AAAjD,OADK,EAEL;AAAEx9B,QAAAA,IAAI,EAAE,UAAR;AAAoBuR,QAAAA,IAAI,EAAE,QAA1B;AAAoC0vB,QAAAA,KAAK,EAAE;AAA3C,OAFK,EAGL;AAAEjhC,QAAAA,IAAI,EAAE,QAAR;AAAkBuR,QAAAA,IAAI,EAAE,QAAxB;AAAkC0vB,QAAAA,KAAK,EAAE,QAAzC;AAAmDzD,QAAAA,QAAQ,EAAE;AAA7D,OAHK,CAAP;AAKD;AA5BH;AAAA;AAAA,EAAgD2C,aAAhD;;;;ICDae,4BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,mBAAU1C,MAAV;AACE,UAAQ1Z,WAAR,GAAwB0Z,MAAxB,CAAQ1Z,WAAR;AACA,UAAIA,WAAW,IAAIA,WAAW,CAACic,MAA/B,EAAuC;AACrC,eAAO,IAAP;AACD;AACD,UAAQA,MAAR,GAAmBvC,MAAnB,CAAQuC,MAAR;AACA,aAAO,CAAC,CAACA,MAAT;AACD;AARH;AAAA;AAAA,WAUE,wBAAevC,MAAf;AACE,UAAQuC,MAAR,GAAmBvC,MAAnB,CAAQuC,MAAR;AACA,UAAI,CAACA,MAAL,EAAa;AACX;AACD;AACD,aAAO;AACLD,QAAAA,WAAW,EAAE,KAAKvd,IAAL,CAAU4d,cAAV,CAA0BC,gBAA1B,CAA4CN,WADpD;AAELC,QAAAA,MAAM,EAANA;AAFK,OAAP;AAID;AAnBH;AAAA;AAAA,WAqBE;AACE,aAAO,CACL;AAAE/gC,QAAAA,IAAI,EAAE,QAAR;AAAkBuR,QAAAA,IAAI,EAAE,QAAxB;AAAkC0vB,QAAAA,KAAK,EAAE,QAAzC;AAAmDzD,QAAAA,QAAQ,EAAE;AAA7D,OADK,CAAP;AAGD;AAzBH;AAAA;AAAA,EAAkD2C,aAAlD;;;;ICAakB,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,mBAAU7C,MAAV;AACE,UAAQ1Z,WAAR,GAAwB0Z,MAAxB,CAAQ1Z,WAAR;AACA,UAAMjkB,GAAG,GAAGikB,WAAW,IAAI0Z,MAA3B;AACA,UAAQvY,UAAR,GAAoCplB,GAApC,CAAQolB,UAAR;AAAA,UAAoBT,WAApB,GAAoC3kB,GAApC,CAAoB2kB,WAApB;AACA,aAAO,CAAC,EAAES,UAAU,IAAIT,WAAhB,CAAR;AACD;AANH;AAAA;AAAA,WAQE,wBAAegZ,MAAf;AACE,UAAQ1Z,WAAR,GAAiD0Z,MAAjD,CAAQ1Z,WAAR;AAAA,UAAqBmB,UAArB,GAAiDuY,MAAjD,CAAqBvY,UAArB;AAAA,UAAiCT,WAAjC,GAAiDgZ,MAAjD,CAAiChZ,WAAjC;AACA,UAAI,CAACV,WAAD,IAAgB,CAACmB,UAAjB,IAA+B,CAACT,WAApC,EAAiD;AAC/C;AACD;AACD,aAAOV,WAAW,IAAK;AACrBmB,QAAAA,UAAU,EAAVA,UADqB;AAErBT,QAAAA,WAAW,EAAXA;AAFqB,OAAvB;AAID;AAjBH;AAAA;AAAA,WAmBE;AACE,aAAO,CACL;AAAExlB,QAAAA,IAAI,EAAE,YAAR;AAAsBuR,QAAAA,IAAI,EAAE,QAA5B;AAAsCisB,QAAAA,QAAQ,EAAE,IAAhD;AAAsDmC,QAAAA,OAAO,EAAE,KAA/D;AAAsEsB,QAAAA,KAAK,EAAE;AAA7E,OADK,EAEL;AAAEjhC,QAAAA,IAAI,EAAE,aAAR;AAAuBuR,QAAAA,IAAI,EAAE,QAA7B;AAAuCisB,QAAAA,QAAQ,EAAE,IAAjD;AAAuDmC,QAAAA,OAAO,EAAE,KAAhE;AAAuEsB,QAAAA,KAAK,EAAE;AAA9E,OAFK,CAAP;AAID;AAxBH;AAAA;AAAA,EAAwCd,aAAxC;;;;ICCamB,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,mBAAU9C,MAAV;AACE,UAAQ1Z,WAAR,GAAwB0Z,MAAxB,CAAQ1Z,WAAR;AACA,UAAMjkB,GAAG,GAAGikB,WAAW,IAAI0Z,MAA3B;AACA,UAAQvY,UAAR,GAAyDplB,GAAzD,CAAQolB,UAAR;AAAA,UAAoBI,iBAApB,GAAyDxlB,GAAzD,CAAoBwlB,iBAApB;AAAA,UAAuCC,aAAvC,GAAyDzlB,GAAzD,CAAuCylB,aAAvC;AACA,aAAO,CAAC,EAAEL,UAAU,IAAII,iBAAd,IAAmCC,aAArC,CAAR;AACD;AANH;AAAA;AAAA,WAQE,wBAAekY,MAAf;AACE,UAAQ1Z,WAAR,GAAsE0Z,MAAtE,CAAQ1Z,WAAR;AAAA,UAAqBuB,iBAArB,GAAsEmY,MAAtE,CAAqBnY,iBAArB;AAAA,UAAwCJ,UAAxC,GAAsEuY,MAAtE,CAAwCvY,UAAxC;AAAA,UAAoDK,aAApD,GAAsEkY,MAAtE,CAAoDlY,aAApD;AACA,UAAI,CAACxB,WAAD,IAAgB,CAACuB,iBAAjB,IAAsC,CAACJ,UAAvC,IAAqD,CAACK,aAA1D,EAAyE;AACvE;AACD;AACD,aAAOxB,WAAW,IAAK;AACrBuB,QAAAA,iBAAiB,EAAjBA,iBADqB;AAErBJ,QAAAA,UAAU,EAAVA,UAFqB;AAGrBK,QAAAA,aAAa,EAAbA;AAHqB,OAAvB;AAKD;AAlBH;AAAA;AAAA,WAoBE;AACE,aAAO,CACL;AAAEtmB,QAAAA,IAAI,EAAE,mBAAR;AAA6BuR,QAAAA,IAAI,EAAE,QAAnC;AAA6C0vB,QAAAA,KAAK,EAAE,oBAApD;AAA0EzD,QAAAA,QAAQ,EAAE,IAApF;AAA0FmC,QAAAA,OAAO,EAAE;AAAnG,OADK,EAEL;AAAE3/B,QAAAA,IAAI,EAAE,YAAR;AAAsBuR,QAAAA,IAAI,EAAE,QAA5B;AAAsC0vB,QAAAA,KAAK,EAAE,aAA7C;AAA4DzD,QAAAA,QAAQ,EAAE,IAAtE;AAA4EmC,QAAAA,OAAO,EAAE;AAArF,OAFK,EAGL;AAAE3/B,QAAAA,IAAI,EAAE,eAAR;AAAyBuR,QAAAA,IAAI,EAAE,QAA/B;AAAyC0vB,QAAAA,KAAK,EAAE,gBAAhD;AAAkEzD,QAAAA,QAAQ,EAAE,IAA5E;AAAkFmC,QAAAA,OAAO,EAAE;AAA3F,OAHK,CAAP;AAKD;AA1BH;AAAA;AAAA,EAA0CQ,aAA1C;;SCGgBZ,iBAAiBzE;;AAC/B,MAAMwD,SAAS,GAAGxD,WAAW,CAACwD,SAA9B;AACA,MAAM13B,KAAK,GAAG,CAAA03B,SAAS,SAAT,IAAAA,SAAS,WAAT,SAAA,GAAAA,SAAS,CAAE13B,KAAX,KAAoB,EAAlC;AACA,UAAQA,KAAK,CAACkC,GAAd;AACE,SAAKkV,gBAAgB,CAACujB,aAAtB;AACE,aAAO,IAAIZ,YAAJ,CAAiB/5B,KAAjB,CAAP;AACF,SAAKoX,gBAAgB,CAACwjB,iBAAtB;AACE,UAAI,MAAA56B,KAAK,CAACu6B,cAAN,UAAA,iBAAA,SAAA,MAAsBC,gBAA1B,EAA4C;AAC1C,eAAO,IAAIF,4BAAJ,CAAiCt6B,KAAjC,CAAP;AACD,OAFD,MAEO;AACL,eAAO,IAAIi6B,0BAAJ,CAA+Bj6B,KAA/B,CAAP;AACD;AACH,SAAKoX,gBAAgB,CAACyjB,WAAtB;AACE,aAAO,IAAIhB,cAAJ,CAAmB75B,KAAnB,CAAP;AACF,SAAKoX,gBAAgB,CAAC0jB,QAAtB;AACE,UAAI,MAAA96B,KAAK,CAACu6B,cAAN,UAAA,iBAAA,SAAA,MAAsBvb,aAA1B,EAAyC;AACvC,eAAO,IAAI0b,oBAAJ,CAAyB16B,KAAzB,CAAP;AACD,OAFD,MAEO;AACL,eAAO,IAAIy6B,kBAAJ,CAAuBz6B,KAAvB,CAAP;AACD;AACH;AACE,aAAO,IAAIw5B,6BAAJ,CAAkCx5B,KAAlC,CAAP;AAlBJ;AAoBD;;;;ICbY+6B,mBAAb;AAAA;AAAA;AAKE,+BAAY7G,WAAZ;;QAAyC0D,6EAAY;;AACnD,8BAAM1D,WAAN,EAAmB0D,MAAnB;AACA,UAAKT,aAAL,GAAqBwB,gBAAgB,CAACzE,WAAD,CAArC;;AACD;AARH;AAAA;AAAA,WAUE,qBAAYpvB,UAAZ,EAA8CwvB,OAA9C;;AACE,UAAM0G,QAAQ,wFAAqBl2B,UAArB,EAAiCwvB,OAAjC,CAAd;AACA,UAAMrW,wBAAwB,GAAG,MAAAqW,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAErW,wBAAT,UAAA,iBAAA,SAAA,MAAmCje,KAApE;AAEA,+CACKg7B;AACH/c,QAAAA,wBAAwB,EAAxBA;QAFF;AAID;AAlBH;AAAA;AAAA,WAoBE;AACE,aAAO,KAAKkZ,aAAL,CAAmB8D,SAAnB,yBAA6B,IAA7B,EAAP;AACD;AAtBH;AAAA;AAAA,WAwBE;AACE,aAAO,KAAK9D,aAAL,CAAmB+D,cAAnB,yBAAkC,IAAlC,EAAP;AACD;AA1BH;AAAA;AAAA,WA4BE,6BAAoBpC,KAApB;AACE,aAAO,KAAK3B,aAAL,CAAmBuB,SAAnB,CAA6BI,KAA7B,CAAP;AACD;AA9BH;AAAA;AAAA,WAgCE;;;AACE,WAAKlB,MAAL;AACA,UAAIuD,aAAa,GAAG,wEAAY,IAAZ,mBAAgC,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,KAAK,aAAjB;AAAA,OAAxC,CAApB;AACA,aAAO,wBAAAD,aAAa,MAAb,CAAAA,aAAa,EAAQ,UAACvD,MAAD,EAASwD,QAAT;AAAA,iDAA2BxD,6BAASwD,UAAW,wBAAA,MAAI,EAAQA,QAAR,GAAnD;AAAA,OAAR,EAAgF,EAAhF,CAApB;AACD;AApCH;AAAA;AAAA,EACUzD,UADV;;;;ICLa0D,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAyCN,mBAAzC;AACSM,mCAAA,GAAkB,sBAAlB;;;;ICGIC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGE;AACE,aAAO,CAAC,CAAC,8BAAYC,YAAd,IAA8B,KAAKt2B,OAAL,CAAau2B,IAAb,KAAsB,aAA3D;AACD;AALH;AAAA;AAAA,WAOE,qBAAY12B,UAAZ,EAA8CwvB,OAA9C;AACE,UAAMmH,MAAM,+EAAqB32B,UAArB,EAAiCwvB,OAAjC,CAAZ;AACA,UAAI6C,aAAa,GAAG,KAAKwB,gBAAL,EAApB;AACA,UAAI,CAACxB,aAAD,KAAkB7C,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEoH,oBAA3B,CAAJ,EAAqD;AACnDvE,QAAAA,aAAa,GAAG7C,OAAO,CAACoH,oBAAR,CAA6B17B,KAA7C;AACD;AACD,+CACKy7B;AACHtE,QAAAA,aAAa,EAAbA;AACAvsB,QAAAA,IAAI,EAAE;AACJgsB,UAAAA,QAAQ,EAAE,IADN;AAEJ7qB,UAAAA,OAAO,EAAE,KAAKmoB,WAAL,CAAiBnoB;AAFtB;QAHR;AAQD;AArBH;AAAA;AAAA,WAuBE;;;AACE,UAAIovB,aAAa,GAAG,wEAAY,IAAZ,mBAAgC,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,KAAK,cAAjB;AAAA,OAAxC,CAApB;AACA,aAAO,wBAAAD,aAAa,MAAb,CAAAA,aAAa,EAAQ,UAACvD,MAAD,EAASwD,QAAT;AAAA,iDAA2BxD,6BAASwD,UAAW,wBAAA,KAAI,EAAQA,QAAR,GAAnD;AAAA,OAAR,EAAgF,EAAhF,CAApB;AACD;AA1BH;AAAA;AAAA,EAAgCzD,UAAhC;AACS2D,0BAAA,GAAkB,aAAlB;;;;ICCIK,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGE;AACE,aAAOC,OAAO,CAAC,8BAAYrT,OAAb,CAAd;AACD;AALH;AAAA;AAAA,WAOE,qBAAYzjB,UAAZ,EAA8CwvB,OAA9C;AACE,UAAMmH,MAAM,4FAAqB32B,UAArB,EAAiCwvB,OAAjC,CAAZ;AACA,UAAMrvB,OAAO,GAAG,KAAK42B,WAAL,EAAhB;AACA,UAAM1E,aAAa,GAAG7C,OAAO,CAACoH,oBAAR,CAA6B17B,KAAnD;AACA,8DACKy7B,SAECx2B,OAAO,IAAI;AAAEA,QAAAA,OAAO,EAAPA;AAAF;AACfkyB,QAAAA,aAAa,EAAbA;QAJF;AAMD;AAjBH;AAAA;AAAA,WAmBU;;;AACN,UAAMA,aAAa,GAAwBH,+BAA+B,CAAC,KAAK9C,WAAN,CAA1E;AACA,UAAMD,gBAAgB,GAAGkD,aAAa,CAACn3B,KAAvC;AACA,aAAO,MAAA,iCAAAi0B,gBAAgB,CAACoF,IAAjB,CAAsBr5B,KAAtB,iBAAiC;AAAA,YAAG5G,IAAH,QAAGA,IAAH;AAAA,eAAcA,IAAI,KAAK,SAAvB;AAAA,OAAjC,CAAA,UAAA,iBAAA,SAAA,MAAoE6L,OAA3E;AACD;AAvBH;AAAA;AAAA,WAyBE;AAEE,UAAMgvB,gBAAgB,GAAG,KAAKC,WAAL,CAAkBl0B,KAAlB,CAAyB,CAAzB,EAA4BA,KAArD;AACA,aAAO;AACLm3B,QAAAA,aAAa,EAAE;AACb5f,UAAAA,EAAE,EAAE0c,gBAAgB,CAACoF,IAAjB,CAAsBr5B,KAAtB,CAA4B,CAA5B,EAA+BA,KADtB;AAEbuoB,UAAAA,OAAO,EAAE,8BAAYA;AAFR,SADV;AAKLwG,QAAAA,WAAW,EAAE,8BAAYA;AALpB,OAAP;AAQD;AApCH;AAAA;AAAA,WAsCE;;;AACE,UAAIoM,aAAa,GAAG,yEAAY,IAAZ,oBAAgC,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,KAAK,SAAjB;AAAA,OAAxC,CAApB;AACA,aAAO,wBAAAD,aAAa,MAAb,CAAAA,aAAa,EAAQ,UAACvD,MAAD,EAASwD,QAAT;AAAA,iDAA2BxD,6BAASwD,UAAW,wBAAA,KAAI,EAAQA,QAAR,GAAnD;AAAA,OAAR,EAAgF,EAAhF,CAApB;AACD;AAzCH;AAAA;AAAA,EAA6CzD,UAA7C;AACSgE,uCAAA,GAAkB,2BAAlB;;;;ICDIG,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGE;AACE,aAAO,CACL;AAAE1iC,QAAAA,IAAI,EAAE,OAAR;AAAiBuR,QAAAA,IAAI,EAAE,QAAvB;AAAiCisB,QAAAA,QAAQ,EAAE,IAA3C;AAAiDyD,QAAAA,KAAK,EAAE;AAAxD,OADK,CAAP;AAGD;AAPH;AAAA;AAAA,WASE;AACE,aAAO,CACL;AAAEjhC,QAAAA,IAAI,EAAE,aAAR;AAAuBuR,QAAAA,IAAI,EAAE,QAA7B;AAAuCisB,QAAAA,QAAQ,EAAE,IAAjD;AAAuDyD,QAAAA,KAAK,EAAE;AAA9D,OADK,CAAP;AAGD;AAbH;AAAA;AAAA,WAeE;AACE,aAAOuB,OAAO,CAAC,8BAAYG,KAAZ,IAAqB,8BAAYC,WAAlC,CAAd;AACD;AAjBH;AAAA;AAAA,WAmBE,qBAAYl3B,UAAZ,EAA8CwvB,OAA9C;AACE,UAAMmH,MAAM,0FAAqB32B,UAArB,EAAiCwvB,OAAjC,CAAZ;AACA,UAAM6C,aAAa,GAAG7C,OAAO,CAACoH,oBAAR,CAA6B17B,KAAnD;AACA,+CACKy7B;AACHtE,QAAAA,aAAa,EAAbA;QAFF;AAID;AA1BH;AAAA;AAAA,WA4BE;AACE,aAAO;AACLpI,QAAAA,WAAW,EAAE,8BAAYA,WADpB;AAELgN,QAAAA,KAAK,EAAE,8BAAYA,KAFd;AAGLC,QAAAA,WAAW,EAAE,8BAAYA;AAHpB,OAAP;AAKD;AAlCH;AAAA;AAAA,WAoCE;;;AACE,UAAIb,aAAa,GAAG,wEAAY,IAAZ,mBAAgC,UAAAC,QAAQ;AAAA;AAAA,eAAI,CAAC,uCAAC,OAAD,EAAU,aAAV,mBAAkCA,QAAlC,CAAL;AAAA,OAAxC,CAApB;AACA,aAAO,wBAAAD,aAAa,MAAb,CAAAA,aAAa,EAAQ,UAACvD,MAAD,EAASwD,QAAT;AAAA,iDAA2BxD,6BAASwD,UAAW,wBAAA,KAAI,EAAQA,QAAR,GAAnD;AAAA,OAAR,EAAgF,EAAhF,CAApB;AACD;AAvCH;AAAA;AAAA,EAA2CzD,UAA3C;AACSmE,qCAAA,GAAkB,yBAAlB;;;;ICRIG,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA4ClB,mBAA5C;AACSkB,sCAAA,GAAkB,yBAAlB;;;;ICHIC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGE;AACE,aAAO,CAAC,CAAC,8BAAYX,YAAd,IAA8B,KAAKt2B,OAAL,CAAau2B,IAAb,KAAsB,gBAA3D;AACD;AALH;AAAA;AAAA,EAAmCF,UAAnC;AACSY,6BAAA,GAAkB,gBAAlB;;;;ICEIC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAwCpB,mBAAxC;AACSoB,kCAAA,GAAkB,qBAAlB;;;;ICKIC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGE;;AACE,UAAMC,qBAAqB,GAAG,KAAKhE,OAAL,GAAeiE,WAA7C;AACA,UAAI,CAACD,qBAAL,EAA4B;AAC1B,eAAO,KAAP;AACD;AAED,UAAME,0BAA0B,GAAG,sCAAKrI,WAAL,CAAiBl0B,KAAjB,iBAA6B;AAAA,YAAG5G,IAAH,QAAGA,IAAH;AAAA,eAAcA,IAAI,KAAK,aAAvB;AAAA,OAA7B,CAAnC;AACA,aAAO,oCAAAmjC,0BAA0B,CAAClD,IAA3B,CAAiCr5B,KAAjC,kBAA8C,UAACw8B,YAAD,EAAeC,IAAf;AACnD,YAAIA,IAAI,CAAC7F,QAAT,EAAmB;AACjB4F,UAAAA,YAAY,GAAGA,YAAY,IAAI,CAAC,CAACH,qBAAqB,CAACI,IAAI,CAACrjC,IAAN,CAAtD;AACD;AACD,eAAOojC,YAAP;AACD,OALM,EAKJ,IALI,CAAP;AAMD;AAhBH;AAAA;AAAA,WAkBE;;UAA+BE,0BAAfrD,KAAQr5B;AACtB,UAAM28B,cAAc,GAAG,qBAAAD,iBAAiB,MAAjB,CAAAA,iBAAiB,EAAK;AAAA,YAAEtjC,IAAF,SAAEA,IAAF;AAAA,eAAYA,IAAZ;AAAA,OAAL,CAAxC;AACA,UAAMsN,IAAI,GAAG,wBAAAi2B,cAAc,MAAd,CAAAA,cAAc,EAAQ,UAACC,eAAD,EAAkBC,aAAlB;AAAA,eACjC,wBAAA,KAAI,EAAQA,aAAR,CAAJ,qCACGD,sCACFC,eAAgB,wBAAA,KAAI,EAAQA,aAAR,GAFrB,GAGED,eAJ+B;AAAA,OAAR,EAIL,EAJK,CAA3B;AAKA,UAAI,aAAYl2B,IAAZ,EAAkBzL,MAAlB,KAA6B,CAAjC,EAAoC;AAClC;AACD;AACD,aAAOyL,IAAP;AACD;AA7BH;AAAA;AAAA,WA+BE,6BAAoBoyB,KAApB;AACE,gCAAWA,KAAK,CAACO,IAAN,CAAWr5B,KAAtB;AACD;AAjCH;AAAA;AAAA,WAmCE,0BAAiB88B,gBAAjB;;AACE,aAAO,oCAAAA,gBAAgB,CAAC98B,KAAjB,CAAuB,CAAvB,EAA0Bq5B,IAA1B,CAA+Br5B,KAA/B,kBAA4C,UAAC+8B,MAAD,EAAStK,KAAT;AACjD,YAAIA,KAAK,CAACuG,QAAV,EAAoB;AAClB+D,UAAAA,MAAM,CAAC56B,IAAP,CAAYswB,KAAK,CAACuG,QAAN,CAAeh5B,KAAf,CAAqB,CAArB,EAAwBnH,OAApC;AACD;AACD,eAAOkkC,MAAP;AACD,OALM,EAKJ,EALI,CAAP;AAMD;AA1CH;AAAA;AAAA,EAAmCpF,UAAnC;AACSyE,6BAAA,GAAkB,gBAAlB;;;;ICFIY,QAAb;AAAA;AAAA;AAAA;;;;AAGE,aAAA,GAAM;AACJ,oBAAc,CAAC,UAAD;AADV,KAAN;;AAyBD;AA5BD;AAAA;AAAA,WAOE;AACE,0BAAuB,KAAK3E,OAAL,EAAvB;AAAA,UAAQ4E,UAAR,iBAAQA,UAAR;AACA,aAAO,CAAC,CAACA,UAAT;AACD;AAVH;AAAA;AAAA,WAYE;AACE,iDAAkC,IAAlC;AAAA,UAAQ/e,WAAR,gBAAQA,WAAR;AAAA,UAAqB8b,QAArB,gBAAqBA,QAArB;AACA,UAAI,CAAC9b,WAAD,IAAgB,CAAC8b,QAArB,EAA+B;AAC7B;AACD;AACD,aAAO9b,WAAW,IAAI;AAAEyb,QAAAA,QAAQ,EAAEK;AAAZ,OAAtB;AACD;AAlBH;AAAA;AAAA,WAoBE,6BAAoBlB,KAApB;AACE,+CACKA,KAAK,CAACO,IAAN,CAAWr5B,KAAX,CAAiB,CAAjB;AACH5G,QAAAA,IAAI,EAAE;AACNw9B,QAAAA,QAAQ,EAAEkC,KAAK,CAAClC;QAHlB;AAKD;AA1BH;AAAA;AAAA,EAA8Be,UAA9B;AACSqF,wBAAA,GAAkB,UAAlB;;;;ICJIE,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGE;AACE,UAAQC,WAAR,2BAAwB,IAAxB,EAAQA,WAAR;AACA,UAAI,CAACA,WAAL,EAAkB;AAChB;AACD;AACD,aAAO;AACLxD,QAAAA,QAAQ,EAAEwD;AADL,OAAP;AAGD;AAXH;AAAA;AAAA,WAaE,6BAAoBrE,KAApB;AAEE,UAAMsE,aAAa,GAAG,KAAKzE,gBAAL,GAAyBhuB,IAA/C;AACA,UAAMvR,IAAI,GAAGgkC,aAAa,KAAK,UAAlB,GAA+B,aAA/B,GAA+C,kBAA5D;AACA,+CACKtE,KAAK,CAACO,IAAN,CAAWr5B,KAAX,CAAiB,CAAjB;AACH5G,QAAAA,IAAI,EAAJA;QAFF;AAID;AArBH;AAAA;AAAA,EAA2Cu+B,UAA3C;AACSuF,qCAAA,GAAkB,wBAAlB;;;;ICLIG,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGE;AACE,aAAO,KAAP;AACD;AALH;AAAA;AAAA,WAOE;AACE,8BAAkC,KAAKnJ,WAAvC;AAAA,UAAQ96B,IAAR,qBAAQA,IAAR;AAAA,UAAcuR,IAAd,qBAAcA,IAAd;AAAA,UAAoBuC,GAApB,qBAAoBA,GAApB;AAAA,UAAyBhE,IAAzB,qBAAyBA,IAAzB;AACA,aAAO;AACL9P,QAAAA,IAAI,EAAJA,IADK;AAELuR,QAAAA,IAAI,EAAJA,IAFK;AAGLuC,QAAAA,GAAG,EAAHA,GAHK;AAILhE,QAAAA,IAAI,EAAJA;AAJK,OAAP;AAMD;AAfH;AAAA;AAAA,EAAiCyuB,UAAjC;AACS0F,2BAAA,GAAkB,cAAlB;;;;;;;ICUIC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAME,+BAAkB9F,cAAlB,EAAkCvyB,OAAlC;AACE,UAAIwyB,MAAJ;mDAC0BD;;;;cAAjBL;AACPM,UAAAA,MAAM,GAAG,sBAAAxyB,OAAO,MAAP,CAAAA,OAAO,EACR;AAAA,gBAAGyyB,SAAH,QAAGA,SAAH;AAAA,mBAAmBA,SAAS,CAACx1B,GAAV,KAAkBi1B,aAAa,CAACj1B,GAAnD;AAAA,WADQ,CAAhB;AAEA,cAAIu1B,MAAJ,EAAY;AACV;AACD;;AALH,4DAA0C;AAAA;AAAA,gCAItC;AAEH;;;;;;AACD,aAAOA,MAAP;AACD;AAhBH;AAAA;AAAA,WAkBE;AACE,iDAA0C,IAA1C;AAAA,UAAQD,cAAR,gBAAQA,cAAR;AAAA,UAAwBL,aAAxB,gBAAwBA,aAAxB;AACA,UAAMiC,4BAA4B,GAAGpC,+BAA+B,CAAC,KAAK9C,WAAN,CAApE;AACA,UAAQjvB,OAAR,GAAoBm0B,4BAApB,CAAQn0B,OAAR;AAEA,UAAI,CAACuyB,cAAD,IAAmB,CAACA,cAAc,CAACv8B,MAAvC,EAA+C;AAC7C,eAAO,KAAP;AACD;AAGD,UAAIqc,eAAe,CAAC6f,aAAD,CAAf,IAAkCA,aAAa,CAAC5f,EAApD,EAAwD;AACtD,eAAO,IAAP;AACD;AAGD,UAAMgmB,aAAa,GAAG,KAAKhG,iBAAL,CAAuBC,cAAvB,EAAuCvyB,OAAvC,CAAtB;AACA,UAAIs4B,aAAJ,EAAmB;AACjB,eAAO,IAAP;AACD;AAED,aAAO,KAAP;AACD,KAvCH;AAAA;AAAA;AAAA,WA0CE,qBAAYz4B,UAAZ;;AACE,UAAM22B,MAAM,wFAAqB32B,UAArB,CAAZ;AACA,UAAMs0B,4BAA4B,GAAGpC,+BAA+B,CAAC,KAAK9C,WAAN,CAApE;AACA,UAAMjvB,OAAO,GAAG,gCAAAm0B,4BAA4B,CAACn0B,OAA7B,iBAA0C,UAAAwyB,MAAM;AAC9D,YACE4C,KADF,GAGI5C,MAHJ,CACE4C,KADF;AAAA,YAEE3C,SAFF,GAGID,MAHJ,CAEEC,SAFF;AAIA,YAAMx1B,GAAG,GAAGw1B,SAAU,CAACx1B,GAAvB;AACA,eAAO;AAAEm4B,UAAAA,KAAK,EAALA,KAAF;AAASr6B,UAAAA,KAAK,EAAEkC;AAAhB,SAAP;AACD,OAPe,CAAhB;AAQA,+CAAYu5B;AAAQx2B,QAAAA,OAAO,EAAPA;QAApB;AACD;AAtDH;AAAA;AAAA,WAwDE,0BAAiBgvB,gBAAjB;;AACE,kDAA0C,IAA1C;AAAA,UAAQuD,cAAR,iBAAQA,cAAR;AAAA,UAAwBL,aAAxB,iBAAwBA,aAAxB;AAGA,UAAI7f,eAAe,CAAC6f,aAAD,CAAf,IAAkCA,aAAa,CAAC5f,EAApD,EAAwD;AACtD,aAAKimB,qBAAL,GAA6BrG,aAA7B,CADsD;AAEtD,eAAOA,aAAP;AACD;AAED,UAAQlyB,OAAR,GAAoBgvB,gBAApB,CAAQhvB,OAAR;AACA,UAAMw4B,cAAc,GAAGlG,iBAAiB,CAACC,cAAD,EAAiBvyB,OAAjB,CAAxC;AACA,WAAKu4B,qBAAL,GAA6BC,cAAc,CAAC/F,SAA5C;AACA,WAAK+F,cAAL,GAAsBA,cAAtB;AACA,aAAO;AACLlmB,QAAAA,EAAE,EAAEkmB,cAAc,SAAd,IAAAA,cAAc,WAAd,SAAA,GAAA,kCAAAA,cAAc,CAAEz9B,KAAhB,CAAsBq5B,IAAtB,CAA2Br5B,KAA3B,kBAAsC;AAAA,cAAG5G,IAAH,SAAGA,IAAH;AAAA,iBAAcA,IAAI,KAAK,IAAvB;AAAA,SAAtC,EAAmE4G;AADlE,OAAP;AAGD;AAxEH;AAAA;AAAA,WA0EE,+BAAsBk0B,WAAtB;;AACE,UAAMjvB,OAAO,GAAG,iCAAAivB,WAAW,CAACjvB,OAAZ,kBAAwB;YAAGo1B,cAAAA;YAAO3C,kBAAAA;AAChD,eAAO;AACL2C,UAAAA,KAAK,EAALA,KADK;AAELr6B,UAAAA,KAAK,EAAE03B,SAAS,CAACx1B;AAFZ,SAAP;AAID,OALe,CAAhB;AAMA,aAAO;AAAE9I,QAAAA,IAAI,EAAE,eAAR;AAAyBuR,QAAAA,IAAI,EAAE,QAA/B;AAAyC1F,QAAAA,OAAO,EAAPA;AAAzC,OAAP;AACD;AAlFH;AAAA;AAAA,WAoFE;;;AACE,WAAK2yB,MAAL;AAEA,UAAMJ,cAAc,GAAI,kEAAYA,cAAZ,kBACd,UAAAL,aAAa;AACnB,eAAOC,qBAAqB,CAACD,aAAD,EAAgB,KAAI,CAACqG,qBAArB,CAArB,KAAqE,IAA5E;AACD,OAHqB,CAAxB;AAIA,uEAAY;AAAahG,QAAAA,cAAc,EAAdA;QAAzB;AACD;AA5FH;AAAA;AAAA,EACUG,UADV;;;;ICJa+F,+BAAb;AAAA;AAAA;AAGE,2CACExJ,WADF;;QAEE0D,6EAAoC;QACpC3yB,8EAA4B;;;AAE5B,8BAAMivB,WAAN,EAAmB0D,MAAnB,EAA2B3yB,OAA3B;AAGA,QAAM04B,cAAc,GAAG,MAAK14B,OAAL,CAAa0rB,IAAb,KAAsB,iBAA7C;AACA,QAAMiN,oBAAoB,GAAG,MAAA5G,+BAA+B,CAAC9C,WAAD,CAA/B,CAC1BjvB,OAD0B,UAAA,iBAAA,SAAA,MACjB4iB,KAAK;AAAA,UAAG6P,SAAH,QAAGA,SAAH;AAAA,aAAmB,CAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,SAAA,GAAAA,SAAS,CAAEx1B,GAAX,MAAmBkV,gBAAgB,CAACujB,aAAvD;AAAA,MADjB;AAEA,QAAIiD,oBAAoB,KAAKD,cAAc,IAAI,+BAAY3D,QAAnC,CAAxB,EAAsE;AAAA;AACpE,qCAAYxC,cAAZ,4EACK,+BAAYA,cAAZ,IAA8B,EADnC,IAEE;AAAEt1B,QAAAA,GAAG,EAAEkV,gBAAgB,CAACujB;AAAxB,OAFF;AAID;;AACF;AApBH;AAAA,EAAqD2C,mBAArD;AACSI,+CAAA,GAAkB,mCAAlB;;;;ICNIG,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA+CP,mBAA/C;AACSO,yCAAA,GAAkB,6BAAlB;;;;ICKIC,gCAAb;AAAA;AAAA;AAAA;;;;AAIE,aAAA,GAAM;AACJb,MAAAA,UAAU,EAAE,CAAC,UAAD;AADR,KAAN;;AAiCD;AArCD;AAAA;AAAA,WAQE;AACE,UAAMA,UAAU,GAAG,KAAK5E,OAAL,CAAa,YAAb,CAAnB;AACA,aAAO,CAAC,CAAC4E,UAAF,sGAAP;AACD;AAXH;AAAA;AAAA,WAaE,0BAAiBhJ,gBAAjB;;;AACE,UAAM8J,gBAAgB,0GAA0B9J,gBAA1B,CAAtB;AACA,UAAM+J,gBAAgB,GAAG,MAAA,KAAKP,cAAL,UAAA,iBAAA,SAAA,uCAAqBz9B,MAAMq5B,KAAKr5B,sBAAW;AAAA,YAAG5G,IAAH,QAAGA,IAAH;AAAA,eAAcA,IAAI,KAAK,YAAvB;AAAA,QAApE;AAKA,UAAM6kC,eAAe,GAAG,8BAAYC,UAAZ,KACtBF,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,SAAA,GAAAA,gBAAgB,CAAEh+B,KADI,MACe,MAAA,MAAAg+B,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,SAAA,GAAAA,gBAAgB,CAAE/4B,OAAlB,UAAA,iBAAA,SAAA,MAA4B,EAA5B,UAAA,iBAAA,SAAA,MAAgCjF,KAD/C,CAAxB;AAGA,UAAIi+B,eAAJ,EAAqB;AACnB,iDACKF;AACHG,UAAAA,UAAU,EAAED;UAFd;AAID;AAED,aAAOF,gBAAP;AACD;AA/BH;AAAA;AAAA,WAiCE;AACE,aAAO;AAAE3kC,QAAAA,IAAI,EAAE,UAAR;AAAoBuR,QAAAA,IAAI,EAAE;AAA1B,OAAP;AACD;AAnCH;AAAA;AAAA,EAAsD2yB,mBAAtD;AACSQ,gDAAA,GAAkB,qCAAlB;;;;ICNIK,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGE;AACE,aAAO,IAAP;AACD;AALH;AAAA;AAAA,EAAyCxG,UAAzC;AACSwG,mCAAA,GAAkB,uBAAlB;;;;ICMIC,iBAAb;AAAA;AAAA;AAGE,6BAAYlK,WAAZ;;QAAyC0D,6EAAY;;AACnD,8BAAM1D,WAAN,EAAmB0D,MAAnB;AAGA,UAAKT,aAAL,GAAqB,MAAKwB,gBAAL,EAArB;AAEA,UAAK0F,uBAAL;;AACD;AAVH;AAAA;AAAA,WAYY;;AACR,UAAM5e,iBAAiB,GAAG,KAAK6e,oBAAL,EAA1B;AACA,UAAI7e,iBAAJ,EAAuB;AAAA;AACrB,sCAAYuY,kBAAZ,GAAiC,8DAAYA,kBAAZ,iBAAoC,UAAAtxB,IAAI;AACvE,cAAI0wB,qBAAqB,CAAC,MAAI,CAACD,aAAN,EAAqBzwB,IAArB,CAAzB,EAAqD;AACnD,mBAAO,MAAI,CAAC63B,8BAAL,CAAoC73B,IAApC,CAAP;AACD;AACD,iBAAOA,IAAP;AACD,SALgC,CAAjC;AAMD,OAPD,MAOO;AACL,YAAMA,IAAI,GAAG,KAAK63B,8BAAL,EAAb;AACA,YAAI73B,IAAJ,EAAU;AACR,wCAAYsxB,kBAAZ,CAAgC71B,IAAhC,CAAqCuE,IAArC;AACD;AACF;AACF;AA3BH;AAAA;AAAA,WA6BY;;;AACR,aAAO,gEAAYsxB,kBAAZ,kBACC,UAACtxB,IAAD;AAAA,eAAU0wB,qBAAqB,CAAC,MAAI,CAACD,aAAN,EAAqBzwB,IAArB,CAA/B;AAAA,OADD,CAAP;AAED;AAhCH;AAAA;AAAA,WAkCE;;AACE,aAAO,8BAAYsxB,kBAAZ,CACJnQ,IADI,CACC,UAAAnhB,IAAI;AAAA,eAAI0wB,qBAAqB,CAAC,MAAI,CAACD,aAAN,EAAqBzwB,IAArB,CAAzB;AAAA,OADL,CAAP;AAED,KArCH;AAAA;AAAA;AAAA,WAwCE,qBAAY5B,UAAZ;AACE,UAAM22B,MAAM,sFAAqB32B,UAArB,CAAZ;AACA,UAAMG,OAAO,GAAG,KAAKu5B,cAAL,EAAhB;AACA,+CACK/C,SACCx2B,OAAO,IAAI;AAAEA,QAAAA,OAAO,EAAPA;AAAF,QAFjB;AAID;AA/CH;AAAA;AAAA,WAiDY,wCAA+Bwa,iBAA/B;AAER,iDAAoC,IAApC;AAAA,UAAMye,UAAN,gBAAMA,UAAN;AAAA,UAAkB/G,aAAlB,gBAAkBA,aAAlB;AACA,UAAI,CAAC+G,UAAD,IAAe5mB,eAAe,CAAC6f,aAAD,CAAlC,EAAmD;AAClD+G,QAAAA,UAAU,GAAG/G,aAAa,SAAb,IAAAA,aAAa,WAAb,SAAA,GAAAA,aAAa,CAAE+G,UAA5B;AACA;AAED,gCAA6B,KAAK/G,aAAlC;AAAA,UAAQ5f,EAAR,uBAAQA,EAAR;AAAA,UAAY+hB,YAAZ,uBAAYA,YAAZ;AACA,UAAM5yB,IAAI;AACR6Q,QAAAA,EAAE,EAAFA;AACA+hB,QAAAA,YAAY,EAAZA;SACI7Z,iBAAiB,IAAIA,oBACrBye,UAAU,IAAI;AAAEA,QAAAA,UAAU,EAAVA;AAAF,QAJpB;AAOA,aAAOx3B,IAAI,CAACw3B,UAAL,GAAkBx3B,IAAlB,GAAyB,IAAhC;AACD;AAjEH;AAAA;AAAA,WAmEY;;AACR,UAAMywB,aAAa,GAAG,uCAAKjD,WAAL,CAAiBl0B,KAAjB,kBACd;AAAA,YAAG5G,IAAH,QAAGA,IAAH;AAAA,eAAcA,IAAI,KAAK,eAAvB;AAAA,OADc,CAAtB;AAEA,aAAO+9B,aAAP;AACD;AAvEH;AAAA;AAAA,WAyEU;;;AACN,UAAMA,aAAa,GAAwB,KAAKH,+BAAL,EAA3C;AACA,aAAO,MAAA,kCAAAG,aAAa,CAACkC,IAAd,CAAoBr5B,KAApB,kBAA+B;AAAA,YAAG5G,IAAH,SAAGA,IAAH;AAAA,eAAcA,IAAI,KAAK,YAAvB;AAAA,OAA/B,CAAA,UAAA,iBAAA,SAAA,MAAqE6L,OAA5E;AACD;AA5EH;AAAA;AAAA,WA8EE;;;AACE,WAAK2yB,MAAL;AAEA,UAAMI,kBAAkB,GAAG,kEAAYA,kBAAZ,kBACjB,UAAAtxB,IAAI;AAAA,eAAI0wB,qBAAqB,CAAC,MAAI,CAACD,aAAN,EAAqBzwB,IAArB,CAArB,KAAoD,IAAxD;AAAA,OADa,CAA3B;AAEA,uEAAY;AAAasxB,QAAAA,kBAAkB,EAAlBA;QAAzB;AACD;AApFH;AAAA;AAAA,EAAoGL,UAApG;;;;ICLa8G,6BAAb;AAAA;AAAA;AAKE,yCACEvK,WADF;;QAEE0D,6EAAkC;QAClC3yB,8EAA4B;;AAE5B,8BAAMivB,WAAN,EAAmB0D,MAAnB;AAGA,UAAK8G,mCAAL,GAA2Cz5B,OAAO,CAACy5B,mCAAR,KAAgD,KAAhD,IACtC,MAAKvH,aAAL,CAAmB9hB,OAAnB,CAA2Bpa,MAA3B,KAAsC,CADA,IAEtC,MAAKk8B,aAAL,CAAmB9hB,OAAnB,CAA2B,CAA3B,EAA8B1K,IAA9B,KAAuC,OAF5C;;AAGD;AAhBH;AAAA;AAAA,WAkBE;AAEE,UAAI,KAAK+zB,mCAAL,KAA6C,KAAjD,EAAwD;AACtD,eAAO,IAAP;AACD;AACD;AACD;AAxBH;AAAA;AAAA,WA0BE;;AAEE,UAAI,KAAKA,mCAAL,KAA6C,KAAjD,EAAwD;AAAA;AACtD,YAAMtF,4BAA4B,GAAG,KAAKpC,+BAAL,EAArC;AACA,eAAO,MAAAoC,4BAA4B,CAACC,IAA7B,UAAA,iBAAA,SAAA,yCAAmCr5B,sBAAa,UAACi4B,GAAD,EAAMwE,IAAN;AACrD,cAAIA,IAAI,CAACz8B,KAAT,EAAgB;AACdi4B,YAAAA,GAAG,CAACwE,IAAI,CAACrjC,IAAN,CAAH,GAAiBqjC,IAAI,CAACz8B,KAAtB;AACD,WAFD,MAEO,IAAIy8B,IAAI,CAACx3B,OAAT,EAAkB;AACvBgzB,YAAAA,GAAG,CAACwE,IAAI,CAACrjC,IAAN,CAAH,GAAiBqjC,IAAI,CAACx3B,OAAL,CAAc,CAAd,EAAiBjF,KAAlC;AACD,WAFM,MAEA;AACL,kBAAM,IAAItG,YAAJ,gDAAyD+iC,IAAzD,EAAN;AACD;AACD,iBAAOxE,GAAP;AACD,WAAE,GATH;AAUD;AAED,aAAO,KAAKqG,oBAAL,EAAP;AACD;AA3CH;AAAA;AAAA,WA6CE;;AACE,UAAMnH,aAAa,GAAG,KAAKH,+BAAL,EAAtB;AACA,UAAMkH,UAAU,GAAG,kCAAA/G,aAAa,CAACkC,IAAd,CAAoBr5B,KAApB,kBAA+B;AAAA,YAAG5G,IAAH,QAAGA,IAAH;AAAA,eAAcA,IAAI,KAAK,YAAvB;AAAA,OAA/B,CAAnB;AAEA,UAAI8kC,UAAU,IAAIA,UAAU,CAACj5B,OAA7B,EAAsC;AACpC,eAAO;AACL7L,UAAAA,IAAI,EAAE,YADD;AAELuR,UAAAA,IAAI,EAAE,QAFD;AAGLisB,UAAAA,QAAQ,EAAE,IAHL;AAIL3xB,UAAAA,OAAO,EAAEi5B,UAAU,CAACj5B;AAJf,SAAP;AAMD;AAED,UAAMwzB,MAAM,sBAAOtB,aAAa,CAACkC,IAAd,CAAoBr5B,KAA3B,CAAZ;AACA,aAAOy4B,MAAP;AACD;AA5DH;AAAA;AAAA,WA8DE;;;AACE,WAAKb,MAAL;AACA,UAAIuD,aAAa,GAAG,yEAAY,IAAZ,oBAAgC,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,KAAK,eAAjB;AAAA,OAAxC,CAApB;AACA,aAAO,wBAAAD,aAAa,MAAb,CAAAA,aAAa,EAAQ,UAACvD,MAAD,EAASwD,QAAT;AAAA,iDAA2BxD,6BAASwD,UAAW,wBAAA,MAAI,EAAQA,QAAR,GAAnD;AAAA,OAAR,EAAgF,EAAhF,CAApB;AACD;AAlEH;AAAA;AAAA,EAAmDgD,iBAAnD;AACSK,6CAAA,GAAkB,iCAAlB;;;;ICAIE,2BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGE;;AACE,UAAMlf,iBAAiB,GAAG,KAAK6e,oBAAL,EAA1B;AACA,UAAMlF,4BAA4B,GAAGpC,+BAA+B,CAAC,KAAK9C,WAAN,CAApE;AACA,aAAO;AACL3c,QAAAA,EAAE,EAAE,iCAAA6hB,4BAA4B,CAACC,IAA7B,CAAmCr5B,KAAnC,iBACI;AAAA,cAAG5G,IAAH,QAAGA,IAAH;AAAA,iBAAcA,IAAI,KAAK,IAAvB;AAAA,SADJ,EACkC4G,KAFjC;AAGLk+B,QAAAA,UAAU,EAAEze,iBAAkB,CAACye,UAH1B;AAILlC,QAAAA,WAAW,EAAEvc,iBAAkB,CAACuc;AAJ3B,OAAP;AAMD;AAZH;AAAA;AAAA,WAcE,+BAAsB9H,WAAtB;;AACE,aAAO,kCACL;AAAE96B,QAAAA,IAAI,EAAE,YAAR;AAAsBuR,QAAAA,IAAI,EAAE;AAA5B,OADK,EAEL;AAAEvR,QAAAA,IAAI,EAAE,aAAR;AAAuBihC,QAAAA,KAAK,EAAE,cAA9B;AAA8C1vB,QAAAA,IAAI,EAAE;AAApD,OAFK,mBAGD,UAAAhK,IAAI;;AACR,YAAMX,KAAK,GAAG,kCAAAk0B,WAAW,CAACmF,IAAZ,CAAiBr5B,KAAjB,kBAA4B,UAAA2sB,GAAG;AAAA,iBAAIA,GAAG,CAACvzB,IAAJ,KAAauH,IAAI,CAACvH,IAAtB;AAAA,SAA/B,CAAd;AACA,iDAAY4G,QAAUW,KAAtB;AACD,OANM,CAAP;AAOD;AAtBH;AAAA;AAAA,WAwBY,wCAA+B+F,IAA/B;AAERA,MAAAA,IAAI,mHAAwCA,IAAxC,CAAJ;AAEA,UAAQs1B,WAAR,2BAAwB,IAAxB,EAAQA,WAAR;AACA,UAAI,CAACt1B,IAAD,IAAS,CAACs1B,WAAd,EAA2B;AACzB;AACD;AAED,+CACMt1B,IAAI,IAAIA,OACRs1B,WAAW,IAAI;AAAEA,QAAAA,WAAW,EAAXA;AAAF,QAFrB;AAID;AArCH;AAAA;AAAA,EAAiDoC,iBAAjD;AACSO,2CAAA,GAAkB,+BAAlB;;;;ICHIC,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGE;AACE,aAAO,CAAC,CAAC,8BAAYC,IAAd,IAAsB,KAAK55B,OAAL,CAAau2B,IAAb,KAAsB,MAAnD;AACD;AALH;AAAA;AAAA,EAA0B7D,UAA1B;AACSiH,oBAAA,GAAkB,MAAlB;;SChBOE,gBAAgB5K;AAC9B,MAAMvtB,GAAG,GAAG,EAAZ;AACA,uCAA2Bo4B,gBAAe7K,WAAf,CAA3B,uCAAwD;AAAnD;AAAA,QAAOhyB,GAAP;AAAA,QAAYlC,KAAZ;AACH,QAAIA,KAAK,KAAK,IAAV,IAAkB,OAAOA,KAAP,KAAiB,WAAvC,EAAoD;AAClD;AACD;AAED,QAAIZ,KAAK,CAAC4K,OAAN,CAAchK,KAAd,CAAJ,EAA0B;AACxB2G,MAAAA,GAAG,CAACzE,GAAD,CAAH,GAAW,qBAAAlC,KAAK,MAAL,CAAAA,KAAK,EAAK8+B,eAAL,CAAhB;AACD,KAFD,MAEO,IAAI,QAAO9+B,KAAP,MAAiB,QAArB,EAA+B;AAAA;AACpC,UAAMg/B,QAAQ,GAAG,aAAYh/B,KAAZ,CAAjB,CADoC;AAIpC,UAAI,sCAAC,OAAD,EAAU,MAAV,kBAA2BkC,GAA3B,KACC88B,QAAQ,CAAC/jC,MAAT,KAAoB,CADrB,IAEC,uCAAC,OAAD,EAAU,MAAV,mBAA2B+jC,QAAQ,CAAC,CAAD,CAAnC,CAFL,EAGE;AAEA,YAAMC,aAAa,GAAGH,eAAe,CAAC9+B,KAAD,CAArC;AACA,wBAAei/B,aAAf,EAA8Bv/B,OAA9B,CAAsC;;cAAEwC;cAAKlC;AAC3C2G,UAAAA,GAAG,CAACzE,GAAD,CAAH,GAAWlC,KAAX;AACD,SAFD;AAGD,OATD,MASO;AAEL2G,QAAAA,GAAG,CAACzE,GAAD,CAAH,GAAW48B,eAAe,CAAC9+B,KAAD,CAA1B;AACD;AACF,KAjBM,MAiBA;AAEL2G,MAAAA,GAAG,CAACzE,GAAD,CAAH,GAAWlC,KAAX;AACD;AACF;AAED,SAAO2G,GAAP;AACD;SAIeu4B,mBAAmBpG,OAAOlB;AACxC,MAAM/5B,EAAE,GAAG,SAALA,EAAK,CAACi7B,KAAD,EAAQlB,MAAR,EAAgBuH,eAAhB;AACT,QAAQ/lC,IAAR,GAAiD0/B,KAAjD,CAAQ1/B,IAAR;AAAA,QAAc4G,KAAd,GAAiD84B,KAAjD,CAAc94B,KAAd;AAAA,QAAqB2K,IAArB,GAAiDmuB,KAAjD,CAAqBnuB,IAArB;AAAA,QAA2B1F,OAA3B,GAAiD6zB,KAAjD,CAA2B7zB,OAA3B;AAAA,QAAoC2xB,QAApC,GAAiDkC,KAAjD,CAAoClC,QAApC;AACA,QAAMwI,UAAU,GAAGxI,QAAQ,IAAIuI,eAA/B;AAGA,QAAI//B,KAAK,CAAC4K,OAAN,CAAchK,KAAd,CAAJ,EAA0B;AACxB,aAAO,wBAAAA,KAAK,MAAL,CAAAA,KAAK,EAAQ,UAACi4B,GAAD,EAAMt3B,IAAN;AAClB,eAAOs3B,GAAG,IAAIp6B,EAAE,CAAC8C,IAAD,EAAOi3B,MAAM,CAACx+B,IAAD,CAAb,EAAqBgmC,UAArB,CAAhB;AACD,OAFW,EAET,IAFS,CAAZ;AAGD;AAKD,QAAIn6B,OAAJ,EAAa;AAEX,UAAI0F,IAAI,KAAK,QAAb,EAAuB;AAAA;AACrB,YAAM8yB,cAAc,GAAG7F,MAAM,CAACx+B,IAAD,CAA7B;AACA,YAAI,EAACqkC,cAAc,SAAd,IAAAA,cAAc,WAAd,SAAA,GAAAA,cAAc,CAAElmB,EAAjB,CAAJ,EAAyB;AACxB,iBAAO,KAAP;AACA;AACD,YAAM8nB,YAAY,GAAG,sBAAAp6B,OAAO,MAAP,CAAAA,OAAO,EAAM,UAACwyB,MAAD;;AAChC,cAAM6H,QAAQ,GAAG,kCAAA7H,MAAM,CAACz3B,KAAP,kBAAkB;AAAA,gBAAG5G,IAAH,SAAGA,IAAH;AAAA,mBAAcA,IAAI,KAAK,IAAvB;AAAA,WAAlB,CAAjB;AACA,iBAAOkmC,QAAQ,CAACt/B,KAAT,KAAmBy9B,cAAc,CAAClmB,EAAzC;AACD,SAH2B,CAA5B;AAIA,YAAI,CAAC8nB,YAAL,EAAmB;AACjB,iBAAO,KAAP;AACD;AACD,eAAO,wEAAAA,YAAY,CAACr/B,KAAb,kBACG;AAAA,cAAG42B,QAAH,SAAGA,QAAH;AAAA,iBAAkB,CAAC,CAACA,QAApB;AAAA,SADH,mBAEG,UAACqB,GAAD;cAAQ7+B,aAAAA;AACd,iBAAO6+B,GAAG,IAAI,CAAC,CAACwF,cAAc,CAACrkC,IAAD,CAA9B;AACD,SAJI,EAIF,IAJE,CAAP;AAKD,OAnBU;AAsBX,UAAIw9B,QAAQ,KAAK,KAAjB,EAAwB;AACtB,eAAO,IAAP;AACD,OAxBU;AA2BX,UAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACrB,eAAO,CAAC,CAACgB,MAAM,CAACx+B,IAAD,CAAf;AACD,OA7BU;AAgCX,YAAM,IAAIM,YAAJ,iCAA0C,gBAAeo/B,KAAf,CAA1C,EAAN;AACD;AAGD,QAAI,CAACsG,UAAL,EAAiB;AACf,aAAO,IAAP;AACD;AAED,WAAO,CAAC,EAAExH,MAAM,IAAIA,MAAM,CAACx+B,IAAD,CAAlB,CAAR;AACD,GAvDD;AAyDA,SAAOyE,EAAE,CAACi7B,KAAD,EAAQlB,MAAR,EAAgB,KAAhB,CAAT;AACD;;;;IC/FY2H,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;;AAEE,UAAI,OAAO,KAAKrL,WAAL,CAAiBtB,MAAxB,KAAmC,UAAvC,EAAmD;AACjD,eAAO,KAAP;AACD;AAED,UAAM6F,MAAM,GAAG,KAAKC,SAAL,EAAf;AACA,UAAM/xB,GAAG,GAAG,wBAAA8xB,MAAM,MAAN,CAAAA,MAAM,EAAQ,UAACR,GAAD,EAAMa,KAAN;AACxB,eAAOb,GAAG,IAAIiH,kBAAkB,CAACpG,KAAD,0BAAQ,KAAR,EAAhC;AACD,OAFiB,EAEf,IAFe,CAAlB;AAGA,aAAOnyB,GAAP;AACD;AAZH;AAAA;AAAA,WAcE;;;AACE,UAAMD,IAAI,GAAG,yCAAKgyB,SAAL,oBAAwB,UAACT,GAAD;YAAQ7+B,YAAAA;AAC3C6+B,QAAAA,GAAG,CAAC7+B,IAAD,CAAH,GAAY,wBAAA,MAAI,EAAQA,IAAR,CAAhB;AACA,eAAO6+B,GAAP;AACD,OAHY,EAGV,EAHU,CAAb;AAIA,aAAOvxB,IAAP;AACD;AApBH;AAAA;AAAA,WAsBE,qBAAY5B,UAAZ,EAA8CyzB,QAA9C;AACE,UAAMn/B,IAAI,GAAG,KAAKo/B,OAAL,EAAb;AACA,UAAMC,MAAM,GAAG,KAAKC,SAAL,EAAf;AAIM,UAAAjE,KAYF,KAAKP,WAZH;AAAA,YAAA,CAEJhrB,IAFI;AAAA,YAAA,CAGJ7D,MAHI;AAAA,YAAA,CAIJmvB,GAJI;AAAA,YAAA,CAKJf,OALI;AAAA,YAAA,CAMJ+L,QANI;AAAA,YAAA,CAQJx/B,KARI;AAAA,cAUJ4yB,MAVI,KAAA,CAUJA,MAVI;AAAA,UAWD6M,IAXC,cAAA,OAAA,UAAA,OAAA,WAAA,YAAA,SAAA,UAAA;AAgBN,UAAI7M,MAAJ,EAAY;AACV,gEACK6M,OACC,CAAC,CAAChH,MAAM,CAACx9B,MAAT,IAAmB;AAAEw9B,UAAAA,MAAM,EAANA;AAAF;AACvB7F,UAAAA,MAAM;AAAA,sEAAE,iBAAOtoB,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA,wDACCxF,UAAU,CAACwnB,GAAX,CAAeoJ,OAAf;AACL8F,wBAAAA,IAAI,EAAEpiC;yBACHkR,OAFE,CADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAF;AAAA;AAAA;AAAA;AAAA;AAAA;UAHR;AAUD;AAGD,aAAO,iBAAA,EAAK,KAAK4pB,WAAV,CAAP;AAED;AA5DH;AAAA;AAAA,WA8DE;;AACE,aAAO,sGAAC,KAAKA,WAAL,CAAiBl0B,KAAjB,IAA0B,EAA3B,kBACG;AAAA,YAAG5G,IAAH,SAAGA,IAAH;AAAA,eAAcA,IAAI,KAAK,aAAvB;AAAA,OADH,mBAEA0lC,eAFA,mBAGA,UAAAhG,KAAK;AAERA,QAAAA,KAAK,CAACnuB,IAAN,GAAamuB,KAAK,CAACnuB,IAAN,IAAc,QAA3B;AACA,eAAOmuB,KAAP;AACD,OAPI,CAAP;AAQD;AAvEH;AAAA;AAAA,EAAuCnB,UAAvC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SCGgB+H,mBAAmB9L;AACjC,MAAQ6B,eAAR,GAA6C7B,WAA7C,CAAQ6B,eAAR;AAAA,MAAyBtnB,eAAzB,GAA6CylB,WAA7C,CAAyBzlB,eAAzB;AACA,SAAO,CAACsnB,eAAe,CAACx6B,MAAjB,IAA2B,CAACkT,eAAnC;AACD;SAEewxB,UAAU/L;AACxB,SAAOA,WAAW,CAAC6B,eAAZ,CAA4B5N,IAA5B,CAAiC;AAAA,QAAGzuB,IAAH,QAAGA,IAAH;AAAA,WAAcA,IAAI,KAAK,MAAvB;AAAA,GAAjC,CAAP;AACD;SAEewmC,YAAYhM;AAC1B,SAAO,aAAYA,WAAW,CAACS,OAAxB,EAAiCxM,IAAjC,CAAsC,UAAAgY,UAAU;AAAA,WAAI,0BAAAA,UAAU,MAAV,CAAAA,UAAU,EAAU,QAAV,CAAd;AAAA,GAAhD,CAAP;AACD;SAEeC,mCACd9/B;AAEA,MAAI,CAACA,KAAD,IAAU,CAACZ,KAAK,CAAC4K,OAAN,CAAchK,KAAd,CAAf,EAAqC;AACnC;AACD;AACD,SAAO,wBAAAA,KAAK,MAAL,CAAAA,KAAK,EAAQ,UAACg5B,QAAD,EAAWh5B,KAAX;AAClB,QAAIA,KAAK,CAACg5B,QAAV,EAAoB;AAAA;AAClBA,MAAAA,QAAQ,4EAAOA,QAAP,sBAAoBh5B,KAAK,CAACg5B,QAAN,CAAeh5B,KAAnC,EAAR;AACD;AACD,QAAIA,KAAK,CAACq5B,IAAV,EAAgB;AAAA;AACd,UAAM0G,gBAAgB,GAAGD,kCAAkC,CAAC9/B,KAAK,CAACq5B,IAAN,CAAWr5B,KAAZ,CAAlC,IAAwD,EAAjF;AACAg5B,MAAAA,QAAQ,8EAAOA,QAAP,sBAAoB+G,gBAApB,EAAR;AACD;AACD,QAAI//B,KAAK,CAACiF,OAAV,EAAmB;AAAA;AACjB,UAAI+6B,YAAY,GAAG,EAAnB;AACAhgC,MAAAA,KAAK,CAACiF,OAAN,CAAcvF,OAAd,CAAsB,UAAA+3B,MAAM;;AAC1B,YAAI,CAACA,MAAM,CAACz3B,KAAR,IAAiB,OAAOy3B,MAAM,CAACz3B,KAAd,KAAwB,QAA7C,EAAuD;AACrD;AACD;AACDggC,QAAAA,YAAY,8EAAOA,YAAP,IAAqBvI,MAAM,CAACz3B,KAA5B,EAAZ;AACD,OALD;AAMA,UAAMigC,mBAAmB,GAAGH,kCAAkC,CAACE,YAAD,CAAlC,IAAoD,EAAhF;AACAhH,MAAAA,QAAQ,8EAAOA,QAAP,sBAAoBiH,mBAApB,EAAR;AACD;AACD,WAAOjH,QAAP;AACD,GApBW,EAoBT,EApBS,CAAZ;AAqBD;SAEekH,wBAAwBtM;;;AACtC,MAAIoF,QAAQ,GAAiB,EAA7B;AACA,MAAQjM,WAAR,GAAyC6G,WAAzC,CAAQ7G,WAAR;AAAA,MAAqB0I,eAArB,GAAyC7B,WAAzC,CAAqB6B,eAArB;AAGA,MAAM0K,cAAc,GAAG,MAAApT,WAAW,CAACiM,QAAZ,UAAA,iBAAA,SAAA,uCAAsBh5B,uBAAU,UAAAnH,OAAO;AAAA,WAAIA,OAAJ;AAAA,IAA9D;AACA,MAAIsnC,cAAJ,EAAoB;AAAA;AAClBnH,IAAAA,QAAQ,8EAAOA,QAAP,sBAAoBmH,cAApB,EAAR;AACD;+CAGuB1K;;;AAAxB,wDAAyC;AAAA,UAAhCvB,WAAgC;AACvC,UAAMkM,aAAa,GAAGN,kCAAkC,CAAC5L,WAAW,CAACl0B,KAAb,CAAxD;AACA,UAAIogC,aAAJ,EAAmB;AAAA;AACjBpH,QAAAA,QAAQ,8EAAOA,QAAP,sBAAoBoH,aAApB,EAAR;AACD;AACF;;;;;;AAGD,MAAMC,IAAI,GAAG,EAAb;AACArH,EAAAA,QAAQ,GAAG,wBAAAA,QAAQ,MAAR,CAAAA,QAAQ,EAAQ,UAACsH,QAAD,EAAWznC,OAAX;;;AACzB,QAAMqJ,GAAG,GAAG,MAAArJ,OAAO,CAAC0nC,IAAR,UAAA,iBAAA,SAAA,MAAcr+B,GAA1B;AACA,QAAIA,GAAG,IAAIm+B,IAAI,CAACn+B,GAAD,CAAf,EAAsB;AACpB,aAAOo+B,QAAP;AACD;AACDD,IAAAA,IAAI,CAACn+B,GAAD,CAAJ,GAAYrJ,OAAZ;AACAynC,IAAAA,QAAQ,8EAAOA,QAAP,IAAiBznC,OAAjB,EAAR;AACA,WAAOynC,QAAP;AACD,GARkB,EAQhB,EARgB,CAAnB;AASA,SAAOtH,QAAP;AACD;SAGewH,mBAAmB5M;AACjC,MAAMjtB,GAAG,GAAG,EAAZ;AACA,MAAQ0tB,OAAR,GAAqCT,WAArC,CAAQS,OAAR;AAAA,MAAiBoB,eAAjB,GAAqC7B,WAArC,CAAiB6B,eAAjB;AAEA,MAAIpB,OAAO,CAAC,8BAAD,CAAX,EAA6C;AAC3C1tB,IAAAA,GAAG,CAACxE,IAAJ,CAASkV,UAAU,CAACopB,iBAApB;AACD;AAED,MAAIhL,eAAe,CAAC5N,IAAhB,CAAqB;AAAA,QAAGzuB,IAAH,SAAGA,IAAH;AAAA,WAAcA,IAAI,KAAK,uBAAvB;AAAA,GAArB,CAAJ,EAA0E;AACxEuN,IAAAA,GAAG,CAACxE,IAAJ,CAASkV,UAAU,CAACqpB,YAApB;AACD;AAED,MAAIjL,eAAe,CAAC5N,IAAhB,CAAqB;AAAA,QAAGzuB,IAAH,SAAGA,IAAH;AAAA,WAAcA,IAAI,KAAK,cAAvB;AAAA,GAArB,CAAJ,EAAiE;AAC/DuN,IAAAA,GAAG,CAACxE,IAAJ,CAASkV,UAAU,CAACspB,UAApB;AACD;AAED,MAAIlL,eAAe,CAAC5N,IAAhB,CAAqB;AAAA,QAAGzuB,IAAH,SAAGA,IAAH;AAAA,WAAcA,IAAI,KAAK,gBAAvB;AAAA,GAArB,CAAJ,EAAmE;AACjEuN,IAAAA,GAAG,CAACxE,IAAJ,CAASkV,UAAU,CAACupB,cAApB;AACD;AAED,SAAOj6B,GAAP;AACD;SAEek6B,kBACd/7B,YACA8uB,aACA9C;;AAEA,MAAMnqB,GAAG,GAAe,EAAxB;AAEA,MAAMm6B,aAAa,GAA0C,mDAAcC,WAAd,mBACnD,UAACC,GAAD,EAAMC,eAAN;AAEN,QAAIA,eAAe,CAACC,eAApB,EAAqC;AACnCF,MAAAA,GAAG,CAACC,eAAe,CAACC,eAAjB,CAAH,GAAuCD,eAAvC;AACD;AACD,WAAOD,GAAP;AACD,GAP0D,EAOxD,EAPwD,CAA7D;gDASwBpN,WAAW,CAAC6B;;;AAApC,2DAAqD;AAAA,UAA5CvB,WAA4C;AACnD,UAAMiN,CAAC,GAAGC,kBAAkB,CAAClN,WAAD,EAAc;AAAEpD,QAAAA,oBAAoB,EAApBA,oBAAF;AAAwBiQ,QAAAA,WAAW,EAAED;AAArC,OAAd,CAA5B;AACA,UAAIK,CAAJ,EAAO;AACL,YAAME,UAAU,GAAe,IAAIF,CAAJ,CAAMjN,WAAN,CAA/B;AACAvtB,QAAAA,GAAG,CAACxE,IAAJ,CAAUk/B,UAAU,CAACC,WAAX,CAAuBx8B,UAAvB,EAAmC8uB,WAAW,CAACU,OAA/C,CAAV;AACD;AACF;;;;;;;AAEI;AAAA,QAAOl7B,IAAP;AACHuN,IAAAA,GAAG,CAACxE,IAAJ,CAAS;AACP/I,MAAAA,IAAI,EAAJA,IADO;AAEPw5B,MAAAA,MAAM;AAAA,kEAAE,iBAAOtoB,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA,qDACCxF,UAAU,CAACwnB,GAAX,CAAeoJ,OAAf,CAAuB;AAC5BrB,oBAAAA,OAAO,EAAE,CAAC;AAAEj7B,sBAAAA,IAAI,EAAJA,IAAF;AAAQkR,sBAAAA,MAAM,EAANA;AAAR,qBAAD;AADmB,mBAAvB,CADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFC,KAAT;;AADF,uCAAqBy0B,gBAAgBnL,WAAW,CAACS,OAAZ,IAAuB,EAAvC,CAArB,uCAAkE;AAAA;AASjE;AAED,SAAO1tB,GAAP;AACD;SAEe46B,2BACd3N,aACAsN,iBACAtJ;;AAEA,MAAMtC,YAAY,GAAG1B,WAAW,CAAC6B,eAAZ,IAA+B,EAApD;AACA,MAAMvB,WAAW,GAAG,sBAAAoB,YAAY,MAAZ,CAAAA,YAAY,EAAM,UAAAoB,CAAC;AAAA,WAAIA,CAAC,CAACt9B,IAAF,KAAW8nC,eAAf;AAAA,GAAP,CAAhC;AACA,MAAI,CAAChN,WAAL,EAAkB;AAEhB32B,IAAAA,IAAI,yCAAiC2jC,eAAjC,uCAAJ;AACA,WAAOtJ,MAAP;AACD;AAGD,MAAM4J,oBAAoB,GAAG,qCAAAtN,WAAW,CAACl0B,KAAZ,mBAA0B,UAAC2G,GAAD,EAAM0mB,KAAN;AACrD,QAAQj0B,IAAR,GAAwBi0B,KAAxB,CAAQj0B,IAAR;AAAA,QAAc4G,KAAd,GAAwBqtB,KAAxB,CAAcrtB,KAAd;AACA,QAAI5G,IAAI,KAAK,aAAb,EAA4B;AAC1BuN,MAAAA,GAAG,CAACvN,IAAD,CAAH,GAAY4G,KAAZ,CAD0B;AAE3B,KAFD,MAEO;AACL2G,MAAAA,GAAG,CAACvN,IAAD,CAAH,GAAYw+B,MAAM,CAACx+B,IAAD,CAAlB,CADK;AAEN;AACD,WAAOuN,GAAP;AACD,GAR4B,EAQ1B,EAR0B,CAA7B;AASA,SAAO66B,oBAAP;AACD;AAED,SAASJ,kBAAT,CAA4BlN,WAA5B,EAAyDjvB,OAAzD;AACE,MAAQ6rB,oBAAR,GAA8C7rB,OAA9C,CAAQ6rB,oBAAR;AAAA,MAA8BiQ,WAA9B,GAA8C97B,OAA9C,CAA8B87B,WAA9B;AAEA,MAAI,CAAC7M,WAAL,EAAkB;AAChB,WAAO/2B,SAAP;AACD;AAED,MAAI2zB,oBAAJ,EAA0B;AACxB,WAAOyO,iBAAP;AACD;AAGD,SAAOwB,WAAY,CAAC7M,WAAW,CAAC96B,IAAb,CAAnB;AACD;SAIeqoC,cACdC,iBACA9J,QACA3yB;AAGA,MAAM87B,WAAW,GAAG97B,OAAO,CAAC87B,WAA5B;AACA,MAAMjQ,oBAAoB,GAAG7rB,OAAO,CAAC6rB,oBAArC;AAEA,MAAIuQ,UAAJ;AAEA,MAAIp8B,OAAO,CAACu2B,IAAZ,EAAkB;AAEhB,QAAMtH,WAAW,GAAG,sBAAAwN,eAAe,MAAf,CAAAA,eAAe,EAAM;AAAA,UAAGtoC,IAAH,SAAGA,IAAH;AAAA,aAAcA,IAAI,KAAK6L,OAAO,CAACu2B,IAA/B;AAAA,KAAN,CAAnC;AACA,QAAItH,WAAJ,EAAiB;AACf,UAAMiN,CAAC,GAAGC,kBAAkB,CAAClN,WAAD,EAAcjvB,OAAd,CAA5B;AACA,aAAOk8B,CAAC,GAAG,IAAIA,CAAJ,CAAMjN,WAAN,EAAmB0D,MAAnB,EAA2B3yB,OAA3B,CAAH,GAAyC9H,SAAjD;AACD,KAHD,MAGO;AAELI,MAAAA,IAAI,kBAAU0H,OAAO,CAACu2B,IAAlB,uCAAJ;AACA;AACD;AACF;AAED,MAAMmG,oBAAoB,GAAiB,EAA3C;AACA,MAAI7Q,oBAAJ,EAA0B;AAExB6Q,IAAAA,oBAAoB,CAACx/B,IAArB,CAA0B,IAAIo9B,iBAAJ,CAAsBmC,eAAe,CAAC,CAAD,CAArC,EAA0C9J,MAA1C,EAAkD3yB,OAAlD,CAA1B;AACD,GAHD,MAGO;AAAA,kDACmBy8B,eADnB;AAAA;AAAA;AACL,6DAAyC;AAAA;AAAA,YAAhCxN,YAAgC;AACvC,YAAM0N,kBAAkB,GAAG,oDAAYb,WAAZ,oBAA4C7M,YAAW,CAAC96B,IAAxD,CAA3B;AACA,YAAI,CAACwoC,kBAAL,EAAyB;AACvB;AACD,SAJsC;AAOvC,YAAMT,EAAC,GAAGC,kBAAkB,CAAClN,YAAD,EAAcjvB,OAAd,CAA5B;AACAo8B,QAAAA,UAAU,GAAG,IAAIF,EAAJ,CAAMjN,YAAN,EAAmB0D,MAAnB,EAA2B3yB,OAA3B,CAAb;AACA,YAAIo8B,UAAU,CAAC7E,YAAX,EAAJ,EAA+B;AAE7B,iBAAO6E,UAAP;AACD,SAZsC;AAevCM,QAAAA,oBAAoB,CAACx/B,IAArB,CAA0Bk/B,UAA1B;AACD;AAjBI;AAAA;AAAA;AAAA;AAAA;AAkBN;AAED,SAAOM,oBAAoB,CAAC,CAAD,CAA3B;AACD;SAGeL,YACdx8B,YAAkCu8B,YAAwBzN;AAE1D,MAAMoH,QAAQ,GAAGqG,UAAU,CAACC,WAAX,CAAuBx8B,UAAvB,EAAmC8uB,WAAW,CAACU,OAA/C,CAAjB;AACA,MAAMuN,OAAO,GAAGlC,SAAS,CAAC/L,WAAD,CAAzB;AACA,MAAMkO,SAAS,GAAGlC,WAAW,CAAChM,WAAD,CAA7B;AACA,0DACKoH,WACC6G,OAAO,IAAI;AAACA,IAAAA,OAAO,EAAPA;AAAD,MACXC,SAAS,IAAI;AAACA,IAAAA,SAAS,EAATA;AAAD,IAHnB;AAKD;SAEeC,eAAej9B,YAAkCzJ,GAAGgmC;AAElE,MAAIzN,WAAW,GAAG9G,aAAa,CAACzxB,CAAD,CAAb,GAAmBA,CAAnB,GAAuB,IAAzC;AACA,MAAI,CAACu4B,WAAL,EAAkB;AAEhB,UAAMv4B,CAAN;AACD;AACDu4B,EAAAA,WAAW,qCACNA;AACH4B,IAAAA,iBAAiB,EAAE;IAFrB;AAIA,MAAMwM,QAAQ,GAAGtC,kBAAkB,CAAC9L,WAAD,CAAnC;AACA,MAAMoF,QAAQ,GAAGkH,uBAAuB,CAACtM,WAAD,CAAxC;AACA,MAAIoO,QAAJ,EAAc;AACZ,WAAO;AAAEpO,MAAAA,WAAW,EAAXA,WAAF;AAAeoO,MAAAA,QAAQ,EAARA,QAAf;AAAyBhJ,MAAAA,QAAQ,EAARA;AAAzB,KAAP;AACD,GAFD,MAEO;AACL,QAAMgC,QAAQ,GAAGqG,UAAU,IAAIC,WAAW,CAACx8B,UAAD,EAAau8B,UAAb,EAAyBzN,WAAzB,CAA1C;AACA;AACEA,MAAAA,WAAW,EAAXA;AACAoF,MAAAA,QAAQ,EAARA;OACIgC,QAAQ,IAAI;AAAEA,MAAAA,QAAQ,EAARA;AAAF,MAHlB;AAKD;AACF;;;;;AC5OD,SAASiH,mBAAT,CAA6BrK,MAA7B,EAAwDhE,WAAxD;;AAEE,SAAO,8CAAYA,WAAW,CAACS,OAAxB,kBAAsC,UAAAzB,MAAM;AAAA,WAAI,CAAC,CAACgF,MAAM,CAACsK,MAAT,IAAmB,0BAAAtP,MAAM,MAAN,CAAAA,MAAM,EAAU,SAAV,CAA7B;AAAA,GAA5C,CAAP;AACD;AAED,SAASuP,sBAAT,CAAgCvK,MAAhC;AAEE,2CACKA;AACHsK,IAAAA,MAAM,EAAE/kC;IAFV;AAID;AAED,SAASilC,uBAAT,CAAiCn9B,OAAjC,EAA4D46B,UAA5D;AACE,MAAIxL,OAAO,GAAGpvB,OAAO,CAACovB,OAAR,IAAmB,EAAjC;AACAA,EAAAA,OAAO,GAAG,wBAAAA,OAAO,MAAP,CAAAA,OAAO,EAAQ,UAAAhH,KAAK;AAC5B,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,aAAOA,KAAK,KAAKwS,UAAjB;AACD;AACD,WAAOxS,KAAK,CAACj0B,IAAN,KAAeymC,UAAtB;AACD,GALgB,CAAjB;AAOA,2CAAY56B;AAASovB,IAAAA,OAAO,EAAPA;IAArB;AACD;SAGqBgO,SAAtB;AAAA;AAAA;;2DAAO,iBACLv9B,UADK,EAEL8uB,WAFK,EAGLgE,MAHK,EAIL3yB,OAJK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAMsC2uB,WANtC,EAMC6B,eAND,gBAMCA,eAND,EAMkBtnB,eANlB,gBAMkBA,eANlB;AAAA,uBAOYlJ,OAPZ,EAOG0rB,IAPH,YAOGA,IAPH;AAAA,iBAUDxiB,eAVC;AAAA;AAAA;AAAA;AAAA,8CAWI;AAAEylB,cAAAA,WAAW,EAAXA;AAAF,aAXJ;AAAA;AAcCyN,YAAAA,UAdD,GAccI,aAAa,CAAChM,eAAD,EAAkBmC,MAAlB,EAA0B3yB,OAA1B,CAd3B;AAiBCq9B,YAAAA,gBAjBD,GAiBoBL,mBAAmB,CAACrK,MAAD,EAAShE,WAAT,CAjBvC;AAkBC2O,YAAAA,iBAlBD,GAkBqBt9B,OAAO,CAACovB,OAAR,IAAmB,EAlBxC;AAmBCA,YAAAA,OAnBD,8EAoBAkO,iBApBA,sBAqBCD,gBAAgB,IAAI,CAACA,gBAAD,CAApB,IAA0C,EArB3C;AAAA,iBAuBDjO,OAvBC;AAAA;AAAA;AAAA;AAAA,mDAwBgBA,OAxBhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBMzB,sBAAAA,MAxBN;AA0BGtoB,sBAAAA,MA1BH,GA0B6B,EA1B7B;AA2BD,0BAAI,OAAOsoB,MAAP,KAAkB,QAAtB,EAAgC;AAC9BtoB,wBAAAA,MAAM,GAAGsoB,MAAM,CAACtoB,MAAP,IAAiB,EAA1B;AACAsoB,wBAAAA,MAAM,GAAGA,MAAM,CAACx5B,IAAhB;AACD;AACGopC,sBAAAA,2BA/BH,GA+BiCL,sBAAsB,CAACvK,MAAD,CA/BvD;AAgCG6K,sBAAAA,4BAhCH,GAgCkCL,uBAAuB,CAACn9B,OAAD,EAAU2tB,MAAV,CAhCzD;AAAA,4BAkCG,OAAOgB,WAAW,CAACS,OAAZ,CAAoBzB,MAApB,CAAP,KAAuC,UAlC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAoCuBgB,WAAW,CAACS,OAAZ,CAAoBzB,MAApB,EAA4BtoB,MAA5B,CApCvB;AAAA;AAoCGspB,sBAAAA,WApCH;AAqCGA,sBAAAA,WAAW,qCAAQA;AAAa4B,wBAAAA,iBAAiB,EAAE;wBAAnD;AArCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAuCUuM,cAAc,CAACj9B,UAAD,gBAAgBu8B,UAAhB;AAvCxB;AAAA;AAAA,4BAyCKzO,MAAM,KAAK,QAzChB;AAAA;AAAA;AAAA;AAAA;AAAA,2BA0CU;AAAEgB,0BAAAA,WAAW,EAAXA,WAAF;AAAe8O,0BAAAA,QAAQ,EAAE;AAAzB;AA1CV;AAAA;AAAA;AAAA,2BA4CQL,SAAS,CACdv9B,UADc,EAEd8uB,WAFc,EAGd4O,2BAHc,EAIdC,4BAJc;AA5CjB;AAAA;AAqDKE,sBAAAA,iBArDL,GAqDyB,sBAAAlN,eAAe,MAAf,CAAAA,eAAe,EAAM;AAAA,4BAAGr8B,IAAH,QAAGA,IAAH;AAAA,+BAAcA,IAAI,KAAKw5B,MAAvB;AAAA,uBAAN,CArDxC;AAAA,2BAsDG+P,iBAtDH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAwDuB/O,WAAW,CAAC8B,OAAZ,CAAoB9C,MAApB,EAA4BtoB,MAA5B,CAxDvB;AAAA;AAwDGspB,sBAAAA,WAxDH;AAyDGA,sBAAAA,WAAW,qCAAQA;AAAa4B,wBAAAA,iBAAiB,EAAE;wBAAnD;AAzDH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BA4DUuM,cAAc,CAACj9B,UAAD,gBAAgBu8B,UAAhB;AA5DxB;AAAA;AAAA;AAAA,2BA+DQgB,SAAS,CAACv9B,UAAD,EAAa8uB,WAAb,EAA0BgE,MAA1B,EAAkC6K,4BAAlC;AA/DjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqECT,YAAAA,QArED,GAqEYtC,kBAAkB,CAAC9L,WAAD,CArE9B;AAsECoF,YAAAA,QAtED,GAsEYkH,uBAAuB,CAACtM,WAAD,CAtEnC;AAAA,iBAuEDoO,QAvEC;AAAA;AAAA;AAAA;AAAA,8CAwEI;AAAEpO,cAAAA,WAAW,EAAXA,WAAF;AAAeoO,cAAAA,QAAQ,EAARA,QAAf;AAAyBhJ,cAAAA,QAAQ,EAARA;AAAzB,aAxEJ;AAAA;AAAA,gBA2EAqI,UA3EA;AAAA;AAAA;AAAA;AAAA,iBA4ECp8B,OAAO,CAACu2B,IA5ET;AAAA;AAAA;AAAA;AA6ED5D,YAAAA,MAAM,GAAG2J,0BAA0B,CAAC3N,WAAD,EAAc3uB,OAAO,CAACu2B,IAAtB,EAA4B5D,MAA5B,CAAnC,CA7EC;AAAA;AAAA;AAAA,mBA+EqBhE,WAAW,CAAC8B,OAAZ,CAAoBzwB,OAAO,CAACu2B,IAA5B,EAAkC5D,MAAlC,CA/ErB;AAAA;AA+EChE,YAAAA,WA/ED;AAgFCA,YAAAA,WAAW,qCAAQA;AAAa4B,cAAAA,iBAAiB,EAAE;cAAnD;AAhFD,8CAiFQ;AAAE5B,cAAAA,WAAW,EAAXA;AAAF,aAjFR;AAAA;AAAA;AAAA;AAAA,8CAmFQmO,cAAc,CAACj9B,UAAD,eAnFtB;AAAA;AAAA,kBAsFC6rB,IAAI,KAAK,SAtFV;AAAA;AAAA;AAAA;AAAA,8CAuFM;AAAEiD,cAAAA,WAAW,EAAXA;AAAF,aAvFN;AAAA;AAAA,kBAyFG,IAAIl6B,YAAJ,mHAEa,wBAAA+7B,eAAe,MAAf,CAAAA,eAAe,EAAQ,UAACwC,GAAD,EAAMwE,IAAN;AAAA,qBAAexE,GAAG,GAAGA,GAAG,GAAG,IAAN,GAAawE,IAAI,CAACrjC,IAArB,GAA4BqjC,IAAI,CAACrjC,IAAnD;AAAA,aAAR,EAAiE,EAAjE,CAF5B,aAzFH;AAAA;AAAA,gBAgGAioC,UAAU,CAAC7E,YAAX,EAhGA;AAAA;AAAA;AAAA;AAiGGxB,YAAAA,QAjGH,GAiGcsG,WAAW,CAACx8B,UAAD,EAAau8B,UAAb,EAAyBzN,WAAzB,CAjGzB;AAAA,8CAkGI;AACLA,cAAAA,WAAW,EAAXA,WADK;AAELoH,cAAAA,QAAQ,EAARA,QAFK;AAGLhC,cAAAA,QAAQ,EAAEA,QAAQ,CAAC/9B,MAAT,GAAkB+9B,QAAlB,GAA4B77B;AAHjC,aAlGJ;AAAA;AAyGC/D,YAAAA,IAzGD,GAyGQioC,UAAU,CAAC7I,OAAX,EAzGR;AA0GC9xB,YAAAA,IA1GD,GA0GQ26B,UAAU,CAAChJ,OAAX,EA1GR;AAAA;AAAA;AAAA,mBA4GiBzE,WAAW,CAAC8B,OAAZ,CAAoBt8B,IAApB,EAA0BsN,IAA1B,CA5GjB;AAAA;AA4GHktB,YAAAA,WA5GG;AA6GHA,YAAAA,WAAW,qCAAQA;AAAa4B,cAAAA,iBAAiB,EAAE;cAAnD,CA7GG;AAgHHoC,YAAAA,MAAM,GAAGyJ,UAAU,CAACuB,qBAAX,EAAT;AACA39B,YAAAA,OAAO,qCAAQA;AAASu2B,cAAAA,IAAI,EAAEr+B;cAA9B,CAjHG;AAAA,kBAqHC8H,OAAO,CAAC6rB,oBAAR,IAAgC,CAAC8C,WAAW,CAACzlB,eAA7C,IAAgE,CAACuxB,kBAAkB,CAAC9L,WAAD,CArHpF;AAAA;AAAA;AAAA;AAuHKiP,YAAAA,EAvHL,GAuHUpB,aAAa,CAAC7N,WAAW,CAAC6B,eAAb,EAA8BmC,MAA9B,EAAsC3yB,OAAtC,CAvHvB;AAwHK+1B,YAAAA,SAxHL,GAwHgBsG,WAAW,CAACx8B,UAAD,EAAa+9B,EAAb,EAAiBjP,WAAjB,CAxH3B;AAAA,8CAyHM;AACLA,cAAAA,WAAW,EAAXA,WADK;AAELoH,cAAAA,QAAQ,EAARA,SAFK;AAGLhC,cAAAA,QAAQ,EAAEA,QAAQ,CAAC/9B,MAAT,GAAkB+9B,QAAlB,GAA4B77B;AAHjC,aAzHN;AAAA;AAAA,8CAgIIklC,SAAS,CAACv9B,UAAD,EAAa8uB,WAAb,EAA0BgE,MAA1B,EAAkC3yB,OAAlC,CAhIb;AAAA;AAAA;AAAA;AAAA,8CAkII88B,cAAc,CAACj9B,UAAD,gBAAgBu8B,UAAhB,CAlIlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;ACpCA,IAAMyB,kBAAkB,GAAoB;AACjD,cAAY9F,QADqC;AAEjD,uCAAqCU,+BAFY;AAGjD,iCAA+BG,yBAHkB;AAIjD,mCAAiCc,2BAJgB;AAKjD,qCAAmCF,6BALc;AAMjD,0BAAwBpD,mBANyB;AAOjD,6BAA2BY,sBAPsB;AAQjD,oBAAkBC,aAR+B;AASjD,4BAA0BgB,qBATuB;AAUjD,iBAAe5B,UAVkC;AAWjD,kBAAgB+B,WAXiC;AAYjD,UAAQuB;AAZyC,CAA5C;;ACHA,IAAMmE,oBAAoB,GAAoB;AACnD,cAAY/F,QADuC;AAEnD,uBAAqBA,QAF8B;AAGnD,uCAAqCU,+BAHc;AAInD,iCAA+BG,yBAJoB;AAKnD,6BAA2B5B,sBALwB;AAMnD,qCAAmCwC,6BANgB;AAOnD,mCAAiCE,2BAPkB;AAQnD,yBAAuBxC,kBAR4B;AASnD,4BAA0Be,qBATyB;AAUnD,iBAAe5B;AAVoC,CAA9C;;ACAA,IAAM0H,gBAAgB,GAAoB;AAC/C,2BAAyB7E,mBADsB;AAE/C,oBAAkB/B,aAF6B;AAG/C,mCAAiCuC,2BAHc;AAI/C,iCAA+Bd,yBAJgB;AAK/C,iBAAevC,UALgC;AAM/C,+BAA6BK,uBANkB;AAO/C,6BAA2BG,qBAPoB;AAQ/C,0BAAwBT,mBARuB;AAS/C,UAAQuD;AATuC,CAA1C;;ACHA,IAAMqE,iBAAiB,GAAoB;AAChD,cAAYjG,QADoC;AAKhD,yCAAuCc,gCALS;AAMhD,uCAAqCJ,+BANW;AAOhD,6BAA2BzB,sBAPqB;AAQhD,oBAAkBC,aAR8B;AAShD,qCAAmCuC;AATa,CAA3C;;SCRSyE,qBACdC;MACAxS,2EAAuB;AAEvB,MAAIoQ,WAAJ;AAAA,MAAiB1M,OAAjB;AAAA,MAA0B7uB,eAAe,GAAG,IAA5C;AACA,UAAQmrB,IAAR;AACE,SAAK,UAAL;AACA,SAAK,QAAL;AACA,SAAK,eAAL;AACEoQ,MAAAA,WAAW,GAAGiC,gBAAd;AACAx9B,MAAAA,eAAe,GAAG,KAAlB;AACA;AACF,SAAK,iBAAL;AACA,SAAK,eAAL;AACEu7B,MAAAA,WAAW,GAAGgC,oBAAd;AACA1O,MAAAA,OAAO,GAAG,CACR,8BADQ,EAER,wCAFQ,CAAV;AAIA7uB,MAAAA,eAAe,GAAG,KAAlB;AACA;AACF,SAAK,eAAL;AACEu7B,MAAAA,WAAW,GAAGkC,iBAAd;AACAz9B,MAAAA,eAAe,GAAG,KAAlB;AACA6uB,MAAAA,OAAO,GAAG,CACR,gBADQ,CAAV;AAGA;AACF,SAAK,cAAL;AACA,SAAK,OAAL;AACA,SAAK,QAAL;AACE0M,MAAAA,WAAW,GAAG+B,kBAAd;AACA;AACF;AAEE/B,MAAAA,WAAW,GAAG+B,kBAAd;AACA;AA/BJ;AAiCA,SAAO;AAAEnS,IAAAA,IAAI,EAAJA,IAAF;AAAQoQ,IAAAA,WAAW,EAAXA,WAAR;AAAqB1M,IAAAA,OAAO,EAAPA,OAArB;AAA8B7uB,IAAAA,eAAe,EAAfA;AAA9B,GAAP;AACD;;ACAD,SAAS49B,gBAAT,CAA0Bn+B,OAA1B;AAEE,MAAMo+B,YAAY,GAAG,CACnB,MADmB,EAEnB,aAFmB,EAGnB,SAHmB,EAInB,iBAJmB,EAKnB,MALmB,EAMnB,sBANmB,EAOnB,uBAPmB,EAQnB,qCARmB,CAArB;AAUA,MAAMzL,MAAM,sBAAQ3yB,QAApB;AACAo+B,EAAAA,YAAY,CAAC3jC,OAAb,CAAqB,UAAA+3B,MAAM;AACzB,WAAOG,MAAM,CAACH,MAAD,CAAb;AACD,GAFD;AAGA,SAAOG,MAAP;AACD;AAED,SAAS0L,cAAT,CAAwBx+B,UAAxB,EAAoC4B,IAApC;AACE,MAAMzB,OAAN,GAAkByB,IAAlB,CAAMzB,OAAN;AACAA,EAAAA,OAAO,qCACFH,UAAU,CAACG,OAAX,CAAmBqnB,MACnBrnB,QAFL;AAIA,iBAKIA,OALJ;AAAA,MACE0rB,IADF,YACEA,IADF;AAAA,MAEEnrB,eAFF,YAEEA,eAFF;AAAA,MAGEu7B,WAHF,YAGEA,WAHF;AAAA,MAIE1M,OAJF,YAIEA,OAJF;AAOA,MAAMhtB,MAAM,GAAG8P,SAAS,CAACosB,OAAzB;AAGA5S,EAAAA,IAAI,GAAGA,IAAI,IAAI7rB,UAAU,CAACwnB,GAAX,CAAekX,OAAf,EAAR,IAAoC,SAA3C;AACA,MAAI7S,IAAJ,EAAU;AACR7rB,IAAAA,UAAU,CAACwnB,GAAX,CAAemX,OAAf,CAAuB9S,IAAvB;AACA,QAAM+S,QAAQ,GAAGR,oBAAoB,CAACp+B,UAAD,EAAa6rB,IAAb,CAArC,CAFQ;AAIRnrB,IAAAA,eAAe,GAAI,OAAOA,eAAP,KAA2B,WAA5B,GAA2CA,eAA3C,GAA6Dk+B,QAAQ,CAACl+B,eAAxF;AACAu7B,IAAAA,WAAW,GAAGA,WAAW,IAAI2C,QAAQ,CAAC3C,WAAtC;AACA1M,IAAAA,OAAO,GAAGA,OAAO,IAAIqP,QAAQ,CAACrP,OAA9B;AACD;AAED,2CACK3tB;AACHzB,IAAAA,OAAO,oCACFA;AACH0rB,MAAAA,IAAI,EAAJA;AACAnrB,MAAAA,eAAe,EAAfA;AACAu7B,MAAAA,WAAW,EAAXA;AACA1M,MAAAA,OAAO,EAAPA;;AAEFhtB,IAAAA,MAAM,EAANA;IATF;AAWD;SAEcs8B;;;;uEAAf,iBAAqC7+B,UAArC,EAAiD4B,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AACUzB,YAAAA,OADV,GACsByB,IADtB,CACUzB,OADV;AAGI8pB,YAAAA,WAHJ,GAWM9pB,OAXN,CAGI8pB,WAHJ,EAIIvpB,eAJJ,GAWMP,OAXN,CAIIO,eAJJ,EAKIqnB,OALJ,GAWM5nB,OAXN,CAKI4nB,OALJ,EAMInf,KANJ,GAWMzI,OAXN,CAMIyI,KANJ,EAOIE,MAPJ,GAWM3I,OAXN,CAOI2I,MAPJ,EAQIgjB,aARJ,GAWM3rB,OAXN,CAQI2rB,aARJ,EASIC,eATJ,GAWM5rB,OAXN,CASI4rB,eATJ,EAUIxjB,MAVJ,GAWMpI,OAXN,CAUIoI,MAVJ;AAcMsP,YAAAA,IAdN,GAcauU,uBAAuB,CAACpsB,UAAD,EAAa;AAAE4I,cAAAA,KAAK,EAALA,KAAF;AAASkjB,cAAAA,aAAa,EAAbA,aAAT;AAAwBC,cAAAA,eAAe,EAAfA;AAAxB,aAAb,CAdpC;AAAA,iBAgBM9B,WAhBN;AAAA;AAAA;AAAA;AAAA;AAAA,mBAiBwBqH,UAAU,CAACtxB,UAAD,EAAa;AAAEU,cAAAA,eAAe,EAAfA,eAAF;AAAmBqnB,cAAAA,OAAO,EAAPA,OAAnB;AAA4BkC,cAAAA,WAAW,EAAXA;AAA5B,aAAb,CAjBlC;AAAA;AAiBI6E,YAAAA,WAjBJ;AAAA;AAAA;AAAA;AAmBQhqB,YAAAA,iBAnBR,GAmB4B+S,IAAI,SAAJ,IAAAA,IAAI,WAAJ,SAAA,GAAAA,IAAI,CAAE/S,iBAnBlC;AAAA,gBAoBSA,iBApBT;AAAA;AAAA;AAAA;AAsBM9E,YAAAA,UAAU,CAACyX,kBAAX,CAA8BC,KAA9B;AAtBN;AAAA,mBAuBqCsV,QAAQ,CAAChtB,UAAD,EAAa;AAClDU,cAAAA,eAAe,EAAfA,eADkD;AAElDkI,cAAAA,KAAK,EAALA,KAFkD;AAGlDE,cAAAA,MAAM,EAANA,MAHkD;AAIlDijB,cAAAA,eAAe,EAAfA,eAJkD;AAKlDD,cAAAA,aAAa,EAAbA,aALkD;AAMlDvjB,cAAAA,MAAM,EAANA;AANkD,aAAb,CAvB7C;AAAA;AAuBYu2B,YAAAA,gBAvBZ;AA+BMh6B,YAAAA,iBAAiB,GAAGg6B,gBAAgB,CAACh6B,iBAArC;AACA+S,YAAAA,IAAI,GAAGinB,gBAAgB,CAACjnB,IAAxB;AAhCN;AAAA;AAAA,mBAoCwByZ,UAAU,CAACtxB,UAAD,EAAa;AAAEU,cAAAA,eAAe,EAAfA,eAAF;AAAmBqnB,cAAAA,OAAO,EAAPA,OAAnB;AAA4BjjB,cAAAA,iBAAiB,EAAjBA;AAA5B,aAAb,CApClC;AAAA;AAoCIgqB,YAAAA,WApCJ;AAAA;AAAA,+EAsCcltB;AAAMktB,cAAAA,WAAW,EAAXA;AAAajX,cAAAA,IAAI,EAAJA;cAtCjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;SAyCeknB;;;;sEAAf,kBAAoC/+B,UAApC,EAAgD4B,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAEIktB,YAAAA,WAFJ,GAKMltB,IALN,CAEIktB,WAFJ,EAGI3uB,OAHJ,GAKMyB,IALN,CAGIzB,OAHJ,EAII2yB,MAJJ,2BAKMlxB,IALN;AAQIo9B,YAAAA,aARJ,GAeM7+B,OAfN,CAQI6+B,aARJ,EASI/C,WATJ,GAeM97B,OAfN,CASI87B,WATJ,EAUI1M,OAVJ,GAeMpvB,OAfN,CAUIovB,OAVJ,EAWI1D,IAXJ,GAeM1rB,OAfN,CAWI0rB,IAXJ,EAYI6K,IAZJ,GAeMv2B,OAfN,CAYIu2B,IAZJ,EAaIkD,mCAbJ,GAeMz5B,OAfN,CAaIy5B,mCAbJ,EAcI5N,oBAdJ,GAeM7rB,OAfN,CAcI6rB,oBAdJ;AAiBQiT,YAAAA,eAjBR,GAiB2BD,aAAa,KAAK,KAAlB,KAA4B/C,WAAW,IAAI1M,OAAf,IAA0BmH,IAAtD,CAjB3B;AAAA,gBAkBOuI,eAlBP;AAAA;AAAA;AAAA;AAAA,8CAmBWr9B,IAnBX;AAAA;AAsBEkxB,YAAAA,MAAM,qCACDA;AACH7I,cAAAA,WAAW,EAAE6E,WAAY,CAAC7G,WAAb,CAAyBgC;cAFxC,CAtBF;AAAA;AAAA,mBAgCYsT,SAAS,CACjBv9B,UADiB,EAEjB8uB,WAFiB,EAGjBgE,MAHiB,EAIjB;AACEmJ,cAAAA,WAAW,EAAXA,WADF;AAEE1M,cAAAA,OAAO,EAAPA,OAFF;AAGE1D,cAAAA,IAAI,EAAJA,IAHF;AAIE6K,cAAAA,IAAI,EAAJA,IAJF;AAKEkD,cAAAA,mCAAmC,EAAnCA,mCALF;AAME5N,cAAAA,oBAAoB,EAApBA;AANF,aAJiB,CAhCrB;AAAA;AAAA;AA6BiBkT,YAAAA,0BA7BjB,oBA6BIpQ,WA7BJ;AA8BIoH,YAAAA,QA9BJ,oBA8BIA,QA9BJ;AA+BI0H,YAAAA,QA/BJ,oBA+BIA,QA/BJ;AA6CE9O,YAAAA,WAAW,GAAGoQ,0BAAd;AA7CF,gFA+Cct9B;AAAMktB,cAAAA,WAAW,EAAXA;AAAaoH,cAAAA,QAAQ,EAARA;AAAU0H,cAAAA,QAAQ,EAARA;cA/C3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;SAkDe7mB;;;;2DAAf,kBAAyB/W,UAAzB,EAAqC4B,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AACQiW,YAAAA,IADR,GAC8BjW,IAD9B,CACQiW,IADR,EACciX,WADd,GAC8BltB,IAD9B,CACcktB,WADd;AAEUzlB,YAAAA,eAFV,GAE8BylB,WAF9B,CAEUzlB,eAFV;AAIIvB,YAAAA,QAJJ,GAUM+P,IAVN,CAII/P,QAJJ,EAKIwB,YALJ,GAUMuO,IAVN,CAKIvO,YALJ,EAMIgF,eANJ,GAUMuJ,IAVN,CAMIvJ,eANJ,EAOI5F,WAPJ,GAUMmP,IAVN,CAOInP,WAPJ,EAQIiB,IARJ,GAUMkO,IAVN,CAQIlO,IARJ,EASIb,MATJ,GAUM+O,IAVN,CASI/O,MATJ;AAAA;AAAA,mBAW8B9I,UAAU,CAAC2H,KAAX,CAAiBkM,qBAAjB,CAAuC;AACjExK,cAAAA,eAAe,EAAfA,eADiE;AAEjEvB,cAAAA,QAAQ,EAARA,QAFiE;AAGjEwB,cAAAA,YAAY,EAAZA,YAHiE;AAIjEgF,cAAAA,eAAe,EAAfA,eAJiE;AAKjE5F,cAAAA,WAAW,EAAXA,WALiE;AAMjEI,cAAAA,MAAM,EAANA;AANiE,aAAvC,EAOzBa,IAPyB,CAX9B;AAAA;AAWQuM,YAAAA,aAXR;AAAA,8CAmBSA,aAAa,CAACxB,MAnBvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;SAsBeyqB;;;;8DAAf,kBAA4Bn/B,UAA5B,EAAwC4B,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAEIzB,YAAAA,OAFJ,GAMMyB,IANN,CAEIzB,OAFJ,EAGI2uB,WAHJ,GAMMltB,IANN,CAGIktB,WAHJ,EAII8O,QAJJ,GAMMh8B,IANN,CAIIg8B,QAJJ,EAKIr7B,MALJ,GAMMX,IANN,CAKIW,MALJ;AAOUsR,YAAAA,qBAPV,GAOoC1T,OAPpC,CAOU0T,qBAPV;AAQMurB,YAAAA,kBARN,GAQ2B,KAR3B;AASMC,YAAAA,sBATN,GAS+B,KAT/B;AAUMjW,YAAAA,kBAVN,GAU2B,IAV3B;AAkBE,gBAAI0F,WAAJ,EAAiB;AACfsQ,cAAAA,kBAAkB,GAAG,CAAC,EAAEtQ,WAAW,CAAC4B,iBAAZ,IAAiC5B,WAAW,CAACC,MAA/C,CAAtB;AACAuQ,cAAAA,eAAe,GAAG5D,kBAAkB,CAAC5M,WAAD,CAApC;AACAyQ,cAAAA,cAAc,GAAGxD,iBAAiB,CAAC/7B,UAAD,EAAa8uB,WAAb,EAA0B3uB,OAAO,CAAC6rB,oBAAlC,CAAlC;AACAkI,cAAAA,QAAQ,GAAGkH,uBAAuB,CAACtM,WAAD,CAAlC;AACAoO,cAAAA,QAAQ,GAAGtC,kBAAkB,CAAC9L,WAAD,CAA7B;AACD;AAxBH,iBA0BMoO,QA1BN;AAAA;AAAA;AAAA;AA2BI36B,YAAAA,MAAM,GAAG8P,SAAS,CAACmtB,QAAnB,CA3BJ;AAiCUC,YAAAA,UAjCV,GAiCuB,aAAY3Q,WAAY,CAACS,OAAzB,EAAkCp5B,MAAlC,GAA2C,CAjClE;AAkCUupC,YAAAA,SAlCV,GAkCsB,CAAC,CAAC,sBAAAxL,QAAQ,MAAR,CAAAA,QAAQ,EAAM,UAAAr/B,GAAG;AAAA,qBAAIA,GAAG,CAAC8qC,KAAJ,KAAc,OAAlB;AAAA,aAAT,CAlChC;AAmCUC,YAAAA,iBAnCV,GAmC8B,CAACH,UAAD,IAAe,CAACC,SAAhB,IAA6B5Q,WAAY,CAAC4B,iBAAb,KAAmC,IAnC9F;AAoCI,gBAAIkP,iBAAJ,EAAuB;AACrBP,cAAAA,sBAAsB,GAAG,IAAzB;AACD,aAFD,MAEO;AAELD,cAAAA,kBAAkB,GAAGA,kBAAkB,IAAIK,UAA3C;AACD,aAzCL;AA2CIrW,YAAAA,kBAAkB,GAAG,KAArB;AA3CJ;AAAA;AAAA;AAAA,iBA4CawU,QA5Cb;AAAA;AAAA;AAAA;AA6CIr7B,YAAAA,MAAM,GAAG8P,SAAS,CAACwtB,QAAnB;AACAR,YAAAA,sBAAsB,GAAG,IAAzB;AA9CJ;AAAA;AAAA;AAAA,kBA+CavQ,WAAW,SAAX,IAAAA,WAAW,WAAX,SAAA,GAAAA,WAAW,CAAEzlB,eA/C1B;AAAA;AAAA;AAAA;AAgDIA,YAAAA,eAAe,GAAGylB,WAAW,CAACzlB,eAA9B;AAhDJ,kBAiDQwK,qBAAqB,KAAK,KAjDlC;AAAA;AAAA;AAAA;AAkDMtR,YAAAA,MAAM,GAAG8P,SAAS,CAACytB,OAAnB;AACAT,YAAAA,sBAAsB,GAAG,KAAzB;AAnDN;AAAA;AAAA;AAAA;AAAA,mBAqDqBtoB,SAAS,CAAC/W,UAAD,EAAa4B,IAAb,CArD9B;AAAA;AAqDM8S,YAAAA,MArDN;AAsDMnS,YAAAA,MAAM,GAAG8P,SAAS,CAACytB,OAAnB;AACAT,YAAAA,sBAAsB,GAAG,IAAzB;AAvDN;AAAA,gFA2DOz9B;AACHW,cAAAA,MAAM,EAANA;AACA8G,cAAAA,eAAe,EAAfA;AACAqL,cAAAA,MAAM,EAANA;AACA0qB,cAAAA,kBAAkB,EAAlBA;AACAC,cAAAA,sBAAsB,EAAtBA;AACAjW,cAAAA,kBAAkB,EAAlBA;AACAkW,cAAAA,eAAe,EAAfA;AACAC,cAAAA,cAAc,EAAdA;AACArL,cAAAA,QAAQ,EAARA;AACAgJ,cAAAA,QAAQ,EAARA;cArEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAyEA,SAAS6C,WAAT,CAAqB5rC,GAArB,EAA0ByN,IAA1B;AACE,MAAM5M,KAAN,GAAgD4M,IAAhD,CAAM5M,KAAN;AAAA,MAAauN,MAAb,GAAgDX,IAAhD,CAAaW,MAAb;AAAA,MAAqB88B,sBAArB,GAAgDz9B,IAAhD,CAAqBy9B,sBAArB;AAGA,MAAIrX,aAAa,CAAC7zB,GAAD,CAAjB,EAAwB;AACtBa,IAAAA,KAAK,GAAGb,GAAR;AACAoO,IAAAA,MAAM,GAAG8P,SAAS,CAAC2tB,OAAnB;AACAX,IAAAA,sBAAsB,GAAG,IAAzB;AACD,GAJD,MAIO;AAEL,UAAMlrC,GAAN;AACD;AAED,2CAAYyN;AAAM5M,IAAAA,KAAK,EAALA;AAAOuN,IAAAA,MAAM,EAANA;AAAQ88B,IAAAA,sBAAsB,EAAtBA;IAAjC;AACD;SAEqB/a,GAAtB;AAAA;AAAA;;qDAAO,kBACLtkB,UADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAELG,YAAAA,OAFK,8DAEiB,EAFjB;AAIDyB,YAAAA,IAJC,GAIe;AAClBzB,cAAAA,OAAO,EAAPA,OADkB;AAElB2yB,cAAAA,MAAM,EAAEwL,gBAAgB,CAACn+B,OAAD;AAFN,aAJf;AASLyB,YAAAA,IAAI,GAAG48B,cAAc,CAACx+B,UAAD,EAAa4B,IAAb,CAArB;AATK;AAAA;AAAA,mBAWUi9B,qBAAqB,CAAC7+B,UAAD,EAAa4B,IAAb,CAX/B;AAAA;AAWHA,YAAAA,IAXG;AAAA;AAAA,mBAYUm9B,oBAAoB,CAAC/+B,UAAD,EAAa4B,IAAb,CAZ9B;AAAA;AAYHA,YAAAA,IAZG;AAAA;AAAA;AAAA;AAAA;AAAA;AAcHA,YAAAA,IAAI,GAAGm+B,WAAW,eAAMn+B,IAAN,CAAlB;AAdG;AAAA;AAAA,mBAgBQu9B,YAAY,CAACn/B,UAAD,EAAa4B,IAAb,CAhBpB;AAAA;AAgBLA,YAAAA,IAhBK;AAAA,oBAgCDA,IAhCC,EAmBHktB,WAnBG,SAmBHA,WAnBG,EAoBHjX,IApBG,SAoBHA,IApBG,EAqBHunB,kBArBG,SAqBHA,kBArBG,EAsBHC,sBAtBG,SAsBHA,sBAtBG,EAuBHjW,kBAvBG,SAuBHA,kBAvBG,EAwBH7mB,MAxBG,SAwBHA,MAxBG,EAyBH+8B,eAzBG,SAyBHA,eAzBG,EA0BHC,cA1BG,SA0BHA,cA1BG,EA2BH7qB,MA3BG,SA2BHA,MA3BG,EA4BHwhB,QA5BG,SA4BHA,QA5BG,EA6BHhC,QA7BG,SA6BHA,QA7BG,EA8BHl/B,KA9BG,SA8BHA,KA9BG,EA+BHqU,eA/BG,SA+BHA,eA/BG;AAkCL,gBAAIg2B,sBAAJ,EAA4B;AAC1Br/B,cAAAA,UAAU,CAACyX,kBAAX,CAA8BC,KAA9B,CAAoC;AAAE0R,gBAAAA,kBAAkB,EAAlBA;AAAF,eAApC;AACD,aAFD,MAGK;AAEHoD,cAAAA,mBAAmB,CAACxsB,UAAD,qBAAkB6X,KAAlB,CAAnB;AAEA,kBAAIunB,kBAAJ,EAAwB;AAEDpV,gBAAAA,cAFC,GAEqC8E,WAFrC,CAEd7G,WAFc,EAEeyI,kBAFf,GAEqC5B,WAFrC,CAEe4B,iBAFf;AAGtB1wB,gBAAAA,UAAU,CAACyX,kBAAX,CAA8BwoB,eAA9B,CAA8C;AAC5CjW,kBAAAA,cAAc,EAAdA,cAD4C;AAE5C0G,kBAAAA,iBAAiB,EAAjBA,kBAF4C;AAG5CzG,kBAAAA,WAAW,EAAE,MAAA6E,WAAY,CAACU,OAAb,UAAA,iBAAA,SAAA,MAAsBvF,WAHS;AAI5CnlB,kBAAAA,iBAAiB,EAAE+S,IAAI,SAAJ,IAAAA,IAAI,WAAJ,SAAA,GAAAA,IAAI,CAAE/S;AAJmB,iBAA9C;AAMD;AACF,aAnDI;AAAA,mBAsD0FgqB,WAAW,IAAI,EAtDzG,EAsDGS,OAtDH,QAsDGA,OAtDH,EAsDYC,OAtDZ,QAsDYA,OAtDZ,EAsDqBmB,eAtDrB,QAsDqBA,eAtDrB,EAsDsCC,OAtDtC,QAsDsCA,OAtDtC,EAsD+C3I,WAtD/C,QAsD+CA,WAtD/C,EAsD4DyI,iBAtD5D,QAsD4DA,iBAtD5D,EAsD+E3B,MAtD/E,QAsD+EA,MAtD/E;AAAA;AAwDHxsB,cAAAA,MAAM,EAAEA;eACJsV,IAAI,IAAI;AAAEA,cAAAA,IAAI,EAAJA;AAAF,gBACRynB,eAAe,IAAI;AAAEA,cAAAA,eAAe,EAAfA;AAAF,gBACnBC,cAAc,IAAI;AAAEA,cAAAA,cAAc,EAAdA;AAAF,gBAClB7qB,MAAM,IAAI;AAAEA,cAAAA,MAAM,EAANA;AAAF,gBACVwhB,QAAQ,IAAI;AAAEA,cAAAA,QAAQ,EAARA;AAAF,gBACZhC,QAAQ,IAAIA,QAAQ,CAAC/9B,MAArB,IAA+B;AAAE+9B,cAAAA,QAAQ,EAARA;AAAF,gBAC/Bl/B,KAAK,IAAI;AAAEA,cAAAA,KAAK,EAALA;AAAF,gBACT+5B,MAAM,IAAI;AAAEA,cAAAA,MAAM,EAANA;AAAF;AACd1lB,cAAAA,eAAe,EAAfA;AAGAkmB,cAAAA,OAAO,EAAEA;AACTC,cAAAA,OAAO,EAAEA;AACTmB,cAAAA,eAAe,EAAEA;AACjBC,cAAAA,OAAO,EAAEA;AACT3I,cAAAA,WAAW,EAAEA;AACbyI,cAAAA,iBAAiB,EAAjBA;cAzEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;SCrSewP,YAAtB;AAAA;AAAA;;8DAAO,iBACLlgC,UADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC6BG,YAAAA,OAD7B,2DAC8D,EAD9D;AAGL,gBAAIA,OAAO,CAAC+0B,QAAR,IAAoB,CAAC/0B,OAAO,CAACkyB,aAAjC,EAAgD;AAC9ClyB,cAAAA,OAAO,CAACkyB,aAAR,GAAwB/f,gBAAgB,CAACujB,aAAzC;AACD;AALI,6CAMEvR,GAAG,CAACtkB,UAAD,oCACLG;AACH0rB,cAAAA,IAAI,EAAE;cAFE,CANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;SCLe7mB,MAAtB;AAAA;AAAA;;wDAAO,iBAAuBhF,UAAvB,EAAyDG,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AACC0X,YAAAA,IADD,GACQ7X,UAAU,CAACyX,kBAAX,CAA8BwB,IAA9B,EADR;AAEC2lB,YAAAA,QAFD,GAEYR,oBAAoB,CAACp+B,UAAD,EAAa6X,IAAI,CAACgU,IAAlB,CAFhC;AAAA,6CAGEvH,GAAG,CAACtkB,UAAD,mDACLG,UACAy+B;AACHrP,cAAAA,OAAO,EAAE,CAAC,QAAD;cAHD,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;ICOM4Q,wBAAb;AAAA;AAAA;AAIE,oCAAYv3B,KAAZ,EAA2BgsB,GAA3B;;;AACE,sFAAuDA,GAAvD;AACA,UAAKtgC,IAAL,GAAY,0BAAZ;AACA,UAAKsU,KAAL,GAAaA,KAAb;AACA,UAAKgsB,GAAL,GAAWA,GAAX;;AACD;AATH;AAAA,EAA8C9gC,WAA9C;SAYgBssC,2BAA2BprC;AACzC,SAAQA,KAAK,CAACV,IAAN,KAAe,0BAAvB;AACD;SAGe+rC,sBAAuBC;AACrC,SAAO,UAAUzjC,IAAV,CAAeyjC,OAAf,KAA2B,YAAYzjC,IAAZ,CAAiByjC,OAAjB,CAAlC;AACD;SAGeC,yBAAyBD;AACvC,SAAOxvB,iBAAiB,CAACwvB,OAAD,CAAxB;AACD;SAEqBE,yBAAtB;AAAA;AAAA;;2EAAO,iBAAyCxgC,UAAzC,EAA2E2P,MAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACD0wB,qBAAqB,CAAC1wB,MAAD,CADpB;AAAA;AAAA;AAAA;AAAA,oCAEoB4wB,wBAAwB,CAAC5wB,MAAD,CAF5C,EAEK/G,KAFL,yBAEKA,KAFL,EAEYgsB,GAFZ,yBAEYA,GAFZ;AAAA,iBAGC50B,UAAU,CAACwnB,GAAX,CAAeiZ,UAAf,CAA0B;AAAE73B,cAAAA,KAAK,EAALA;AAAF,aAA1B,CAHD;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKY5I,UAAU,CAACwnB,GAAX,CAAeoJ,OAAf,CAAuB;AAAEhoB,cAAAA,KAAK,EAALA,KAAF;AAASgsB,cAAAA,GAAG,EAAHA;AAAT,aAAvB,CALZ;AAAA;AAAA;AAAA;AAAA,kBAQK,IAAIuL,wBAAJ,CAA6Bv3B,KAA7B,EAAoCgsB,GAApC,CARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;SC3BS6L,WAAWzgC;MAAkCG,8EAA0B;AACrF,MAAM0X,IAAI,GAAGuU,uBAAuB,CAACpsB,UAAD,EAAaG,OAAb,CAApC;AACA,SAAO,CAAC,EAAE0X,IAAI,IAAI1X,OAAO,CAAC8pB,WAAlB,CAAR;AACD;SAEqB2G,OAAtB;AAAA;AAAA;;yDAAO,iBACL5wB,UADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAELG,YAAAA,OAFK,2DAEqB,EAFrB;AAAA,gBAKAsgC,UAAU,CAACzgC,UAAD,EAAaG,OAAb,CALV;AAAA;AAAA;AAAA;AAAA,kBAMG,IAAIvL,YAAJ,CAAiB,0DAAjB,CANH;AAAA;AASCi3B,YAAAA,IATD,GASiB1rB,OATjB,CASC0rB,IATD,EASOjjB,KATP,GASiBzI,OATjB,CASOyI,KATP;AAUL,gBAAI,CAACijB,IAAL,EAAW;AACHhU,cAAAA,IADG,GACIuU,uBAAuB,CAACpsB,UAAD,EAAa;AAAE4I,gBAAAA,KAAK,EAALA;AAAF,eAAb,CAD3B;AAETijB,cAAAA,IAAI,GAAGhU,IAAI,SAAJ,IAAAA,IAAI,WAAJ,SAAA,GAAAA,IAAI,CAAEgU,IAAb;AACD;AAbI,6CAeEvH,GAAG,CAACtkB,UAAD,oCACLG;AACH0rB,cAAAA,IAAI,EAAJA;cAFQ,CAfL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;SCLe/lB,IAAtB;AAAA;AAAA;;sDAAO,kBAAoB9F,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsDG,YAAAA,OAAtD,8DAAgF,EAAhF;AAAA;AAAA,mBACmBywB,OAAO,CAAC5wB,UAAD,EAAa;AAC1Cy2B,cAAAA,YAAY,EAAE;AAD4B,aAAb,CAD1B;AAAA;AACD7O,YAAAA,WADC;AAKC/P,YAAAA,IALD,GAKQuU,uBAAuB,CAACpsB,UAAD,CAL/B;AAMD0gC,YAAAA,4BANC,GAM8B,MAAA7oB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,SAAA,GAAAA,IAAI,CAAE2Y,YAAN,UAAA,iBAAA,SAAA,sCAAyB,UAAApB,WAAW;AAAA,qBAAI,0BAAAA,WAAW,MAAX,CAAAA,WAAW,EAAU,MAAV,CAAf;AAAA,cANlE;AAOL,gBAAI,EAACsR,4BAA4B,SAA5B,IAAAA,4BAA4B,WAA5B,SAAA,GAAAA,4BAA4B,CAAEvqC,MAA/B,CAAJ,EAA2C;AACzCsC,cAAAA,IAAI,CAAC,iEAAD,CAAJ;AACD;AATI,iBAWD,kBAAiB0H,OAAO,CAAC8G,OAAzB,CAXC;AAAA;AAAA;AAAA;AAAA,8CAYI,aAAY,UAAUhN,OAAV,EAAmBqJ,MAAnB;AACjBpJ,cAAAA,UAAU,8CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACT,4BAAI;AACI+M,0BAAAA,OADJ,GACc,MAAA,MAAA2gB,WAAW,CAACsO,QAAZ,UAAA,iBAAA,SAAA,MAAsBpwB,IAAtB,UAAA,iBAAA,SAAA,MAA4BmB,OAD1C;AAEF,8BAAIA,OAAJ,EAAa;AACXhN,4BAAAA,OAAO,CAAC6L,IAAI,CAAC9F,UAAD,EAAa;AACvBiH,8BAAAA,OAAO,EAAPA;AADuB,6BAAb,CAAL,CAAP;AAGD,2BAJD,MAIO;AACLhN,4BAAAA,OAAO,CAAC2tB,WAAD,CAAP;AACD;AACF,yBATD,CASE,OAAOzzB,GAAP,EAAY;AACZmP,0BAAAA,MAAM,CAACnP,GAAD,CAAN;AACD;AAZQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAD,IAaPgM,OAAO,CAAC8G,OAbD,CAAV;AAcD,aAfM,CAZJ;AAAA;AAAA,8CA8BE2gB,WA9BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;SCNe+Y,gBAAtB;AAAA;AAAA;;kEAAO,iBACL3gC,UADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAELG,YAAAA,OAFK,2DAEmB,EAFnB;AAKLH,YAAAA,UAAU,CAACyX,kBAAX,CAA8BC,KAA9B;AALK,6CAOE4M,GAAG,CAACtkB,UAAD;AACR6T,cAAAA,qBAAqB,EAAE;eACpB1T,QAFK,CAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;SCQeygC,QAAtB;AAAA;AAAA;;0DAAO,iBACL5gC,UADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC6BG,YAAAA,OAD7B,2DAC4D,EAD5D;AAAA,gBAKA+rB,yBAAyB,CAAClsB,UAAD,CALzB;AAAA;AAAA;AAAA;AAAA;AAAA,mBAM+C2gC,gBAAgB,CAAC3gC,UAAD,oCAC7DG;AACH0rB,cAAAA,IAAI,EAAE;AACNmT,cAAAA,aAAa,EAAE;cAHiD,CAN/D;AAAA;AAAA;AAMKM,YAAAA,eANL,yBAMKA,eANL;AAMsBC,YAAAA,cANtB,yBAMsBA,cANtB;AAAA,kBAWC,CAACp/B,OAAO,CAAC4rB,eAAT,IAA4BuT,eAA5B,IAA+C,CAAC,0BAAAA,eAAe,MAAf,CAAAA,eAAe,EAAU/sB,UAAU,CAACqpB,YAArB,CAXhE;AAAA;AAAA;AAAA;AAYK5mC,YAAAA,KAZL,GAYa,IAAIJ,YAAJ,CAAiB,wEAAjB,CAZb;AAAA,kBAaKI,KAbL;AAAA;AAAA,kBAgBCmL,OAAO,CAAC4rB,eAAR,KAA2BwT,cAAc,SAAd,IAAAA,cAAc,WAAd,SAAA,GAAAA,cAAc,CAAExc,IAAhB,CAAqB;AAAA,kBAAGzuB,IAAH,QAAGA,IAAH;AAAA,qBAAcA,IAAI,KAAK,UAAvB;AAAA,aAArB,CAA3B,CAhBD;AAAA;AAAA;AAAA;AAiBKU,YAAAA,MAjBL,GAiBa,IAAIJ,YAAJ,CAAiB,2EAAjB,CAjBb;AAAA,kBAkBKI,MAlBL;AAAA;AAAA,6CAuBEsvB,GAAG,CAACtkB,UAAD,oCACLG;AACH0rB,cAAAA,IAAI,EAAE;cAFE,CAvBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;SCHegV,eAAtB;AAAA;AAAA;;iEAAO,iBACL7gC,UADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC6BG,YAAAA,OAD7B,2DACgE,EADhE;AAGCy+B,YAAAA,QAHD,GAGYR,oBAAoB,CAACp+B,UAAD,EAAa,iBAAb,CAHhC;AAAA,6CAIEskB,GAAG,CACRtkB,UADQ,oCAGHG,UACAy+B,SAJG,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;SCJekC,6BAAtB;AAAA;AAAA;;+EAAO,iBACL9gC,UADK,EAELpD,GAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAICib,YAAAA,IAJD,GAIQ7X,UAAU,CAACyX,kBAAX,CAA8BwB,IAA9B,EAJR;AAAA,gBAKApB,IALA;AAAA;AAAA;AAAA;AAAA,kBAMG,IAAIjjB,YAAJ,CAAiB,0CAAjB,CANH;AAAA;AAUH0U,YAAAA,YAVG,GAYDuO,IAZC,CAUHvO,YAVG,EAWIy3B,UAXJ,GAYDlpB,IAZC,CAWHjP,KAXG;AAAA,mBAiBD,UAAQhM,GAAR,CAjBC,EAcHhB,YAdG,QAcHA,YAdG;AAkBCgN,YAAAA,KAlBD,GAkBShN,YAAY,CAAC6G,GAAb,CAAiB,OAAjB,CAlBT;AAmBC4G,YAAAA,eAnBD,GAmBmBzN,YAAY,CAAC6G,GAAb,CAAiB,kBAAjB,CAnBnB;AAsBCzN,YAAAA,KAtBD,GAsBS4G,YAAY,CAAC6G,GAAb,CAAiB,OAAjB,CAtBT;AAAA,iBAuBDzN,KAvBC;AAAA;AAAA;AAAA;AAAA,kBAyBG,IAAIF,UAAJ,CAAeE,KAAf,EAAsB4G,YAAY,CAAC6G,GAAb,CAAiB,mBAAjB,CAAtB,CAzBH;AAAA;AAAA,kBA2BDmG,KAAK,KAAKm4B,UA3BT;AAAA;AAAA;AAAA;AAAA,kBA4BG,IAAInsC,YAAJ,CAAiB,6DAAjB,CA5BH;AAAA;AAAA,gBA8BAyU,eA9BA;AAAA;AAAA;AAAA;AAAA,kBA+BG,IAAIzU,YAAJ,CAAiB,+CAAjB,CA/BH;AAAA;AAAA;AAAA,mBAmCoBoL,UAAU,CAAC2H,KAAX,CAAiBkM,qBAAjB,CAAuC;AAAExK,cAAAA,eAAe,EAAfA,eAAF;AAAmBC,cAAAA,YAAY,EAAZA;AAAnB,aAAvC,CAnCpB;AAAA;AAAA;AAmCGoL,YAAAA,MAnCH,yBAmCGA,MAnCH;AAoCL1U,YAAAA,UAAU,CAACmW,YAAX,CAAwB6K,SAAxB,CAAkCtM,MAAlC;AApCK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;SCOessB,aAAtB;AAAA;AAAA;;+DAAO,iBACLhhC,UADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC6BG,YAAAA,OAD7B,2DAC6D,EAD7D;AAGLA,YAAAA,OAAO,CAAC0rB,IAAR,GAAe,eAAf,CAHK;AAAA,gBAMAK,yBAAyB,CAAClsB,UAAD,CANzB;AAAA;AAAA;AAAA;AAAA;AAAA,mBAO+B2gC,gBAAgB,CAAC3gC,UAAD,oCAAkBG;AAAS6+B,cAAAA,aAAa,EAAE;cAA1C,CAP/C;AAAA;AAAA;AAOKM,YAAAA,eAPL,yBAOKA,eAPL;AAAA,kBAQCA,eAAe,IAAI,CAAC,0BAAAA,eAAe,MAAf,CAAAA,eAAe,EAAU/sB,UAAU,CAACupB,cAArB,CARpC;AAAA;AAAA;AAAA;AAAA,kBASK,IAAIlnC,YAAJ,CACJ,uFADI,CATL;AAAA;AAAA,6CAeE0vB,GAAG,CAACtkB,UAAD,qBAAkBG,QAAlB,CAfL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;ICRM8gC,aAAb;AAGE;;AAEE,SAAKC,YAAL,GAAoB,wBAAiB,OAAjB,EAApB;AACD;AANH;AAAA;AAAA,WAQE,wBAAeC,GAAf;AACE,WAAKD,YAAL,CAAkB7jC,IAAlB,CAAuB8jC,GAAvB;AACD;AAVH;AAAA;AAAA,WAYE;AACE,WAAKC,uBAAL;AACA,aAAO;AAAE,sCAA8B,KAAKF,YAAL,CAAkB3jC,IAAlB,CAAuB,GAAvB;AAAhC,OAAP;AACD;AAfH;AAAA;AAAA,WAiBE;AACE,aAAO,OAAP;AACD;AAnBH;AAAA;AAAA,WAqBU;AACN,UAAI2P,SAAS,MAAM,CAACm0B,OAAhB,IAA2B,CAACA,OAAO,CAACC,QAAxC,EAAkD;AAChD;AACD;AACD,UAAcvZ,OAAd,GAA0BsZ,OAAO,CAACC,QAAlC,CAAQC,IAAR;AACA,WAAKL,YAAL,CAAkB7jC,IAAlB,kBAAiC0qB,OAAjC;AACD;AA3BH;AAAA;AAAA;;ICkIMyZ;AAsBJ,oBAAYhnC,IAAZ;;;AAXA,iBAAA,GAAwB2V,QAAxB;AAYE,QAAMhQ,OAAO,GAAG,KAAKA,OAAL,GAAesrB,YAAY,CAACjxB,IAAD,CAA3C;AAEA,SAAKsG,cAAL,GAAsB,IAAIqmB,cAAJ,CAAmBhnB,OAAO,CAACW,cAA3B,EAA4CX,OAAO,CAACa,OAApD,EAA8Db,OAAO,CAACQ,WAAtE,CAAtB;AACA,SAAK8W,kBAAL,GAA0B,IAAIoR,kBAAJ,CAAuB,eAAc;AAC7D/nB,MAAAA,cAAc,EAAE,KAAKA;AADwC,KAAd,EAE9CX,OAAO,CAACsX,kBAFsC,CAAvB,CAA1B;AAGA,SAAKhW,cAAL,GAAsB,IAAIw/B,aAAJ,EAAtB;AAEA,SAAK99B,EAAL,GAAU;AACRZ,MAAAA,MAAM,EAAEU,iBAAiB,CAAC9I,IAAlB,CAAuB,IAAvB,EAA6B,IAA7B,CADA;AAERsnC,MAAAA,MAAM,EAAEv+B,iBAAiB,CAAC/I,IAAlB,CAAuB,IAAvB,EAA6B,IAA7B,CAFA;AAGRiJ,MAAAA,MAAM,EAAE,eAAcM,iBAAiB,CAACvJ,IAAlB,CAAuB,IAAvB,EAA6B,IAA7B,CAAd,EAAkD;AACxDkJ,QAAAA,IAAI,EAAE,cAAC/O,IAAD;AAEJ,cAAMsM,OAAO,GAAGT,OAAO,CAACQ,WAAR,CAAqBC,OAArC;AACA,iBAAOA,OAAO,CAAC6B,GAAR,CAAYnO,IAAZ,CAAP;AACD;AALuD,OAAlD,CAHA;AAURg9B,MAAAA,UAAU,EAAE9tB,eAAe,CAACrJ,IAAhB,CAAqB,IAArB,EAA2B,IAA3B,CAVJ;AAWRoJ,MAAAA,iBAAiB,EAAE,2BAAC1B,GAAD;AACjB,eAAO,IAAIgD,eAAJ,CAAoB,KAApB,EAA0BhD,GAA1B,CAAP;AACD,OAbO;AAcR8B,MAAAA,iBAAiB,EAAE,6BAAC/G,GAAD,EAAcpC,IAAd,EAAkC2F,OAAlC;AACjB,eAAOwD,iBAAiB,CAAC,KAAD,EAAO/G,GAAP,EAAYpC,IAAZ,EAAkB2F,OAAlB,CAAxB;AACD;AAhBO,KAAV;AAmBA,SAAKkO,IAAL,GAAY;AACVxO,MAAAA,6BAA6B,EAAE4Q,IAAI,CAAC5Q,6BAD1B;AAEV6G,MAAAA,gBAAgB,EAAE+J,IAAI,CAAC/J,gBAFb;AAGVG,MAAAA,gBAAgB,EAAE4J,IAAI,CAAC5J;AAHb,KAAZ;AAOA,mBAAc,KAAK1G,OAAL,CAAaQ,WAA3B,EAAwC;AACtCka,MAAAA,cAAc,EAAE,KAAK/Z,cAAL,CAAoB8oB,oBAApB,CAAyCzvB,IAAzC,CAA8C,KAAK2G,cAAnD,CADsB;AAEtCC,MAAAA,YAAY,EAAE,KAAKD,cAAL,CAAoBC,YAApB,CAAiC5G,IAAjC,CAAsC,KAAK2G,cAA3C;AAFwB,KAAxC;AAKA,SAAKykB,QAAL,GAAgB;AAAEmc,MAAAA,WAAW,EAAE;AAAf,KAAhB;AAEA,QAAIx0B,SAAS,EAAb,EAAiB;AACf,WAAK/M,OAAL,GAAe,eAAc,KAAKA,OAAnB,EAA4B;AACzCuI,QAAAA,WAAW,EAAE5L,aAAa,CAACtC,IAAI,CAACkO,WAAN,EAAmBvQ,MAAM,CAACqP,QAAP,CAAgB4E,MAAnC,CADe;AAAA,OAA5B,CAAf;AAGD;AASD,QAAI,CAAC5R,IAAI,CAACqX,YAAN,IAAsBrX,IAAI,CAACqX,YAAL,KAAsB,CAAhD,EAAmD;AACjD,WAAK1R,OAAL,CAAa0R,YAAb,GAA4BlT,sBAA5B;AACD,KAFD,MAEO;AACL,WAAKwB,OAAL,CAAa0R,YAAb,GAA4BrX,IAAI,CAACqX,YAAjC;AACD;AAKD,SAAK1R,OAAL,CAAayR,cAAb,GAA8B,CAAC,CAACpX,IAAI,CAACoX,cAArC;AAEA,SAAK7K,OAAL,GAAe;AACb8O,MAAAA,KAAK,EAAE1O,YAAY,CAAChN,IAAb,CAAkB,IAAlB,EAAwB,IAAxB,CADM;AAEbiJ,MAAAA,MAAM,EAAE0D,aAAa,CAAC3M,IAAd,CAAmB,IAAnB,EAAyB,IAAzB,CAFK;AAGbsI,MAAAA,GAAG,EAAEuE,UAAU,CAAC7M,IAAX,CAAgB,IAAhB,EAAsB,IAAtB,CAHQ;AAIb8M,MAAAA,OAAO,EAAEG,cAAc,CAACjN,IAAf,CAAoB,IAApB,EAA0B,IAA1B,CAJI;AAKbkN,MAAAA,oBAAoB,EAAEA,oBAAoB,CAAClN,IAArB,CAA0B,IAA1B,EAAgC,IAAhC;AALT,KAAf;AAQA,SAAKwnC,WAAL,GAAmB,IAAI1d,YAAJ,EAAnB;AACA,QAAM2d,QAAQ,GAAG,SAAXA,QAAW,CAACrhC,MAAD;AACf,aAAO0jB,YAAY,CAACjwB,SAAb,CAAuBqJ,IAAvB,CAA4BlD,IAA5B,CAAiC,KAAI,CAACwnC,WAAtC,EAAmDphC,MAAnD,EAA2D,IAA3D,CAAP;AACD,KAFD;AAKA,QAAMshC,iBAAiB,GAAGD,QAAQ,CAAChqB,eAAe,CAACzd,IAAhB,CAAqB,IAArB,EAA2B,IAA3B,CAAD,CAAlC;AACA,QAAM2nC,kBAAkB,GAAuB,eAAcD,iBAAd,EAAiC;AAE9E7pB,MAAAA,YAAY,EAAE,sBAASpb,GAAT;AACZzE,QAAAA,MAAM,CAACqP,QAAP,GAAkB5K,GAAlB;AACD;AAJ6E,KAAjC,CAA/C;AAOA,QAAMmlC,cAAc,GAAGH,QAAQ,CAACzpB,YAAY,CAAChe,IAAb,CAAkB,IAAlB,EAAwB,IAAxB,CAAD,CAA/B;AACA,QAAM6nC,eAAe,GAA0B,eAAcD,cAAd,EAA8B;AAE3E3pB,MAAAA,WAAW,EAAE;AACX,eAAOjgB,MAAM,CAAC8pC,OAAd;AACD,OAJ0E;AAO3EzpB,MAAAA,YAAY,EAAE;AACZ,eAAOrgB,MAAM,CAACqP,QAAd;AACD,OAT0E;AAY3E8Q,MAAAA,YAAY,EAAE;AACZ,eAAOngB,MAAM,CAACkT,QAAd;AACD;AAd0E,KAA9B,CAA/C;AAgBA,SAAK1D,KAAL,GAAa;AACX+I,MAAAA,kBAAkB,EAAEA,kBAAkB,CAACvW,IAAnB,CAAwB,IAAxB,EAA8B,IAA9B,CADT;AAEX0Z,MAAAA,qBAAqB,EAAEA,qBAAqB,CAAC1Z,IAAtB,CAA2B,IAA3B,EAAiC,IAAjC,CAFZ;AAGX2b,MAAAA,gBAAgB,EAAEA,gBAAgB,CAAC3b,IAAjB,CAAsB,IAAtB,EAA4B,IAA5B,CAHP;AAIXwd,MAAAA,YAAY,EAAEA,YAAY,CAACxd,IAAb,CAAkB,IAAlB,EAAwB,IAAxB,CAJH;AAKXyd,MAAAA,eAAe,EAAEkqB,kBALN;AAMX3pB,MAAAA,YAAY,EAAE6pB,eANH;AAOX1tB,MAAAA,MAAM,EAAEvB,WAPG;AAQXmvB,MAAAA,MAAM,EAAEhvB,WAAW,CAAC/Y,IAAZ,CAAiB,IAAjB,EAAuB,IAAvB,CARG;AASX4mB,MAAAA,KAAK,EAAEtK,UAAU,CAACtc,IAAX,CAAgB,IAAhB,EAAsB,IAAtB,CATI;AAUX4b,MAAAA,sBAAsB,EAAEA,sBAAsB,CAAC5b,IAAvB,CAA4B,IAA5B,EAAkC,IAAlC,CAVb;AAWXwc,MAAAA,WAAW,EAAEA,WAAW,CAACxc,IAAZ,CAAiB,IAAjB,EAAuB,IAAvB,CAXF;AAYXyc,MAAAA,WAAW,EAAE,uBACXC,iBADW,EAEXC,aAFW;AAIX,eAAOF,WAAW,CAAC,KAAD,EAAOC,iBAAP,EAA0BC,aAA1B,CAAlB;AACD,OAjBU;AAkBXtY,MAAAA,MAAM,EAAEd,WAAW,CAACvD,IAAZ,CAAiB,IAAjB,EAAuB,IAAvB,CAlBG;AAmBXyV,MAAAA,eAAe,EAAEA,eAAe,CAACzV,IAAhB,CAAqB,IAArB,EAA2B,IAA3B;AAnBN,KAAb;AAuBA,QAAMgoC,MAAM,GAAG,CACb,kBADa,EAEb,cAFa,EAGb,QAHa,EAIb,OAJa,EAKb,wBALa,EAMb,aANa,CAAf;AAQAA,IAAAA,MAAM,CAACvnC,OAAP,CAAe,UAAAwC,GAAG;AAChB,MAAA,KAAI,CAACuK,KAAL,CAAWvK,GAAX,IAAkBwkC,QAAQ,CAAC,KAAI,CAACj6B,KAAL,CAAWvK,GAAX,CAAD,CAA1B;AACD,KAFD;AAKA,QAAMglC,qBAAqB,GAAGzB,gBAAgB,CAACxmC,IAAjB,CAAsB,IAAtB,EAA4B,IAA5B,CAA9B;AACA,SAAKqtB,GAAL,GAAW;AACTwF,MAAAA,QAAQ,EAAEA,QAAQ,CAAC7yB,IAAT,CAAc,IAAd,EAAoB,IAApB,CADD;AAETm3B,MAAAA,UAAU,EAAEA,UAAU,CAACn3B,IAAX,CAAgB,IAAhB,EAAsB,IAAtB,CAFH;AAGTy0B,MAAAA,eAAe,EAAE6B,YAAY,CAACt2B,IAAb,CAAkB,IAAlB,EAAwB,IAAxB,CAHR;AAKT+lC,MAAAA,YAAY,EAAEA,YAAY,CAAC/lC,IAAb,CAAkB,IAAlB,EAAwB,IAAxB,CALL;AAMTymC,MAAAA,QAAQ,EAAEA,QAAQ,CAACzmC,IAAT,CAAc,IAAd,EAAoB,IAApB,CAND;AAOTopB,MAAAA,KAAK,EAAE6e,qBAPE;AAQTzB,MAAAA,gBAAgB,EAAEyB,qBART;AASTt8B,MAAAA,IAAI,EAAEA,IAAI,CAAC3L,IAAL,CAAU,IAAV,EAAgB,IAAhB,CATG;AAUTy2B,MAAAA,OAAO,EAAEA,OAAO,CAACz2B,IAAR,CAAa,IAAb,EAAmB,IAAnB,CAVA;AAWT6K,MAAAA,MAAM,EAAEA,MAAM,CAAC7K,IAAP,CAAY,IAAZ,EAAkB,IAAlB,CAXC;AAYT0mC,MAAAA,eAAe,EAAEA,eAAe,CAAC1mC,IAAhB,CAAqB,IAArB,EAA2B,IAA3B,CAZR;AAeT2mC,MAAAA,6BAA6B,EAAEA,6BAA6B,CAAC3mC,IAA9B,CAAmC,IAAnC,EAAyC,IAAzC,CAftB;AAkBT2V,MAAAA,qBAAqB,EAAEA,qBAAqB,CAAC3V,IAAtB,CAA2B,IAA3B,EAAiC,IAAjC,CAlBd;AAmBTqU,MAAAA,0BAA0B,EAA1BA,0BAnBS;AAsBTgyB,MAAAA,yBAAyB,EAAEA,yBAAyB,CAACrmC,IAA1B,CAA+B,IAA/B,EAAqC,IAArC,CAtBlB;AAuBTkmC,MAAAA,qBAAqB,EAArBA,qBAvBS;AAwBTE,MAAAA,wBAAwB,EAAxBA,wBAxBS;AAyBTH,MAAAA,0BAA0B,EAA1BA,0BAzBS;AA2BThU,MAAAA,uBAAuB,EAAEA,uBAAuB,CAACjyB,IAAxB,CAA6B,IAA7B,EAAmC,IAAnC,CA3BhB;AA4BT8xB,MAAAA,qBAAqB,EAAEA,qBAAqB,CAAC9xB,IAAtB,CAA2B,IAA3B,EAAiC,IAAjC,CA5Bd;AA6BTmyB,MAAAA,kBAAkB,EAAEA,kBAAkB,CAACnyB,IAAnB,CAAwB,IAAxB,EAA8B,IAA9B,CA7BX;AA8BTqyB,MAAAA,mBAAmB,EAAEA,mBAAmB,CAACryB,IAApB,CAAyB,IAAzB,EAA+B,IAA/B,CA9BZ;AA+BTsyB,MAAAA,oBAAoB,EAAEA,oBAAoB,CAACtyB,IAArB,CAA0B,IAA1B,EAAgC,IAAhC,CA/Bb;AAgCTkyB,MAAAA,sBAAsB,EAAtBA,sBAhCS;AAiCTsS,MAAAA,OAAO,EAAE,iBAAC9S,IAAD;AACP,QAAA,KAAI,CAAC1rB,OAAL,CAAa0rB,IAAb,GAAoBA,IAApB;AACD,OAnCQ;AAoCT6S,MAAAA,OAAO,EAAE;AACP,eAAO,KAAI,CAACv+B,OAAL,CAAa0rB,IAApB;AACD,OAtCQ;AAuCT4U,MAAAA,UAAU,EAAEA,UAAU,CAACtmC,IAAX,CAAgB,IAAhB,EAAsB,IAAtB,CAvCH;AAwCT6mC,MAAAA,aAAa,EAAEA,aAAa,CAAC7mC,IAAd,CAAmB,IAAnB,EAAyB,IAAzB;AAxCN,KAAX;AA4CA,SAAKkoC,IAAL,GAAY;AACVtiC,MAAAA,gBAAgB,EAAEA,gBAAgB,CAAC5F,IAAjB,CAAsB,IAAtB,EAA4B,IAA5B;AADR,KAAZ;AAKA,SAAKqqB,WAAL,GAAmBA,WAAW,CAACrqB,IAAZ,CAAiB,IAAjB,EAAuB,IAAvB,CAAnB;AAEA,SAAKgkB,OAAL,GAAe,IAAImkB,OAAJ,EAAf;AAGA,SAAKnsB,YAAL,GAAoB,IAAI+H,YAAJ,CAAiB,IAAjB,EAAuB1jB,IAAI,CAAC2b,YAA5B,CAApB;AAGA,SAAKosB,gBAAL,GAAwB,IAAIld,gBAAJ,CAAqB,IAArB,CAAxB;AAGA,SAAKmd,cAAL,GAAsB,IAAIrgB,cAAJ,CAAmB,IAAnB,EAAyB3nB,IAAI,CAAC6nB,QAA9B,CAAtB;AACD;;;;+DAED;AAAA;AAAA;AAAA;AAAA;AAEE,qBAAKlM,YAAL,CAAkBoN,KAAlB;AACA,oBAAI,CAAC,KAAK5b,KAAL,CAAWiI,eAAX,EAAL,EAAmC;AACjC,uBAAK2yB,gBAAL,CAAsBzc,eAAtB;AACD;AALH;AAAA,uBAMQ,KAAK0c,cAAL,CAAoBjf,KAApB,EANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;8DASA;AAAA;AAAA;AAAA;AAAA;AAEE,qBAAKpN,YAAL,CAAkBwL,IAAlB;AAFF;AAAA,uBAGQ,KAAK6gB,cAAL,CAAoB7gB,IAApB,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;WAMA,oBAAWvhB,OAAX;AACE,WAAKD,OAAL,CAAaC,OAAb,GAAuB,eAAc,EAAd,EAAkB,KAAKD,OAAL,CAAaC,OAA/B,EAAwCA,OAAxC,CAAvB;AACD;;;;gEAID,kBAAa+D,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA,kDACS,KAAKs+B,qBAAL,CAA2Bt+B,IAA3B,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;+EAKA,kBAA4BA,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACEA,gBAAAA,IAAI,GAAGhJ,KAAK,CAACgJ,IAAI,IAAI,EAAT,CAAZ;AACMu+B,gBAAAA,kBAFR,GAE6B,SAArBA,kBAAqB,CAACviC,OAAD;AACzB,yBAAOgE,IAAI,CAACw+B,eAAZ;AACA,yBAAOh/B,iBAAiB,CAAC,MAAD,EAAO,eAAP,EAAwBQ,IAAxB,EAA8BhE,OAA9B,CAAxB;AACD,iBALH;AAAA,oBAMOgE,IAAI,CAACw+B,eANZ;AAAA;AAAA;AAAA;AAAA,kDAOWD,kBAAkB,EAP7B;AAAA;AAAA,kDASS,KAAKle,WAAL,GACN5sB,IADM,CACD,UAAS4sB,WAAT;AACJ,yBAAOke,kBAAkB,CAAC;AACxBtiC,oBAAAA,OAAO,EAAE;AACP,8CAAwBokB;AADjB;AADe,mBAAD,CAAzB;AAKD,iBAPM,CATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;4EAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyBrgB,gBAAAA,IAAzB,8DAA2D,EAA3D;AACUy+B,gBAAAA,WADV,GAC+Cz+B,IAD/C,CACUy+B,WADV,EAC0BC,gBAD1B,UAC+C1+B,MAAvC,cAAA,EADR;AAAA,qBAEK,KAAKohB,QAAL,CAAcmc,WAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAOE,qBAAKnc,QAAL,CAAcmc,WAAd,GAA4B,IAA5B;AAPF;AAUI,oBAAIkB,WAAJ,EAAiB;AACf,uBAAKE,cAAL,CAAoBF,WAApB;AACD;AACKp9B,gBAAAA,MAbV,GAamB,eAAc;AAE3BsD,kBAAAA,MAAM,EAAE,KAAK3I,OAAL,CAAa2I,MAAb,IAAuB,CAAC,QAAD,EAAW,OAAX,EAAoB,SAApB;AAFJ,iBAAd,EAGZ+5B,gBAHY,CAbnB;AAAA;AAAA,uBAiBU,KAAKl7B,KAAL,CAAWiQ,eAAX,CAA2BpS,MAA3B,CAjBV;AAAA;AAAA;AAmBI,qBAAK+f,QAAL,CAAcmc,WAAd,GAA4B,KAA5B;AAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;WAwBA;;AACE,aAAO,KAAK36B,OAAL,CAAa8O,KAAb;AAAA,OACNje,IADM,8CACD;AAAA;AAAA;AAAA;AAAA;AAEJ,gBAAA,MAAI,CAACue,YAAL,CAAkBuB,KAAlB;AAFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADC,IAKNrV,KALM,CAKA,UAAS9L,CAAT;AACL,YAAIA,CAAC,CAACjC,IAAF,KAAW,cAAX,IAA6BiC,CAAC,CAAChC,SAAF,KAAgB,UAAjD,EAA6D;AAE3D,iBAAO,IAAP;AACD;AACD,cAAMgC,CAAN;AACD,OAXM,CAAP;AAYD;;;;2EAGD,kBAAwBkK,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACOA,WADP;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEyB,KAAK0V,YAAL,CAAkBY,SAAlB,EAFzB;AAAA;AAEItW,gBAAAA,WAFJ,kBAEwDA,WAFxD;AAGUsiC,gBAAAA,cAHV,GAG2B,KAAK5sB,YAAL,CAAkByK,mBAAlB,CAAsC,aAAtC,CAH3B;AAII,qBAAKzK,YAAL,CAAkB6G,MAAlB,CAAyB+lB,cAAzB;AAJJ;AAAA,oBAOOtiC,WAPP;AAAA;AAAA;AAAA;AAAA,kDAQW,SAAQxG,OAAR,CAAgB,IAAhB,CARX;AAAA;AAAA,kDAUS,KAAK0N,KAAL,CAAWu6B,MAAX,CAAkBzhC,WAAlB,CAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;4EAcA,kBAAyBqJ,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACOA,YADP;AAAA;AAAA;AAAA;AAAA;AAAA,uBAE0B,KAAKqM,YAAL,CAAkBY,SAAlB,EAF1B;AAAA;AAEIjN,gBAAAA,YAFJ,kBAEyDA,YAFzD;AAGUk5B,gBAAAA,eAHV,GAG4B,KAAK7sB,YAAL,CAAkByK,mBAAlB,CAAsC,cAAtC,CAH5B;AAII,qBAAKzK,YAAL,CAAkB6G,MAAlB,CAAyBgmB,eAAzB;AAJJ;AAAA,oBAOOl5B,YAPP;AAAA;AAAA;AAAA;AAAA,kDAQW,SAAQ7P,OAAR,CAAgB,IAAhB,CARX;AAAA;AAAA,kDAUS,KAAK0N,KAAL,CAAWu6B,MAAX,CAAkBp4B,YAAlB,CAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;WAaA;UAAsB3J,8EAAqC;AACzD,UACExC,OADF,GAIIwC,OAJJ,CACExC,OADF;AAAA,UAEE+tB,qBAFF,GAIIvrB,OAJJ,CAEEurB,qBAFF;AAAA,UAGE9iB,KAHF,GAIIzI,OAJJ,CAGEyI,KAHF;AAKA,UAAI,CAACjL,OAAL,EAAc;AACZA,QAAAA,OAAO,GAAG,KAAKwY,YAAL,CAAkBO,aAAlB,GAAkC/Y,OAA5C;AACD;AACD,UAAI,CAACA,OAAL,EAAc;AACZ,eAAO,EAAP;AACD;AACD,UAAI,CAAC+tB,qBAAL,EAA4B;AAC1BA,QAAAA,qBAAqB,GAAG,KAAKvrB,OAAL,CAAaurB,qBAArC;AACD;AAED,UAAM3e,SAAS,GAAGH,YAAY,CAAC,IAAD,CAAZ,CAAmBG,SAArC;AACA,UAAMk2B,WAAW,GAAGtlC,OAAO,CAACA,OAA5B;AACA,UAAIulC,SAAS,GAAGn2B,SAAS,GAAG,iBAAZ,GAAgCzP,kBAAkB,CAAC2lC,WAAD,CAAlE;AACA,UAAIvX,qBAAJ,EAA2B;AACzBwX,QAAAA,SAAS,IAAI,+BAA+B5lC,kBAAkB,CAACouB,qBAAD,CAA9D;AACD;AAED,UAAI9iB,KAAJ,EAAW;AACTs6B,QAAAA,SAAS,IAAI,YAAY5lC,kBAAkB,CAACsL,KAAD,CAA3C;AACD;AAED,aAAOs6B,SAAP;AACD;;;;iEAGD,kBAAc/iC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AACEA,gBAAAA,OAAO,GAAG,eAAc,EAAd,EAAkBA,OAAlB,CAAV,CADF;AAIMgjC,gBAAAA,UAJN,GAImBhrC,MAAM,CAACqP,QAAP,CAAgB4E,MAJnC;AAKMg3B,gBAAAA,UALN,GAKmBjrC,MAAM,CAACqP,QAAP,CAAgBpD,IALnC;AAMMsnB,gBAAAA,qBANN,GAM8BvrB,OAAO,CAACurB,qBAAR,IACvB,KAAKvrB,OAAL,CAAaurB,qBADU,IAEvByX,UARP;AAUM1iC,gBAAAA,WAVN,GAUoBN,OAAO,CAACM,WAV5B;AAWMqJ,gBAAAA,YAXN,GAWqB3J,OAAO,CAAC2J,YAX7B;AAYMu5B,gBAAAA,iBAZN,GAY0BljC,OAAO,CAACkjC,iBAAR,KAA8B,KAZxD;AAaMC,gBAAAA,kBAbN,GAa2BnjC,OAAO,CAACmjC,kBAAR,KAA+B,KAb1D;AAeE,oBAAIA,kBAAkB,IAAI,OAAOx5B,YAAP,KAAwB,WAAlD,EAA+D;AAC7DA,kBAAAA,YAAY,GAAG,KAAKqM,YAAL,CAAkBO,aAAlB,GAAkC5M,YAAjD;AACD;AAED,oBAAIu5B,iBAAiB,IAAI,OAAO5iC,WAAP,KAAuB,WAAhD,EAA6D;AAC3DA,kBAAAA,WAAW,GAAG,KAAK0V,YAAL,CAAkBO,aAAlB,GAAkCjW,WAAhD;AACD;AAED,oBAAI,CAACN,OAAO,CAACxC,OAAb,EAAsB;AACpBwC,kBAAAA,OAAO,CAACxC,OAAR,GAAkB,KAAKwY,YAAL,CAAkBO,aAAlB,GAAkC/Y,OAApD;AACD;AAzBH,sBA2BM2lC,kBAAkB,IAAIx5B,YA3B5B;AAAA;AAAA;AAAA;AAAA;AAAA,uBA4BU,KAAKw5B,kBAAL,CAAwBx5B,YAAxB,CA5BV;AAAA;AAAA,sBA+BMu5B,iBAAiB,IAAI5iC,WA/B3B;AAAA;AAAA;AAAA;AAAA;AAAA,uBAgCU,KAAK4iC,iBAAL,CAAuB5iC,WAAvB,CAhCV;AAAA;AAmCQyiC,gBAAAA,SAnCR,GAmCoB,KAAKK,qBAAL,mCAAgCpjC;AAASurB,kBAAAA,qBAAqB,EAArBA;kBAAzC,CAnCpB;AAAA,oBAsCOwX,SAtCP;AAAA;AAAA;AAAA;AAAA,kDAwCW,KAAK/7B,YAAL;AAAA;AACNvP,gBAAAA,IADM,CACD;AACJ,sBAAI8zB,qBAAqB,KAAK0X,UAA9B,EAA0C;AACxCjrC,oBAAAA,MAAM,CAACqP,QAAP,CAAgBg8B,MAAhB,GADwC;AAEzC,mBAFD,MAEO;AACLrrC,oBAAAA,MAAM,CAACqP,QAAP,CAAgBC,MAAhB,CAAuBikB,qBAAvB;AACD;AACF,iBAPM,CAxCX;AAAA;AAiDI,oBAAIvrB,OAAO,CAACsjC,yBAAZ,EAAuC;AAErC,uBAAKttB,YAAL,CAAkBuB,KAAlB;AACD,iBAHD,MAGO;AACL,uBAAKvB,YAAL,CAAkButB,qBAAlB;AACD,iBAtDL;AAwDIvrC,gBAAAA,MAAM,CAACqP,QAAP,CAAgBC,MAAhB,CAAuBy7B,SAAvB;AAxDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;WA4DA,mBAAU/+B,IAAV;AACE,UAAIvH,GAAG,GAAG,2BAA2BO,aAAa,CAACgH,IAAD,CAAlD;AACA,UAAIhE,OAAO,GAAG;AACZC,QAAAA,OAAO,EAAE;AACP,oBAAU;AADH;AADG,OAAd;AAKA,aAAOqC,GAAG,CAAC,IAAD,EAAO7F,GAAP,EAAYuD,OAAZ,CAAV;AACD;;;;yEAQD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsBA,gBAAAA,OAAtB,iEAAwD,EAAxD;AAAA,wCAEoC,KAAKgW,YAAL,CAAkBxT,UAAlB,EAFpC,EAEUya,SAFV,yBAEUA,SAFV,EAEqBC,UAFrB,yBAEqBA,UAFrB;AAIQsmB,gBAAAA,WAJR,GAIsBxjC,OAAO,CAACyjC,cAAR,GAAyBzjC,OAAO,CAACyjC,cAAR,KAA2B,OAApD,GAA8DxmB,SAJpF;AAKQymB,gBAAAA,YALR,GAKuB1jC,OAAO,CAACyjC,cAAR,GAAyBzjC,OAAO,CAACyjC,cAAR,KAA2B,QAApD,GAA+DvmB,UALtF;AAAA,yCAOwB,KAAKlH,YAAL,CAAkBO,aAAlB,EAPxB,EAOQjW,WAPR,0BAOQA,WAPR;AAAA,sBAQMA,WAAW,IAAI,KAAK0V,YAAL,CAAkB2tB,UAAlB,CAA6BrjC,WAA7B,CARrB;AAAA;AAAA;AAAA;AASIA,gBAAAA,WAAW,GAAGpI,SAAd;AATJ,qBAUQsrC,WAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAY4B,KAAKxtB,YAAL,CAAkB4K,KAAlB,CAAwB,aAAxB,CAZ5B;AAAA;AAYQtgB,gBAAAA,WAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBW,oBAAIojC,YAAJ,EAAkB;AACvB,uBAAK1tB,YAAL,CAAkB6G,MAAlB,CAAyB,aAAzB;AACD;AAlBL;AAAA,yCAqBoB,KAAK7G,YAAL,CAAkBO,aAAlB,EArBpB,EAqBQ/Y,OArBR,0BAqBQA,OArBR;AAAA,sBAsBMA,OAAO,IAAI,KAAKwY,YAAL,CAAkB2tB,UAAlB,CAA6BnmC,OAA7B,CAtBjB;AAAA;AAAA;AAAA;AAuBIA,gBAAAA,OAAO,GAAGtF,SAAV;AAvBJ,qBAwBQsrC,WAxBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA0BwB,KAAKxtB,YAAL,CAAkB4K,KAAlB,CAAwB,SAAxB,CA1BxB;AAAA;AA0BQpjB,gBAAAA,OA1BR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8BW,oBAAIkmC,YAAJ,EAAkB;AACvB,uBAAK1tB,YAAL,CAAkB6G,MAAlB,CAAyB,SAAzB;AACD;AAhCL;AAAA,mDAmCS,CAAC,EAAEvc,WAAW,IAAI9C,OAAjB,CAnCV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;iEAsCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCACmC,KAAKwY,YAAL,CAAkBO,aAAlB,EADnC,EACU/Y,OADV,0BACUA,OADV,EACmB8C,WADnB,0BACmBA,WADnB;AAAA,mDAES,KAAKkH,KAAL,CAAWiP,WAAX,CAAuBnW,WAAvB,EAAoC9C,OAApC,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;WAKA;AACE,mCAAoB,KAAKwY,YAAL,CAAkBO,aAAlB,EAApB;AAAA,UAAQ/Y,OAAR,0BAAQA,OAAR;AACA,aAAOA,OAAO,GAAGA,OAAO,CAACA,OAAX,GAAqBtF,SAAnC;AACD;;;WAED;AACE,mCAAwB,KAAK8d,YAAL,CAAkBO,aAAlB,EAAxB;AAAA,UAAQjW,WAAR,0BAAQA,WAAR;AACA,aAAOA,WAAW,GAAGA,WAAW,CAACA,WAAf,GAA6BpI,SAA/C;AACD;;;WAED;AACE,mCAAyB,KAAK8d,YAAL,CAAkBO,aAAlB,EAAzB;AAAA,UAAQ5M,YAAR,0BAAQA,YAAR;AACA,aAAOA,YAAY,GAAGA,YAAY,CAACA,YAAhB,GAA+BzR,SAAlD;AACD;;;;iFAKD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAC2B,KAAKsP,KAAL,CAAWwQ,YAAX,EAD3B;AAAA;AAAA;AACUzD,gBAAAA,MADV,yBACUA,MADV;AAEE,qBAAKyB,YAAL,CAAkB6K,SAAlB,CAA4BtM,MAA5B;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;WAKA,wBAAekuB,WAAf,EAAoCh6B,KAApC;AAEE,UAAMoT,cAAc,GAAGkP,WAAc,CAAChQ,iBAAf,EAAvB;AACAc,MAAAA,cAAc,CAACK,OAAf,CAAuB3c,yBAAvB,EAAkDkjC,WAAlD;AAGAh6B,MAAAA,KAAK,GAAGA,KAAK,IAAI,KAAKzI,OAAL,CAAayI,KAA9B;AACA,UAAIA,KAAJ,EAAW;AACT,YAAMwf,aAAa,GAAG,KAAKtnB,cAAL,CAAoBijC,qBAApB,EAAtB;AACA3b,QAAAA,aAAa,CAAC/L,OAAd,CAAsBzT,KAAtB,EAA6Bg6B,WAA7B;AACD;AACF;;;WAED,wBAAeh6B,KAAf;AAEEA,MAAAA,KAAK,GAAGA,KAAK,IAAI,KAAKzI,OAAL,CAAayI,KAA9B;AACA,UAAIA,KAAJ,EAAW;AACT,YAAMwf,aAAa,GAAG,KAAKtnB,cAAL,CAAoBijC,qBAApB,EAAtB;AACA,YAAMnB,WAAW,GAAGxa,aAAa,CAAChM,OAAd,CAAsBxT,KAAtB,CAApB;AACA,YAAIg6B,WAAJ,EAAiB;AACf,iBAAOA,WAAP;AACD;AACF;AAGD,UAAMhiC,OAAO,GAAGsqB,WAAc,CAAChQ,iBAAf,EAAhB;AACA,aAAOta,OAAO,GAAGA,OAAO,CAACwb,OAAR,CAAgB1c,yBAAhB,KAA8CrH,SAAjD,GAA6DA,SAA3E;AACD;;;WAED,2BAAkBuQ,KAAlB;AAEE,UAAMhI,OAAO,GAAGsqB,WAAc,CAAChQ,iBAAf,EAAhB;AACAta,MAAAA,OAAO,CAAC0b,UAAR,CAAmB5c,yBAAnB;AAGAkJ,MAAAA,KAAK,GAAGA,KAAK,IAAI,KAAKzI,OAAL,CAAayI,KAA9B;AACA,UAAIA,KAAJ,EAAW;AACT,YAAMwf,aAAa,GAAG,KAAKtnB,cAAL,CAAoBijC,qBAApB,EAAtB;AACA3b,QAAAA,aAAa,CAAC9L,UAAd,IAA4B8L,aAAa,CAAC9L,UAAd,CAAyB1T,KAAzB,CAA5B;AACD;AACF;;;WAED;AACE,aAAOgH,eAAe,CAAC,IAAD,CAAtB;AACD;;;;6EAED,mBAA0B8E,MAA1B,EAA2CkuB,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AACMh6B,gBAAAA,KADN,GACc,KAAKzI,OAAL,CAAayI,KAD3B;AAAA,qBAIM8L,MAJN;AAAA;AAAA;AAAA;AAKI,qBAAKyB,YAAL,CAAkB6K,SAAlB,CAA4BtM,MAA5B;AACAkuB,gBAAAA,WAAW,GAAGA,WAAW,IAAI,KAAKoB,cAAL,CAAoB,KAAK7jC,OAAL,CAAayI,KAAjC,CAA7B;AANJ;AAAA;AAAA;AAAA,qBAOa,KAAKgH,eAAL,EAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAUkCkJ,yBAAyB,CAAC,IAAD,EAAO,EAAP,CAV3D;AAAA;AAUYmrB,gBAAAA,aAVZ;AAWMr7B,gBAAAA,KAAK,GAAGq7B,aAAa,CAACr7B,KAAtB;AACAg6B,gBAAAA,WAAW,GAAGA,WAAW,IAAI,KAAKoB,cAAL,CAAoBp7B,KAApB,CAA7B;AAZN;AAAA,uBAaY,KAAKs7B,uBAAL,EAbZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAgBY,KAAK3B,gBAAL,CAAsBzc,eAAtB,EAhBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAwBQ,KAAKyc,gBAAL,CAAsBzc,eAAtB,EAxBR;AAAA;AA2BE,qBAAKqe,iBAAL,CAAuBv7B,KAAvB,EA3BF;AA8BUgjB,gBAAAA,kBA9BV,GA8BiC,KAAKzrB,OA9BtC,CA8BUyrB,kBA9BV;AAAA,qBA+BMA,kBA/BN;AAAA;AAAA;AAAA;AAAA;AAAA,uBAgCUA,kBAAkB,CAAC,IAAD,EAAOgX,WAAP,CAhC5B;AAAA;AAAA;AAAA;AAAA;AAiCS,oBAAIA,WAAJ,EAAiB;AACtBzqC,kBAAAA,MAAM,CAACqP,QAAP,CAAgBzR,OAAhB,CAAwB6sC,WAAxB;AACD;AAnCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;WAsCA;AACE,aAAO,CAAC,CAAC,KAAKziC,OAAL,CAAakO,IAAtB;AACD;;;WAED,yBAAgBtG,YAAhB;AACE,UAAIq8B,eAAe,GAAG,KAAtB;AACA,UAAI9pC,KAAK,CAAC4K,OAAN,CAAc,KAAK/E,OAAL,CAAa4H,YAA3B,KAA4C,KAAK5H,OAAL,CAAa4H,YAAb,CAA0B5R,MAA1E,EAAkF;AAAA;AAChFiuC,QAAAA,eAAe,GAAG,2CAAKjkC,OAAL,CAAa4H,YAAb,mBAAkCA,YAAlC,KAAmD,CAArE;AACD,OAFD,MAEO;AACLq8B,QAAAA,eAAe,GAAG,KAAKjkC,OAAL,CAAa4H,YAAb,KAA8BA,YAAhD;AACD;AACD,aAAOq8B,eAAP;AACD;;;WAED;AACE,aAAO,KAAKA,eAAL,CAAqB,MAArB,CAAP;AACD;;;WAOD;AAGE,aAAO,KAAKjkC,OAAL,CAAagK,MAAb,CAAqB/L,KAArB,CAA2B,UAA3B,EAAuC,CAAvC,CAAP;AACD;;;WAGD,wBAAe+F,IAAf;AACE,aAAOR,iBAAiB,CAAC,IAAD,EAAO,iCAAP,EAA0CQ,IAA1C,CAAxB;AACD;;;WAGD,uBAAcA,IAAd;AACE,aAAOR,iBAAiB,CAAC,IAAD,EAAO,+BAAP,EAAwCQ,IAAxC,CAAxB;AACD;;;WAGD,6BAAoBA,IAApB;AACE,aAAOR,iBAAiB,CAAC,IAAD,EAAO,8BAAP,EAAuCQ,IAAvC,CAAxB;AACD;;;;yEAGD,mBAAsBhE,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACOA,OAAO,CAACM,WADf;AAAA;AAAA;AAAA;AAAA;AAAA,uBAE+B,KAAK0V,YAAL,CAAkBY,SAAlB,EAF/B;AAAA;AAEUtW,gBAAAA,WAFV,mBAE8DA,WAF9D;AAGIN,gBAAAA,OAAO,CAACM,WAAR,GAAsBA,WAAW,SAAX,IAAAA,WAAW,WAAX,SAAA,GAAAA,WAAW,CAAEA,WAAnC;AAHJ;AAAA,mDAKSJ,WAAW,CAAC,IAAD,EAAOF,OAAP,CALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;AAznBOqhC,iBAAA,GAAwBrxB,QAAxB;AACAqxB,eAAA,GAAoB7rC,QAApB;AACA6rC,iBAAA,GAAwB6C,QAAxB;AAioBT7C,QAAQ,CAACrxB,QAAT,GAAoBqxB,QAAQ,CAACxtC,SAAT,CAAmBmc,QAAnB,GAA8BA,QAAlD;AAGA,eAAcqxB,QAAd,EAAwB;AACtB8C,EAAAA,SAAS,EAATA;AADsB,CAAxB;;"}